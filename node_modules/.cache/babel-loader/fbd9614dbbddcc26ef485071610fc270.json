{"ast":null,"code":"import { createContext, useMemo, createElement, useContext } from 'react';\nimport { func, oneOfType, object, string, element, arrayOf } from 'prop-types';\nvar MuiPickersContext = createContext(null);\n\nvar MuiPickersUtilsProvider = function MuiPickersUtilsProvider(_ref) {\n  var Utils = _ref.utils,\n      children = _ref.children,\n      locale = _ref.locale,\n      libInstance = _ref.libInstance;\n  var utils = useMemo(function () {\n    return new Utils({\n      locale: locale,\n      instance: libInstance\n    });\n  }, [Utils, libInstance, locale]);\n  return createElement(MuiPickersContext.Provider, {\n    value: utils,\n    children: children\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? MuiPickersUtilsProvider.propTypes = {\n  utils: func.isRequired,\n  locale: oneOfType([object, string]),\n  children: oneOfType([element.isRequired, arrayOf(element.isRequired)]).isRequired\n} : void 0;\n\nvar checkUtils = function checkUtils(utils) {\n  if (!utils) {\n    // tslint:disable-next-line\n    throw new Error('Can not find utils in context. You either a) forgot to wrap your component tree in MuiPickersUtilsProvider; or b) mixed named and direct file imports.  Recommendation: use named imports from the module index.');\n  }\n};\n\nfunction useUtils() {\n  var utils = useContext(MuiPickersContext);\n  checkUtils(utils);\n  return utils;\n}\n\nexport { MuiPickersUtilsProvider as M, MuiPickersContext as a, useUtils as u };","map":{"version":3,"mappings":";;IAKaA,iBAAiB,GAAGC,cAA0D,IAA1D;;AASjC,IAAaC,uBAA+D,GAAG,SAAlEA,uBAAkE,OAKzE;MAJGC,KAIH,QAJJC;MACAC,QAGI,QAHJA;MACAC,MAEI,QAFJA;MACAC,WACI,QADJA;MAEMH,KAAK,GAAGH,QAAc;WAAM,IAAIE,KAAJ,CAAU;MAAEG,MAAM,EAANA,MAAF;MAAUE,QAAQ,EAAED;IAApB,CAAV;EAApB,GAAkE,CAC9EJ,KAD8E,EAE9EI,WAF8E,EAG9ED,MAH8E,CAAlE;SAMPG,cAACT,iBAAD,CAAmBU,QAAnBD;IAA4BE,KAAK,EAAEP,KAAnC;IAA0CC,QAAQ,EAAEA;EAApD;AAZF,CAAP;;AAeAO,+DAAuB,CAACC,SAAxBX,GAAoC;EAClCE,KAAK,EAAEU,KAAeC,UADY;EAElCT,MAAM,EAAEQ,UAAoB,CAACA,MAAD,EAAmBA,MAAnB,CAApB,CAF0B;EAGlCT,QAAQ,EAAES,UAAoB,CAC5BA,QAAkBC,UADU,EAE5BD,QAAkBA,QAAkBC,UAApC,CAF4B,CAApB,EAGPA;AAN+B,CAApC;;ACxBO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACZ,KAAD,EAA6D;MACjF,CAACA,OAAO;;UAEJ,IAAIa,KAAJ,CACJ,kNADI;;AAHH;;AASP,SAAgBC,QAAhB,GAA2B;MACnBd,KAAK,GAAGe,UAAU,CAACnB,iBAAD;EACxBgB,UAAU,CAACZ,KAAD,CAAVY;SAEOZ","names":["MuiPickersContext","React","MuiPickersUtilsProvider","Utils","utils","children","locale","libInstance","instance","React.createElement","Provider","value","process","propTypes","PropTypes","isRequired","checkUtils","Error","useUtils","useContext"],"sources":["/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/node_modules/@material-ui/src/MuiPickersUtilsProvider.tsx","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/node_modules/@material-ui/src/_shared/hooks/useUtils.ts"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { IUtils } from '@date-io/core/IUtils';\nimport { MaterialUiPickersDate } from './typings/date';\n\nexport const MuiPickersContext = React.createContext<IUtils<MaterialUiPickersDate> | null>(null);\n\nexport interface MuiPickersUtilsProviderProps {\n  utils: any;\n  children: React.ReactNode;\n  locale?: any;\n  libInstance?: any;\n}\n\nexport const MuiPickersUtilsProvider: React.FC<MuiPickersUtilsProviderProps> = ({\n  utils: Utils,\n  children,\n  locale,\n  libInstance,\n}) => {\n  const utils = React.useMemo(() => new Utils({ locale, instance: libInstance }), [\n    Utils,\n    libInstance,\n    locale,\n  ]);\n\n  return <MuiPickersContext.Provider value={utils} children={children} />;\n};\n\nMuiPickersUtilsProvider.propTypes = {\n  utils: PropTypes.func.isRequired,\n  locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  children: PropTypes.oneOfType([\n    PropTypes.element.isRequired,\n    PropTypes.arrayOf(PropTypes.element.isRequired),\n  ]).isRequired,\n};\n\nexport default MuiPickersUtilsProvider;\n","import { useContext } from 'react';\nimport { IUtils } from '@date-io/core/IUtils';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { MuiPickersContext } from '../../MuiPickersUtilsProvider';\n\nexport const checkUtils = (utils: IUtils<MaterialUiPickersDate> | null | undefined) => {\n  if (!utils) {\n    // tslint:disable-next-line\n    throw new Error(\n      'Can not find utils in context. You either a) forgot to wrap your component tree in MuiPickersUtilsProvider; or b) mixed named and direct file imports.  Recommendation: use named imports from the module index.'\n    );\n  }\n};\n\nexport function useUtils() {\n  const utils = useContext(MuiPickersContext);\n  checkUtils(utils);\n\n  return utils!;\n}\n"]},"metadata":{},"sourceType":"module"}