{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setUTCISODay;\n\nvar _index = _interopRequireDefault(require(\"../../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../toInteger/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\n\nfunction setUTCISODay(dirtyDate, dirtyDay) {\n  (0, _index2.default)(2, arguments);\n  var day = (0, _index3.default)(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = (0, _index.default)(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","setUTCISODay","_index","_interopRequireDefault","require","_index2","_index3","obj","__esModule","dirtyDate","dirtyDay","arguments","day","weekStartsOn","date","currentDay","getUTCDay","remainder","dayIndex","diff","setUTCDate","getUTCDate","module"],"sources":["/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/node_modules/date-fns/_lib/setUTCISODay/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setUTCISODay;\n\nvar _index = _interopRequireDefault(require(\"../../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../toInteger/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction setUTCISODay(dirtyDate, dirtyDay) {\n  (0, _index2.default)(2, arguments);\n  var day = (0, _index3.default)(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = (0, _index.default)(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAAnC;;AAEA,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,0BAAD,CAAR,CAApC;;AAEA,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEP,OAAO,EAAEO;EAAX,CAArC;AAAwD,C,CAE/F;AACA;;;AACA,SAASN,YAAT,CAAsBQ,SAAtB,EAAiCC,QAAjC,EAA2C;EACzC,CAAC,GAAGL,OAAO,CAACL,OAAZ,EAAqB,CAArB,EAAwBW,SAAxB;EACA,IAAIC,GAAG,GAAG,CAAC,GAAGN,OAAO,CAACN,OAAZ,EAAqBU,QAArB,CAAV;;EAEA,IAAIE,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;IACjBA,GAAG,GAAGA,GAAG,GAAG,CAAZ;EACD;;EAED,IAAIC,YAAY,GAAG,CAAnB;EACA,IAAIC,IAAI,GAAG,CAAC,GAAGZ,MAAM,CAACF,OAAX,EAAoBS,SAApB,CAAX;EACA,IAAIM,UAAU,GAAGD,IAAI,CAACE,SAAL,EAAjB;EACA,IAAIC,SAAS,GAAGL,GAAG,GAAG,CAAtB;EACA,IAAIM,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAb,IAAkB,CAAjC;EACA,IAAIE,IAAI,GAAG,CAACD,QAAQ,GAAGL,YAAX,GAA0B,CAA1B,GAA8B,CAA/B,IAAoCD,GAApC,GAA0CG,UAArD;EACAD,IAAI,CAACM,UAAL,CAAgBN,IAAI,CAACO,UAAL,KAAoBF,IAApC;EACA,OAAOL,IAAP;AACD;;AAEDQ,MAAM,CAACxB,OAAP,GAAiBA,OAAO,CAACE,OAAzB"},"metadata":{},"sourceType":"script"}