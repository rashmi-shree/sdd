{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ToWords = exports.DefaultToWordsOptions = exports.DefaultConverterOptions = void 0;\n\nconst en_BD_1 = __importDefault(require(\"./locales/en-BD\"));\n\nconst en_GH_1 = __importDefault(require(\"./locales/en-GH\"));\n\nconst en_IN_1 = __importDefault(require(\"./locales/en-IN\"));\n\nconst en_MM_1 = __importDefault(require(\"./locales/en-MM\"));\n\nconst en_MU_1 = __importDefault(require(\"./locales/en-MU\"));\n\nconst en_NG_1 = __importDefault(require(\"./locales/en-NG\"));\n\nconst en_US_1 = __importDefault(require(\"./locales/en-US\"));\n\nconst en_GB_1 = __importDefault(require(\"./locales/en-GB\"));\n\nconst fa_IR_1 = __importDefault(require(\"./locales/fa-IR\"));\n\nconst fr_FR_1 = __importDefault(require(\"./locales/fr-FR\"));\n\nconst gu_IN_1 = __importDefault(require(\"./locales/gu-IN\"));\n\nconst hi_IN_1 = __importDefault(require(\"./locales/hi-IN\"));\n\nconst mr_IN_1 = __importDefault(require(\"./locales/mr-IN\"));\n\nconst tr_TR_1 = __importDefault(require(\"./locales/tr-TR\"));\n\nconst nl_SR_1 = __importDefault(require(\"./locales/nl-SR\"));\n\nexports.DefaultConverterOptions = {\n  currency: false,\n  ignoreDecimal: false,\n  ignoreZeroCurrency: false,\n  doNotAddOnly: false\n};\nexports.DefaultToWordsOptions = {\n  localeCode: 'en-IN',\n  converterOptions: exports.DefaultConverterOptions\n};\n\nclass ToWords {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.options = {};\n    this.locale = undefined;\n    this.options = Object.assign({}, exports.DefaultToWordsOptions, options);\n  }\n\n  getLocaleClass() {\n    /* eslint-disable @typescript-eslint/no-var-requires */\n    switch (this.options.localeCode) {\n      case 'en-BD':\n        return en_BD_1.default;\n\n      case 'en-GH':\n        return en_GH_1.default;\n\n      case 'en-IN':\n        return en_IN_1.default;\n\n      case 'en-MM':\n        return en_MM_1.default;\n\n      case 'en-MU':\n        return en_MU_1.default;\n\n      case 'en-NG':\n        return en_NG_1.default;\n\n      case 'en-US':\n        return en_US_1.default;\n\n      case 'en-GB':\n        return en_GB_1.default;\n\n      case 'fa-IR':\n        return fa_IR_1.default;\n\n      case 'fr-FR':\n        return fr_FR_1.default;\n\n      case 'gu-IN':\n        return gu_IN_1.default;\n\n      case 'hi-IN':\n        return hi_IN_1.default;\n\n      case 'mr-IN':\n        return mr_IN_1.default;\n\n      case 'tr-TR':\n        return tr_TR_1.default;\n\n      case 'nl-SR':\n        return nl_SR_1.default;\n    }\n    /* eslint-enable @typescript-eslint/no-var-requires */\n\n\n    throw new Error(`Unknown Locale \"${this.options.localeCode}\"`);\n  }\n\n  getLocale() {\n    if (this.locale === undefined) {\n      const LocaleClass = this.getLocaleClass();\n      this.locale = new LocaleClass();\n    }\n\n    return this.locale;\n  }\n\n  convert(number) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options = Object.assign({}, this.options.converterOptions, options);\n\n    if (!this.isValidNumber(number)) {\n      throw new Error(`Invalid Number \"${number}\"`);\n    }\n\n    if (options.ignoreDecimal) {\n      number = Number.parseInt(number.toString());\n    }\n\n    let words = [];\n\n    if (options.currency) {\n      words = this.convertCurrency(number, options);\n    } else {\n      words = this.convertNumber(number);\n    }\n\n    return words.join(' ');\n  }\n\n  convertNumber(number) {\n    var _a, _b, _c;\n\n    const locale = this.getLocale();\n    const isNegativeNumber = number < 0;\n\n    if (isNegativeNumber) {\n      number = Math.abs(number);\n    }\n\n    const split = number.toString().split('.');\n    const ignoreZero = this.isNumberZero(number) && locale.config.ignoreZeroInDecimals;\n    let words = this.convertInternal(Number(split[0]));\n    const isFloat = this.isFloat(number);\n\n    if (isFloat && ignoreZero) {\n      words = [];\n    }\n\n    const wordsWithDecimal = [];\n\n    if (isFloat) {\n      if (!ignoreZero) {\n        wordsWithDecimal.push(locale.config.texts.point);\n      }\n\n      if (split[1].startsWith('0') && !((_a = locale.config) === null || _a === void 0 ? void 0 : _a.decimalLengthWordMapping)) {\n        const zeroWords = [];\n\n        for (const num of split[1]) {\n          zeroWords.push(...this.convertInternal(Number(num)));\n        }\n\n        wordsWithDecimal.push(...zeroWords);\n      } else {\n        wordsWithDecimal.push(...this.convertInternal(Number(split[1])));\n        const decimalLengthWord = (_c = (_b = locale.config) === null || _b === void 0 ? void 0 : _b.decimalLengthWordMapping) === null || _c === void 0 ? void 0 : _c[split[1].length];\n\n        if (decimalLengthWord) {\n          wordsWithDecimal.push(decimalLengthWord);\n        }\n      }\n    }\n\n    const isEmpty = words.length <= 0;\n\n    if (!isEmpty && isNegativeNumber) {\n      words.unshift(locale.config.texts.minus);\n    }\n\n    words.push(...wordsWithDecimal);\n    return words;\n  }\n\n  convertCurrency(number) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _a, _b, _c;\n\n    const locale = this.getLocale();\n    const isNegativeNumber = number < 0;\n\n    if (isNegativeNumber) {\n      number = Math.abs(number);\n    }\n\n    number = this.toFixed(number); // Extra check for isFloat to overcome 1.999 rounding off to 2\n\n    const split = number.toString().split('.');\n    let words = [...this.convertInternal(Number(split[0]))];\n\n    if (locale.config.currency.plural) {\n      words.push(locale.config.currency.plural);\n    }\n\n    const ignoreZero = this.isNumberZero(number) && (options.ignoreZeroCurrency || ((_a = locale.config) === null || _a === void 0 ? void 0 : _a.ignoreZeroInDecimals) && number !== 0);\n\n    if (ignoreZero) {\n      words = [];\n    }\n\n    const wordsWithDecimal = [];\n    const isFloat = this.isFloat(number);\n\n    if (isFloat) {\n      if (!ignoreZero) {\n        wordsWithDecimal.push(locale.config.texts.and);\n      }\n\n      wordsWithDecimal.push(...this.convertInternal(Number(split[1]) * (!locale.config.decimalLengthWordMapping ? Math.pow(10, 2 - split[1].length) : 1)));\n      const decimalLengthWord = (_c = (_b = locale.config) === null || _b === void 0 ? void 0 : _b.decimalLengthWordMapping) === null || _c === void 0 ? void 0 : _c[split[1].length];\n\n      if (decimalLengthWord === null || decimalLengthWord === void 0 ? void 0 : decimalLengthWord.length) {\n        wordsWithDecimal.push(decimalLengthWord);\n      }\n\n      wordsWithDecimal.push(locale.config.currency.fractionalUnit.plural);\n    } else if (locale.config.decimalLengthWordMapping && words.length) {\n      wordsWithDecimal.push(locale.config.currency.fractionalUnit.plural);\n    }\n\n    const isEmpty = words.length <= 0 && wordsWithDecimal.length <= 0;\n\n    if (!isEmpty && isNegativeNumber) {\n      words.unshift(locale.config.texts.minus);\n    }\n\n    if (!isEmpty && locale.config.texts.only && !options.doNotAddOnly) {\n      wordsWithDecimal.push(locale.config.texts.only);\n    }\n\n    if (wordsWithDecimal.length) {\n      words.push(...wordsWithDecimal);\n    }\n\n    return words;\n  }\n\n  convertInternal(number) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n\n    const locale = this.getLocale();\n\n    if (locale.config.exactWordsMapping) {\n      const exactMatch = (_b = (_a = locale.config) === null || _a === void 0 ? void 0 : _a.exactWordsMapping) === null || _b === void 0 ? void 0 : _b.find(elem => {\n        return number === elem.number;\n      });\n\n      if (exactMatch) {\n        return [exactMatch.value];\n      }\n    }\n\n    const match = locale.config.numberWordsMapping.find(elem => {\n      return number >= elem.number;\n    });\n    const words = [];\n\n    if (number <= 100 || number < 1000 && locale.config.namedLessThan1000) {\n      words.push(match.value);\n      number -= match.number;\n\n      if (number > 0) {\n        if ((_d = (_c = locale.config) === null || _c === void 0 ? void 0 : _c.splitWord) === null || _d === void 0 ? void 0 : _d.length) {\n          words.push(locale.config.splitWord);\n        }\n\n        words.push(...this.convertInternal(number));\n      }\n\n      return words;\n    }\n\n    const quotient = Math.floor(number / match.number);\n    const remainder = number % match.number;\n    let matchValue = match.value;\n\n    if (quotient > 1 && ((_f = (_e = locale.config) === null || _e === void 0 ? void 0 : _e.pluralWords) === null || _f === void 0 ? void 0 : _f.find(word => word === match.value)) && ((_g = locale.config) === null || _g === void 0 ? void 0 : _g.pluralMark)) {\n      matchValue += locale.config.pluralMark;\n    }\n\n    if (quotient === 1 && ((_j = (_h = locale.config) === null || _h === void 0 ? void 0 : _h.ignoreOneForWords) === null || _j === void 0 ? void 0 : _j.includes(matchValue))) {\n      words.push(matchValue);\n    } else {\n      words.push(...this.convertInternal(quotient), matchValue);\n    }\n\n    if (remainder > 0) {\n      if ((_l = (_k = locale.config) === null || _k === void 0 ? void 0 : _k.splitWord) === null || _l === void 0 ? void 0 : _l.length) {\n        words.push(locale.config.splitWord);\n      }\n\n      words.push(...this.convertInternal(remainder));\n    }\n\n    return words;\n  }\n\n  toFixed(number) {\n    let precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    return Number(Number(number).toFixed(precision));\n  }\n\n  isFloat(number) {\n    return Number(number) === number && number % 1 !== 0;\n  }\n\n  isValidNumber(number) {\n    return !isNaN(parseFloat(number)) && isFinite(number);\n  }\n\n  isNumberZero(number) {\n    return number >= 0 && number < 1;\n  }\n\n}\n\nexports.ToWords = ToWords;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","ToWords","DefaultToWordsOptions","DefaultConverterOptions","en_BD_1","require","en_GH_1","en_IN_1","en_MM_1","en_MU_1","en_NG_1","en_US_1","en_GB_1","fa_IR_1","fr_FR_1","gu_IN_1","hi_IN_1","mr_IN_1","tr_TR_1","nl_SR_1","currency","ignoreDecimal","ignoreZeroCurrency","doNotAddOnly","localeCode","converterOptions","constructor","options","locale","undefined","assign","getLocaleClass","default","Error","getLocale","LocaleClass","convert","number","isValidNumber","Number","parseInt","toString","words","convertCurrency","convertNumber","join","_a","_b","_c","isNegativeNumber","Math","abs","split","ignoreZero","isNumberZero","config","ignoreZeroInDecimals","convertInternal","isFloat","wordsWithDecimal","push","texts","point","startsWith","decimalLengthWordMapping","zeroWords","num","decimalLengthWord","length","isEmpty","unshift","minus","toFixed","plural","and","pow","fractionalUnit","only","_d","_e","_f","_g","_h","_j","_k","_l","exactWordsMapping","exactMatch","find","elem","match","numberWordsMapping","namedLessThan1000","splitWord","quotient","floor","remainder","matchValue","pluralWords","word","pluralMark","ignoreOneForWords","includes","precision","isNaN","parseFloat","isFinite"],"sources":["/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/node_modules/to-words/dist/ToWords.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ToWords = exports.DefaultToWordsOptions = exports.DefaultConverterOptions = void 0;\nconst en_BD_1 = __importDefault(require(\"./locales/en-BD\"));\nconst en_GH_1 = __importDefault(require(\"./locales/en-GH\"));\nconst en_IN_1 = __importDefault(require(\"./locales/en-IN\"));\nconst en_MM_1 = __importDefault(require(\"./locales/en-MM\"));\nconst en_MU_1 = __importDefault(require(\"./locales/en-MU\"));\nconst en_NG_1 = __importDefault(require(\"./locales/en-NG\"));\nconst en_US_1 = __importDefault(require(\"./locales/en-US\"));\nconst en_GB_1 = __importDefault(require(\"./locales/en-GB\"));\nconst fa_IR_1 = __importDefault(require(\"./locales/fa-IR\"));\nconst fr_FR_1 = __importDefault(require(\"./locales/fr-FR\"));\nconst gu_IN_1 = __importDefault(require(\"./locales/gu-IN\"));\nconst hi_IN_1 = __importDefault(require(\"./locales/hi-IN\"));\nconst mr_IN_1 = __importDefault(require(\"./locales/mr-IN\"));\nconst tr_TR_1 = __importDefault(require(\"./locales/tr-TR\"));\nconst nl_SR_1 = __importDefault(require(\"./locales/nl-SR\"));\nexports.DefaultConverterOptions = {\n    currency: false,\n    ignoreDecimal: false,\n    ignoreZeroCurrency: false,\n    doNotAddOnly: false,\n};\nexports.DefaultToWordsOptions = {\n    localeCode: 'en-IN',\n    converterOptions: exports.DefaultConverterOptions,\n};\nclass ToWords {\n    constructor(options = {}) {\n        this.options = {};\n        this.locale = undefined;\n        this.options = Object.assign({}, exports.DefaultToWordsOptions, options);\n    }\n    getLocaleClass() {\n        /* eslint-disable @typescript-eslint/no-var-requires */\n        switch (this.options.localeCode) {\n            case 'en-BD':\n                return en_BD_1.default;\n            case 'en-GH':\n                return en_GH_1.default;\n            case 'en-IN':\n                return en_IN_1.default;\n            case 'en-MM':\n                return en_MM_1.default;\n            case 'en-MU':\n                return en_MU_1.default;\n            case 'en-NG':\n                return en_NG_1.default;\n            case 'en-US':\n                return en_US_1.default;\n            case 'en-GB':\n                return en_GB_1.default;\n            case 'fa-IR':\n                return fa_IR_1.default;\n            case 'fr-FR':\n                return fr_FR_1.default;\n            case 'gu-IN':\n                return gu_IN_1.default;\n            case 'hi-IN':\n                return hi_IN_1.default;\n            case 'mr-IN':\n                return mr_IN_1.default;\n            case 'tr-TR':\n                return tr_TR_1.default;\n            case 'nl-SR':\n                return nl_SR_1.default;\n        }\n        /* eslint-enable @typescript-eslint/no-var-requires */\n        throw new Error(`Unknown Locale \"${this.options.localeCode}\"`);\n    }\n    getLocale() {\n        if (this.locale === undefined) {\n            const LocaleClass = this.getLocaleClass();\n            this.locale = new LocaleClass();\n        }\n        return this.locale;\n    }\n    convert(number, options = {}) {\n        options = Object.assign({}, this.options.converterOptions, options);\n        if (!this.isValidNumber(number)) {\n            throw new Error(`Invalid Number \"${number}\"`);\n        }\n        if (options.ignoreDecimal) {\n            number = Number.parseInt(number.toString());\n        }\n        let words = [];\n        if (options.currency) {\n            words = this.convertCurrency(number, options);\n        }\n        else {\n            words = this.convertNumber(number);\n        }\n        return words.join(' ');\n    }\n    convertNumber(number) {\n        var _a, _b, _c;\n        const locale = this.getLocale();\n        const isNegativeNumber = number < 0;\n        if (isNegativeNumber) {\n            number = Math.abs(number);\n        }\n        const split = number.toString().split('.');\n        const ignoreZero = this.isNumberZero(number) && locale.config.ignoreZeroInDecimals;\n        let words = this.convertInternal(Number(split[0]));\n        const isFloat = this.isFloat(number);\n        if (isFloat && ignoreZero) {\n            words = [];\n        }\n        const wordsWithDecimal = [];\n        if (isFloat) {\n            if (!ignoreZero) {\n                wordsWithDecimal.push(locale.config.texts.point);\n            }\n            if (split[1].startsWith('0') && !((_a = locale.config) === null || _a === void 0 ? void 0 : _a.decimalLengthWordMapping)) {\n                const zeroWords = [];\n                for (const num of split[1]) {\n                    zeroWords.push(...this.convertInternal(Number(num)));\n                }\n                wordsWithDecimal.push(...zeroWords);\n            }\n            else {\n                wordsWithDecimal.push(...this.convertInternal(Number(split[1])));\n                const decimalLengthWord = (_c = (_b = locale.config) === null || _b === void 0 ? void 0 : _b.decimalLengthWordMapping) === null || _c === void 0 ? void 0 : _c[split[1].length];\n                if (decimalLengthWord) {\n                    wordsWithDecimal.push(decimalLengthWord);\n                }\n            }\n        }\n        const isEmpty = words.length <= 0;\n        if (!isEmpty && isNegativeNumber) {\n            words.unshift(locale.config.texts.minus);\n        }\n        words.push(...wordsWithDecimal);\n        return words;\n    }\n    convertCurrency(number, options = {}) {\n        var _a, _b, _c;\n        const locale = this.getLocale();\n        const isNegativeNumber = number < 0;\n        if (isNegativeNumber) {\n            number = Math.abs(number);\n        }\n        number = this.toFixed(number);\n        // Extra check for isFloat to overcome 1.999 rounding off to 2\n        const split = number.toString().split('.');\n        let words = [...this.convertInternal(Number(split[0]))];\n        if (locale.config.currency.plural) {\n            words.push(locale.config.currency.plural);\n        }\n        const ignoreZero = this.isNumberZero(number) &&\n            (options.ignoreZeroCurrency || (((_a = locale.config) === null || _a === void 0 ? void 0 : _a.ignoreZeroInDecimals) && number !== 0));\n        if (ignoreZero) {\n            words = [];\n        }\n        const wordsWithDecimal = [];\n        const isFloat = this.isFloat(number);\n        if (isFloat) {\n            if (!ignoreZero) {\n                wordsWithDecimal.push(locale.config.texts.and);\n            }\n            wordsWithDecimal.push(...this.convertInternal(Number(split[1]) * (!locale.config.decimalLengthWordMapping ? Math.pow(10, 2 - split[1].length) : 1)));\n            const decimalLengthWord = (_c = (_b = locale.config) === null || _b === void 0 ? void 0 : _b.decimalLengthWordMapping) === null || _c === void 0 ? void 0 : _c[split[1].length];\n            if (decimalLengthWord === null || decimalLengthWord === void 0 ? void 0 : decimalLengthWord.length) {\n                wordsWithDecimal.push(decimalLengthWord);\n            }\n            wordsWithDecimal.push(locale.config.currency.fractionalUnit.plural);\n        }\n        else if (locale.config.decimalLengthWordMapping && words.length) {\n            wordsWithDecimal.push(locale.config.currency.fractionalUnit.plural);\n        }\n        const isEmpty = words.length <= 0 && wordsWithDecimal.length <= 0;\n        if (!isEmpty && isNegativeNumber) {\n            words.unshift(locale.config.texts.minus);\n        }\n        if (!isEmpty && locale.config.texts.only && !options.doNotAddOnly) {\n            wordsWithDecimal.push(locale.config.texts.only);\n        }\n        if (wordsWithDecimal.length) {\n            words.push(...wordsWithDecimal);\n        }\n        return words;\n    }\n    convertInternal(number) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n        const locale = this.getLocale();\n        if (locale.config.exactWordsMapping) {\n            const exactMatch = (_b = (_a = locale.config) === null || _a === void 0 ? void 0 : _a.exactWordsMapping) === null || _b === void 0 ? void 0 : _b.find((elem) => {\n                return number === elem.number;\n            });\n            if (exactMatch) {\n                return [exactMatch.value];\n            }\n        }\n        const match = locale.config.numberWordsMapping.find((elem) => {\n            return number >= elem.number;\n        });\n        const words = [];\n        if (number <= 100 || (number < 1000 && locale.config.namedLessThan1000)) {\n            words.push(match.value);\n            number -= match.number;\n            if (number > 0) {\n                if ((_d = (_c = locale.config) === null || _c === void 0 ? void 0 : _c.splitWord) === null || _d === void 0 ? void 0 : _d.length) {\n                    words.push(locale.config.splitWord);\n                }\n                words.push(...this.convertInternal(number));\n            }\n            return words;\n        }\n        const quotient = Math.floor(number / match.number);\n        const remainder = number % match.number;\n        let matchValue = match.value;\n        if (quotient > 1 && ((_f = (_e = locale.config) === null || _e === void 0 ? void 0 : _e.pluralWords) === null || _f === void 0 ? void 0 : _f.find((word) => word === match.value)) && ((_g = locale.config) === null || _g === void 0 ? void 0 : _g.pluralMark)) {\n            matchValue += locale.config.pluralMark;\n        }\n        if (quotient === 1 && ((_j = (_h = locale.config) === null || _h === void 0 ? void 0 : _h.ignoreOneForWords) === null || _j === void 0 ? void 0 : _j.includes(matchValue))) {\n            words.push(matchValue);\n        }\n        else {\n            words.push(...this.convertInternal(quotient), matchValue);\n        }\n        if (remainder > 0) {\n            if ((_l = (_k = locale.config) === null || _k === void 0 ? void 0 : _k.splitWord) === null || _l === void 0 ? void 0 : _l.length) {\n                words.push(locale.config.splitWord);\n            }\n            words.push(...this.convertInternal(remainder));\n        }\n        return words;\n    }\n    toFixed(number, precision = 2) {\n        return Number(Number(number).toFixed(precision));\n    }\n    isFloat(number) {\n        return Number(number) === number && number % 1 !== 0;\n    }\n    isValidNumber(number) {\n        return !isNaN(parseFloat(number)) && isFinite(number);\n    }\n    isNumberZero(number) {\n        return number >= 0 && number < 1;\n    }\n}\nexports.ToWords = ToWords;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}