{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInMonths;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../differenceInCalendarMonths/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../compareAsc/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"../isLastDayOfMonth/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\n\nfunction differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  (0, _index4.default)(2, arguments);\n  var dateLeft = (0, _index.default)(dirtyDateLeft);\n  var dateRight = (0, _index.default)(dirtyDateRight);\n  var sign = (0, _index3.default)(dateLeft, dateRight);\n  var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if ((0, _index5.default)((0, _index.default)(dirtyDateLeft)) && difference === 1 && (0, _index3.default)(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}\n\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","differenceInMonths","_index","_interopRequireDefault","require","_index2","_index3","_index4","_index5","obj","__esModule","dirtyDateLeft","dirtyDateRight","arguments","dateLeft","dateRight","sign","difference","Math","abs","result","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","Number","module"],"sources":["/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/node_modules/date-fns/differenceInMonths/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInMonths;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../differenceInCalendarMonths/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../compareAsc/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"../isLastDayOfMonth/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nfunction differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  (0, _index4.default)(2, arguments);\n  var dateLeft = (0, _index.default)(dirtyDateLeft);\n  var dateRight = (0, _index.default)(dirtyDateRight);\n  var sign = (0, _index3.default)(dateLeft, dateRight);\n  var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if ((0, _index5.default)((0, _index.default)(dirtyDateLeft)) && difference === 1 && (0, _index3.default)(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}\n\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,kBAAlB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAAnC;;AAEA,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,wCAAD,CAAR,CAApC;;AAEA,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAApC;;AAEA,IAAIG,OAAO,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAApC;;AAEA,IAAII,OAAO,GAAGL,sBAAsB,CAACC,OAAO,CAAC,8BAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCM,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAET,OAAO,EAAES;EAAX,CAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASR,kBAAT,CAA4BU,aAA5B,EAA2CC,cAA3C,EAA2D;EACzD,CAAC,GAAGL,OAAO,CAACP,OAAZ,EAAqB,CAArB,EAAwBa,SAAxB;EACA,IAAIC,QAAQ,GAAG,CAAC,GAAGZ,MAAM,CAACF,OAAX,EAAoBW,aAApB,CAAf;EACA,IAAII,SAAS,GAAG,CAAC,GAAGb,MAAM,CAACF,OAAX,EAAoBY,cAApB,CAAhB;EACA,IAAII,IAAI,GAAG,CAAC,GAAGV,OAAO,CAACN,OAAZ,EAAqBc,QAArB,EAA+BC,SAA/B,CAAX;EACA,IAAIE,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAC,GAAGd,OAAO,CAACL,OAAZ,EAAqBc,QAArB,EAA+BC,SAA/B,CAAT,CAAjB;EACA,IAAIK,MAAJ,CANyD,CAM7C;;EAEZ,IAAIH,UAAU,GAAG,CAAjB,EAAoB;IAClBG,MAAM,GAAG,CAAT;EACD,CAFD,MAEO;IACL,IAAIN,QAAQ,CAACO,QAAT,OAAwB,CAAxB,IAA6BP,QAAQ,CAACQ,OAAT,KAAqB,EAAtD,EAA0D;MACxD;MACA;MACAR,QAAQ,CAACS,OAAT,CAAiB,EAAjB;IACD;;IAEDT,QAAQ,CAACU,QAAT,CAAkBV,QAAQ,CAACO,QAAT,KAAsBL,IAAI,GAAGC,UAA/C,EAPK,CAOuD;IAC5D;;IAEA,IAAIQ,kBAAkB,GAAG,CAAC,GAAGnB,OAAO,CAACN,OAAZ,EAAqBc,QAArB,EAA+BC,SAA/B,MAA8C,CAACC,IAAxE,CAVK,CAUyE;;IAE9E,IAAI,CAAC,GAAGR,OAAO,CAACR,OAAZ,EAAqB,CAAC,GAAGE,MAAM,CAACF,OAAX,EAAoBW,aAApB,CAArB,KAA4DM,UAAU,KAAK,CAA3E,IAAgF,CAAC,GAAGX,OAAO,CAACN,OAAZ,EAAqBW,aAArB,EAAoCI,SAApC,MAAmD,CAAvI,EAA0I;MACxIU,kBAAkB,GAAG,KAArB;IACD;;IAEDL,MAAM,GAAGJ,IAAI,IAAIC,UAAU,GAAGS,MAAM,CAACD,kBAAD,CAAvB,CAAb;EACD,CA3BwD,CA2BvD;;;EAGF,OAAOL,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;AACD;;AAEDO,MAAM,CAAC7B,OAAP,GAAiBA,OAAO,CAACE,OAAzB"},"metadata":{},"sourceType":"script"}