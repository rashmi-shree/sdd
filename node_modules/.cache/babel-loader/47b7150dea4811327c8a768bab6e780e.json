{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ToWords = exports.DefaultToWordsOptions = exports.DefaultConverterOptions = void 0;\n\nvar en_BD_1 = __importDefault(require(\"./locales/en-BD\"));\n\nvar en_GH_1 = __importDefault(require(\"./locales/en-GH\"));\n\nvar en_IN_1 = __importDefault(require(\"./locales/en-IN\"));\n\nvar en_MM_1 = __importDefault(require(\"./locales/en-MM\"));\n\nvar en_MU_1 = __importDefault(require(\"./locales/en-MU\"));\n\nvar en_NG_1 = __importDefault(require(\"./locales/en-NG\"));\n\nvar en_US_1 = __importDefault(require(\"./locales/en-US\"));\n\nvar en_GB_1 = __importDefault(require(\"./locales/en-GB\"));\n\nvar fa_IR_1 = __importDefault(require(\"./locales/fa-IR\"));\n\nvar fr_FR_1 = __importDefault(require(\"./locales/fr-FR\"));\n\nvar gu_IN_1 = __importDefault(require(\"./locales/gu-IN\"));\n\nvar hi_IN_1 = __importDefault(require(\"./locales/hi-IN\"));\n\nvar mr_IN_1 = __importDefault(require(\"./locales/mr-IN\"));\n\nvar tr_TR_1 = __importDefault(require(\"./locales/tr-TR\"));\n\nvar nl_SR_1 = __importDefault(require(\"./locales/nl-SR\"));\n\nexports.DefaultConverterOptions = {\n  currency: false,\n  ignoreDecimal: false,\n  ignoreZeroCurrency: false,\n  doNotAddOnly: false\n};\nexports.DefaultToWordsOptions = {\n  localeCode: 'en-IN',\n  converterOptions: exports.DefaultConverterOptions\n};\n\nvar ToWords = /*#__PURE__*/function () {\n  function ToWords() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ToWords);\n\n    this.options = {};\n    this.locale = undefined;\n    this.options = Object.assign({}, exports.DefaultToWordsOptions, options);\n  }\n\n  _createClass(ToWords, [{\n    key: \"getLocaleClass\",\n    value: function getLocaleClass() {\n      /* eslint-disable @typescript-eslint/no-var-requires */\n      switch (this.options.localeCode) {\n        case 'en-BD':\n          return en_BD_1.default;\n\n        case 'en-GH':\n          return en_GH_1.default;\n\n        case 'en-IN':\n          return en_IN_1.default;\n\n        case 'en-MM':\n          return en_MM_1.default;\n\n        case 'en-MU':\n          return en_MU_1.default;\n\n        case 'en-NG':\n          return en_NG_1.default;\n\n        case 'en-US':\n          return en_US_1.default;\n\n        case 'en-GB':\n          return en_GB_1.default;\n\n        case 'fa-IR':\n          return fa_IR_1.default;\n\n        case 'fr-FR':\n          return fr_FR_1.default;\n\n        case 'gu-IN':\n          return gu_IN_1.default;\n\n        case 'hi-IN':\n          return hi_IN_1.default;\n\n        case 'mr-IN':\n          return mr_IN_1.default;\n\n        case 'tr-TR':\n          return tr_TR_1.default;\n\n        case 'nl-SR':\n          return nl_SR_1.default;\n      }\n      /* eslint-enable @typescript-eslint/no-var-requires */\n\n\n      throw new Error(\"Unknown Locale \\\"\".concat(this.options.localeCode, \"\\\"\"));\n    }\n  }, {\n    key: \"getLocale\",\n    value: function getLocale() {\n      if (this.locale === undefined) {\n        var LocaleClass = this.getLocaleClass();\n        this.locale = new LocaleClass();\n      }\n\n      return this.locale;\n    }\n  }, {\n    key: \"convert\",\n    value: function convert(number) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      options = Object.assign({}, this.options.converterOptions, options);\n\n      if (!this.isValidNumber(number)) {\n        throw new Error(\"Invalid Number \\\"\".concat(number, \"\\\"\"));\n      }\n\n      if (options.ignoreDecimal) {\n        number = Number.parseInt(number.toString());\n      }\n\n      var words = [];\n\n      if (options.currency) {\n        words = this.convertCurrency(number, options);\n      } else {\n        words = this.convertNumber(number);\n      }\n\n      return words.join(' ');\n    }\n  }, {\n    key: \"convertNumber\",\n    value: function convertNumber(number) {\n      var _words;\n\n      var _a, _b, _c;\n\n      var locale = this.getLocale();\n      var isNegativeNumber = number < 0;\n\n      if (isNegativeNumber) {\n        number = Math.abs(number);\n      }\n\n      var split = number.toString().split('.');\n      var ignoreZero = this.isNumberZero(number) && locale.config.ignoreZeroInDecimals;\n      var words = this.convertInternal(Number(split[0]));\n      var isFloat = this.isFloat(number);\n\n      if (isFloat && ignoreZero) {\n        words = [];\n      }\n\n      var wordsWithDecimal = [];\n\n      if (isFloat) {\n        if (!ignoreZero) {\n          wordsWithDecimal.push(locale.config.texts.point);\n        }\n\n        if (split[1].startsWith('0') && !((_a = locale.config) === null || _a === void 0 ? void 0 : _a.decimalLengthWordMapping)) {\n          var zeroWords = [];\n\n          var _iterator = _createForOfIteratorHelper(split[1]),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var num = _step.value;\n              zeroWords.push.apply(zeroWords, _toConsumableArray(this.convertInternal(Number(num))));\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          wordsWithDecimal.push.apply(wordsWithDecimal, zeroWords);\n        } else {\n          wordsWithDecimal.push.apply(wordsWithDecimal, _toConsumableArray(this.convertInternal(Number(split[1]))));\n          var decimalLengthWord = (_c = (_b = locale.config) === null || _b === void 0 ? void 0 : _b.decimalLengthWordMapping) === null || _c === void 0 ? void 0 : _c[split[1].length];\n\n          if (decimalLengthWord) {\n            wordsWithDecimal.push(decimalLengthWord);\n          }\n        }\n      }\n\n      var isEmpty = words.length <= 0;\n\n      if (!isEmpty && isNegativeNumber) {\n        words.unshift(locale.config.texts.minus);\n      }\n\n      (_words = words).push.apply(_words, wordsWithDecimal);\n\n      return words;\n    }\n  }, {\n    key: \"convertCurrency\",\n    value: function convertCurrency(number) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var _a, _b, _c;\n\n      var locale = this.getLocale();\n      var isNegativeNumber = number < 0;\n\n      if (isNegativeNumber) {\n        number = Math.abs(number);\n      }\n\n      number = this.toFixed(number); // Extra check for isFloat to overcome 1.999 rounding off to 2\n\n      var split = number.toString().split('.');\n\n      var words = _toConsumableArray(this.convertInternal(Number(split[0])));\n\n      if (locale.config.currency.plural) {\n        words.push(locale.config.currency.plural);\n      }\n\n      var ignoreZero = this.isNumberZero(number) && (options.ignoreZeroCurrency || ((_a = locale.config) === null || _a === void 0 ? void 0 : _a.ignoreZeroInDecimals) && number !== 0);\n\n      if (ignoreZero) {\n        words = [];\n      }\n\n      var wordsWithDecimal = [];\n      var isFloat = this.isFloat(number);\n\n      if (isFloat) {\n        if (!ignoreZero) {\n          wordsWithDecimal.push(locale.config.texts.and);\n        }\n\n        wordsWithDecimal.push.apply(wordsWithDecimal, _toConsumableArray(this.convertInternal(Number(split[1]) * (!locale.config.decimalLengthWordMapping ? Math.pow(10, 2 - split[1].length) : 1))));\n        var decimalLengthWord = (_c = (_b = locale.config) === null || _b === void 0 ? void 0 : _b.decimalLengthWordMapping) === null || _c === void 0 ? void 0 : _c[split[1].length];\n\n        if (decimalLengthWord === null || decimalLengthWord === void 0 ? void 0 : decimalLengthWord.length) {\n          wordsWithDecimal.push(decimalLengthWord);\n        }\n\n        wordsWithDecimal.push(locale.config.currency.fractionalUnit.plural);\n      } else if (locale.config.decimalLengthWordMapping && words.length) {\n        wordsWithDecimal.push(locale.config.currency.fractionalUnit.plural);\n      }\n\n      var isEmpty = words.length <= 0 && wordsWithDecimal.length <= 0;\n\n      if (!isEmpty && isNegativeNumber) {\n        words.unshift(locale.config.texts.minus);\n      }\n\n      if (!isEmpty && locale.config.texts.only && !options.doNotAddOnly) {\n        wordsWithDecimal.push(locale.config.texts.only);\n      }\n\n      if (wordsWithDecimal.length) {\n        var _words2;\n\n        (_words2 = words).push.apply(_words2, wordsWithDecimal);\n      }\n\n      return words;\n    }\n  }, {\n    key: \"convertInternal\",\n    value: function convertInternal(number) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n\n      var locale = this.getLocale();\n\n      if (locale.config.exactWordsMapping) {\n        var exactMatch = (_b = (_a = locale.config) === null || _a === void 0 ? void 0 : _a.exactWordsMapping) === null || _b === void 0 ? void 0 : _b.find(function (elem) {\n          return number === elem.number;\n        });\n\n        if (exactMatch) {\n          return [exactMatch.value];\n        }\n      }\n\n      var match = locale.config.numberWordsMapping.find(function (elem) {\n        return number >= elem.number;\n      });\n      var words = [];\n\n      if (number <= 100 || number < 1000 && locale.config.namedLessThan1000) {\n        words.push(match.value);\n        number -= match.number;\n\n        if (number > 0) {\n          if ((_d = (_c = locale.config) === null || _c === void 0 ? void 0 : _c.splitWord) === null || _d === void 0 ? void 0 : _d.length) {\n            words.push(locale.config.splitWord);\n          }\n\n          words.push.apply(words, _toConsumableArray(this.convertInternal(number)));\n        }\n\n        return words;\n      }\n\n      var quotient = Math.floor(number / match.number);\n      var remainder = number % match.number;\n      var matchValue = match.value;\n\n      if (quotient > 1 && ((_f = (_e = locale.config) === null || _e === void 0 ? void 0 : _e.pluralWords) === null || _f === void 0 ? void 0 : _f.find(function (word) {\n        return word === match.value;\n      })) && ((_g = locale.config) === null || _g === void 0 ? void 0 : _g.pluralMark)) {\n        matchValue += locale.config.pluralMark;\n      }\n\n      if (quotient === 1 && ((_j = (_h = locale.config) === null || _h === void 0 ? void 0 : _h.ignoreOneForWords) === null || _j === void 0 ? void 0 : _j.includes(matchValue))) {\n        words.push(matchValue);\n      } else {\n        words.push.apply(words, _toConsumableArray(this.convertInternal(quotient)).concat([matchValue]));\n      }\n\n      if (remainder > 0) {\n        if ((_l = (_k = locale.config) === null || _k === void 0 ? void 0 : _k.splitWord) === null || _l === void 0 ? void 0 : _l.length) {\n          words.push(locale.config.splitWord);\n        }\n\n        words.push.apply(words, _toConsumableArray(this.convertInternal(remainder)));\n      }\n\n      return words;\n    }\n  }, {\n    key: \"toFixed\",\n    value: function toFixed(number) {\n      var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      return Number(Number(number).toFixed(precision));\n    }\n  }, {\n    key: \"isFloat\",\n    value: function isFloat(number) {\n      return Number(number) === number && number % 1 !== 0;\n    }\n  }, {\n    key: \"isValidNumber\",\n    value: function isValidNumber(number) {\n      return !isNaN(parseFloat(number)) && isFinite(number);\n    }\n  }, {\n    key: \"isNumberZero\",\n    value: function isNumberZero(number) {\n      return number >= 0 && number < 1;\n    }\n  }]);\n\n  return ToWords;\n}();\n\nexports.ToWords = ToWords;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","ToWords","DefaultToWordsOptions","DefaultConverterOptions","en_BD_1","require","en_GH_1","en_IN_1","en_MM_1","en_MU_1","en_NG_1","en_US_1","en_GB_1","fa_IR_1","fr_FR_1","gu_IN_1","hi_IN_1","mr_IN_1","tr_TR_1","nl_SR_1","currency","ignoreDecimal","ignoreZeroCurrency","doNotAddOnly","localeCode","converterOptions","options","locale","undefined","assign","default","Error","LocaleClass","getLocaleClass","number","isValidNumber","Number","parseInt","toString","words","convertCurrency","convertNumber","join","_a","_b","_c","getLocale","isNegativeNumber","Math","abs","split","ignoreZero","isNumberZero","config","ignoreZeroInDecimals","convertInternal","isFloat","wordsWithDecimal","push","texts","point","startsWith","decimalLengthWordMapping","zeroWords","num","decimalLengthWord","length","isEmpty","unshift","minus","toFixed","plural","and","pow","fractionalUnit","only","_d","_e","_f","_g","_h","_j","_k","_l","exactWordsMapping","exactMatch","find","elem","match","numberWordsMapping","namedLessThan1000","splitWord","quotient","floor","remainder","matchValue","pluralWords","word","pluralMark","ignoreOneForWords","includes","precision","isNaN","parseFloat","isFinite"],"sources":["/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/node_modules/to-words/dist/ToWords.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ToWords = exports.DefaultToWordsOptions = exports.DefaultConverterOptions = void 0;\nconst en_BD_1 = __importDefault(require(\"./locales/en-BD\"));\nconst en_GH_1 = __importDefault(require(\"./locales/en-GH\"));\nconst en_IN_1 = __importDefault(require(\"./locales/en-IN\"));\nconst en_MM_1 = __importDefault(require(\"./locales/en-MM\"));\nconst en_MU_1 = __importDefault(require(\"./locales/en-MU\"));\nconst en_NG_1 = __importDefault(require(\"./locales/en-NG\"));\nconst en_US_1 = __importDefault(require(\"./locales/en-US\"));\nconst en_GB_1 = __importDefault(require(\"./locales/en-GB\"));\nconst fa_IR_1 = __importDefault(require(\"./locales/fa-IR\"));\nconst fr_FR_1 = __importDefault(require(\"./locales/fr-FR\"));\nconst gu_IN_1 = __importDefault(require(\"./locales/gu-IN\"));\nconst hi_IN_1 = __importDefault(require(\"./locales/hi-IN\"));\nconst mr_IN_1 = __importDefault(require(\"./locales/mr-IN\"));\nconst tr_TR_1 = __importDefault(require(\"./locales/tr-TR\"));\nconst nl_SR_1 = __importDefault(require(\"./locales/nl-SR\"));\nexports.DefaultConverterOptions = {\n    currency: false,\n    ignoreDecimal: false,\n    ignoreZeroCurrency: false,\n    doNotAddOnly: false,\n};\nexports.DefaultToWordsOptions = {\n    localeCode: 'en-IN',\n    converterOptions: exports.DefaultConverterOptions,\n};\nclass ToWords {\n    constructor(options = {}) {\n        this.options = {};\n        this.locale = undefined;\n        this.options = Object.assign({}, exports.DefaultToWordsOptions, options);\n    }\n    getLocaleClass() {\n        /* eslint-disable @typescript-eslint/no-var-requires */\n        switch (this.options.localeCode) {\n            case 'en-BD':\n                return en_BD_1.default;\n            case 'en-GH':\n                return en_GH_1.default;\n            case 'en-IN':\n                return en_IN_1.default;\n            case 'en-MM':\n                return en_MM_1.default;\n            case 'en-MU':\n                return en_MU_1.default;\n            case 'en-NG':\n                return en_NG_1.default;\n            case 'en-US':\n                return en_US_1.default;\n            case 'en-GB':\n                return en_GB_1.default;\n            case 'fa-IR':\n                return fa_IR_1.default;\n            case 'fr-FR':\n                return fr_FR_1.default;\n            case 'gu-IN':\n                return gu_IN_1.default;\n            case 'hi-IN':\n                return hi_IN_1.default;\n            case 'mr-IN':\n                return mr_IN_1.default;\n            case 'tr-TR':\n                return tr_TR_1.default;\n            case 'nl-SR':\n                return nl_SR_1.default;\n        }\n        /* eslint-enable @typescript-eslint/no-var-requires */\n        throw new Error(`Unknown Locale \"${this.options.localeCode}\"`);\n    }\n    getLocale() {\n        if (this.locale === undefined) {\n            const LocaleClass = this.getLocaleClass();\n            this.locale = new LocaleClass();\n        }\n        return this.locale;\n    }\n    convert(number, options = {}) {\n        options = Object.assign({}, this.options.converterOptions, options);\n        if (!this.isValidNumber(number)) {\n            throw new Error(`Invalid Number \"${number}\"`);\n        }\n        if (options.ignoreDecimal) {\n            number = Number.parseInt(number.toString());\n        }\n        let words = [];\n        if (options.currency) {\n            words = this.convertCurrency(number, options);\n        }\n        else {\n            words = this.convertNumber(number);\n        }\n        return words.join(' ');\n    }\n    convertNumber(number) {\n        var _a, _b, _c;\n        const locale = this.getLocale();\n        const isNegativeNumber = number < 0;\n        if (isNegativeNumber) {\n            number = Math.abs(number);\n        }\n        const split = number.toString().split('.');\n        const ignoreZero = this.isNumberZero(number) && locale.config.ignoreZeroInDecimals;\n        let words = this.convertInternal(Number(split[0]));\n        const isFloat = this.isFloat(number);\n        if (isFloat && ignoreZero) {\n            words = [];\n        }\n        const wordsWithDecimal = [];\n        if (isFloat) {\n            if (!ignoreZero) {\n                wordsWithDecimal.push(locale.config.texts.point);\n            }\n            if (split[1].startsWith('0') && !((_a = locale.config) === null || _a === void 0 ? void 0 : _a.decimalLengthWordMapping)) {\n                const zeroWords = [];\n                for (const num of split[1]) {\n                    zeroWords.push(...this.convertInternal(Number(num)));\n                }\n                wordsWithDecimal.push(...zeroWords);\n            }\n            else {\n                wordsWithDecimal.push(...this.convertInternal(Number(split[1])));\n                const decimalLengthWord = (_c = (_b = locale.config) === null || _b === void 0 ? void 0 : _b.decimalLengthWordMapping) === null || _c === void 0 ? void 0 : _c[split[1].length];\n                if (decimalLengthWord) {\n                    wordsWithDecimal.push(decimalLengthWord);\n                }\n            }\n        }\n        const isEmpty = words.length <= 0;\n        if (!isEmpty && isNegativeNumber) {\n            words.unshift(locale.config.texts.minus);\n        }\n        words.push(...wordsWithDecimal);\n        return words;\n    }\n    convertCurrency(number, options = {}) {\n        var _a, _b, _c;\n        const locale = this.getLocale();\n        const isNegativeNumber = number < 0;\n        if (isNegativeNumber) {\n            number = Math.abs(number);\n        }\n        number = this.toFixed(number);\n        // Extra check for isFloat to overcome 1.999 rounding off to 2\n        const split = number.toString().split('.');\n        let words = [...this.convertInternal(Number(split[0]))];\n        if (locale.config.currency.plural) {\n            words.push(locale.config.currency.plural);\n        }\n        const ignoreZero = this.isNumberZero(number) &&\n            (options.ignoreZeroCurrency || (((_a = locale.config) === null || _a === void 0 ? void 0 : _a.ignoreZeroInDecimals) && number !== 0));\n        if (ignoreZero) {\n            words = [];\n        }\n        const wordsWithDecimal = [];\n        const isFloat = this.isFloat(number);\n        if (isFloat) {\n            if (!ignoreZero) {\n                wordsWithDecimal.push(locale.config.texts.and);\n            }\n            wordsWithDecimal.push(...this.convertInternal(Number(split[1]) * (!locale.config.decimalLengthWordMapping ? Math.pow(10, 2 - split[1].length) : 1)));\n            const decimalLengthWord = (_c = (_b = locale.config) === null || _b === void 0 ? void 0 : _b.decimalLengthWordMapping) === null || _c === void 0 ? void 0 : _c[split[1].length];\n            if (decimalLengthWord === null || decimalLengthWord === void 0 ? void 0 : decimalLengthWord.length) {\n                wordsWithDecimal.push(decimalLengthWord);\n            }\n            wordsWithDecimal.push(locale.config.currency.fractionalUnit.plural);\n        }\n        else if (locale.config.decimalLengthWordMapping && words.length) {\n            wordsWithDecimal.push(locale.config.currency.fractionalUnit.plural);\n        }\n        const isEmpty = words.length <= 0 && wordsWithDecimal.length <= 0;\n        if (!isEmpty && isNegativeNumber) {\n            words.unshift(locale.config.texts.minus);\n        }\n        if (!isEmpty && locale.config.texts.only && !options.doNotAddOnly) {\n            wordsWithDecimal.push(locale.config.texts.only);\n        }\n        if (wordsWithDecimal.length) {\n            words.push(...wordsWithDecimal);\n        }\n        return words;\n    }\n    convertInternal(number) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n        const locale = this.getLocale();\n        if (locale.config.exactWordsMapping) {\n            const exactMatch = (_b = (_a = locale.config) === null || _a === void 0 ? void 0 : _a.exactWordsMapping) === null || _b === void 0 ? void 0 : _b.find((elem) => {\n                return number === elem.number;\n            });\n            if (exactMatch) {\n                return [exactMatch.value];\n            }\n        }\n        const match = locale.config.numberWordsMapping.find((elem) => {\n            return number >= elem.number;\n        });\n        const words = [];\n        if (number <= 100 || (number < 1000 && locale.config.namedLessThan1000)) {\n            words.push(match.value);\n            number -= match.number;\n            if (number > 0) {\n                if ((_d = (_c = locale.config) === null || _c === void 0 ? void 0 : _c.splitWord) === null || _d === void 0 ? void 0 : _d.length) {\n                    words.push(locale.config.splitWord);\n                }\n                words.push(...this.convertInternal(number));\n            }\n            return words;\n        }\n        const quotient = Math.floor(number / match.number);\n        const remainder = number % match.number;\n        let matchValue = match.value;\n        if (quotient > 1 && ((_f = (_e = locale.config) === null || _e === void 0 ? void 0 : _e.pluralWords) === null || _f === void 0 ? void 0 : _f.find((word) => word === match.value)) && ((_g = locale.config) === null || _g === void 0 ? void 0 : _g.pluralMark)) {\n            matchValue += locale.config.pluralMark;\n        }\n        if (quotient === 1 && ((_j = (_h = locale.config) === null || _h === void 0 ? void 0 : _h.ignoreOneForWords) === null || _j === void 0 ? void 0 : _j.includes(matchValue))) {\n            words.push(matchValue);\n        }\n        else {\n            words.push(...this.convertInternal(quotient), matchValue);\n        }\n        if (remainder > 0) {\n            if ((_l = (_k = locale.config) === null || _k === void 0 ? void 0 : _k.splitWord) === null || _l === void 0 ? void 0 : _l.length) {\n                words.push(locale.config.splitWord);\n            }\n            words.push(...this.convertInternal(remainder));\n        }\n        return words;\n    }\n    toFixed(number, precision = 2) {\n        return Number(Number(number).toFixed(precision));\n    }\n    isFloat(number) {\n        return Number(number) === number && number % 1 !== 0;\n    }\n    isValidNumber(number) {\n        return !isNaN(parseFloat(number)) && isFinite(number);\n    }\n    isNumberZero(number) {\n        return number >= 0 && number < 1;\n    }\n}\nexports.ToWords = ToWords;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}