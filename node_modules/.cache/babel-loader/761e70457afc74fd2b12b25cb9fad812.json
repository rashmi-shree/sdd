{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachQuarterOfInterval;\n\nvar _index = _interopRequireDefault(require(\"../addQuarters/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../startOfQuarter/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @name eachQuarterOfInterval\n * @category Interval Helpers\n * @summary Return the array of quarters within the specified time interval.\n *\n * @description\n * Return the array of quarters within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} the array with starts of quarters from the quarter of the interval start to the quarter of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each quarter within interval 6 February 2014 - 10 August 2014:\n * var result = eachQuarterOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * // ]\n */\n\n\nfunction eachQuarterOfInterval(dirtyInterval) {\n  (0, _index4.default)(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = (0, _index3.default)(interval.start);\n  var endDate = (0, _index3.default)(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateQuarter = (0, _index2.default)(startDate);\n  var endDateQuarter = (0, _index2.default)(endDate);\n  endTime = endDateQuarter.getTime();\n  var quarters = [];\n  var currentQuarter = startDateQuarter;\n\n  while (currentQuarter.getTime() <= endTime) {\n    quarters.push((0, _index3.default)(currentQuarter));\n    currentQuarter = (0, _index.default)(currentQuarter, 1);\n  }\n\n  return quarters;\n}\n\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","eachQuarterOfInterval","_index","_interopRequireDefault","require","_index2","_index3","_index4","obj","__esModule","dirtyInterval","arguments","interval","startDate","start","endDate","end","endTime","getTime","RangeError","startDateQuarter","endDateQuarter","quarters","currentQuarter","push","module"],"sources":["/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/node_modules/date-fns/eachQuarterOfInterval/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachQuarterOfInterval;\n\nvar _index = _interopRequireDefault(require(\"../addQuarters/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../startOfQuarter/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name eachQuarterOfInterval\n * @category Interval Helpers\n * @summary Return the array of quarters within the specified time interval.\n *\n * @description\n * Return the array of quarters within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} the array with starts of quarters from the quarter of the interval start to the quarter of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each quarter within interval 6 February 2014 - 10 August 2014:\n * var result = eachQuarterOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * // ]\n */\nfunction eachQuarterOfInterval(dirtyInterval) {\n  (0, _index4.default)(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = (0, _index3.default)(interval.start);\n  var endDate = (0, _index3.default)(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateQuarter = (0, _index2.default)(startDate);\n  var endDateQuarter = (0, _index2.default)(endDate);\n  endTime = endDateQuarter.getTime();\n  var quarters = [];\n  var currentQuarter = startDateQuarter;\n\n  while (currentQuarter.getTime() <= endTime) {\n    quarters.push((0, _index3.default)(currentQuarter));\n    currentQuarter = (0, _index.default)(currentQuarter, 1);\n  }\n\n  return quarters;\n}\n\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,qBAAlB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAnC;;AAEA,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAApC;;AAEA,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAApC;;AAEA,IAAIG,OAAO,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCK,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAER,OAAO,EAAEQ;EAAX,CAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASP,qBAAT,CAA+BS,aAA/B,EAA8C;EAC5C,CAAC,GAAGH,OAAO,CAACP,OAAZ,EAAqB,CAArB,EAAwBW,SAAxB;EACA,IAAIC,QAAQ,GAAGF,aAAa,IAAI,EAAhC;EACA,IAAIG,SAAS,GAAG,CAAC,GAAGP,OAAO,CAACN,OAAZ,EAAqBY,QAAQ,CAACE,KAA9B,CAAhB;EACA,IAAIC,OAAO,GAAG,CAAC,GAAGT,OAAO,CAACN,OAAZ,EAAqBY,QAAQ,CAACI,GAA9B,CAAd;EACA,IAAIC,OAAO,GAAGF,OAAO,CAACG,OAAR,EAAd,CAL4C,CAKX;;EAEjC,IAAI,EAAEL,SAAS,CAACK,OAAV,MAAuBD,OAAzB,CAAJ,EAAuC;IACrC,MAAM,IAAIE,UAAJ,CAAe,kBAAf,CAAN;EACD;;EAED,IAAIC,gBAAgB,GAAG,CAAC,GAAGf,OAAO,CAACL,OAAZ,EAAqBa,SAArB,CAAvB;EACA,IAAIQ,cAAc,GAAG,CAAC,GAAGhB,OAAO,CAACL,OAAZ,EAAqBe,OAArB,CAArB;EACAE,OAAO,GAAGI,cAAc,CAACH,OAAf,EAAV;EACA,IAAII,QAAQ,GAAG,EAAf;EACA,IAAIC,cAAc,GAAGH,gBAArB;;EAEA,OAAOG,cAAc,CAACL,OAAf,MAA4BD,OAAnC,EAA4C;IAC1CK,QAAQ,CAACE,IAAT,CAAc,CAAC,GAAGlB,OAAO,CAACN,OAAZ,EAAqBuB,cAArB,CAAd;IACAA,cAAc,GAAG,CAAC,GAAGrB,MAAM,CAACF,OAAX,EAAoBuB,cAApB,EAAoC,CAApC,CAAjB;EACD;;EAED,OAAOD,QAAP;AACD;;AAEDG,MAAM,CAAC3B,OAAP,GAAiBA,OAAO,CAACE,OAAzB"},"metadata":{},"sourceType":"script"}