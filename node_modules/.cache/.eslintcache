[{"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/index.js":"1","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/App.js":"2","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/reportWebVitals.js":"3","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/RoutingPage/RoutingPage.js":"4","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/LoginPage/LoginPage.js":"5","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/NavigationTiles/NavigationTiles.js":"6","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/AddCustomerPage/AddCustomerPage.js":"7","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/GenerateInvoice/GenerateInvoice.js":"8","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/ViewInvoicePage/ViewInvoicePage.js":"9","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/GenerateReport/GenerateReport.js":"10","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/EmployeeManagementPage/EmployeeManagementPage.js":"11","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/Footer/Footer.js":"12","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/Header/Header.js":"13","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/Header/HeaderWithLogout.js":"14","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/FullScreenModalOne/FullScreenModalOne.js":"15","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/OpenModal/OpenModal.js":"16","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/TextAndTextInput/TextAndTextInput.js":"17","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/FullScreenModal/FullScreenModal.js":"18","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedSearchBar/CustomizedSearchBar.js":"19","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedBtn/CustomizedBtn.js":"20","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCard/CustomizedCard.js":"21","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/organisms/CustomerInvoice/CustomerInvoice.js":"22","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/organisms/DealersInvoice/DealersInvoice.js":"23","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/TextAndSelect/TextAndSelect.js":"24","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable.js":"25","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DisplayCustomerTable/DisplayCustomerTable.js":"26","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable.js":"27","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/Download/DownloadCustomer.js":"28","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable.js":"29","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/Download/DownloadDelivery.js":"30","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/EmployeesEditableRow/EmployeesEditableRow.js":"31","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/EmployeesReadOnlyRow/EmployeesReadOnlyRow.js":"32","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedLogOutIcon/CustomizedLogOutIcon.js":"33","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedSaveIcon/CustomizedSaveIcon.js":"34","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedLogo/CustomizedLogo.js":"35","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/AddCustomersForm/AddCustomersForm.js":"36","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/AddCustomersForm/AddCustomersFormNew.js":"37","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/AddFewCustomersForm/AddFewCustomersForm.js":"38","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/InvoiceFormat/InvoiceFormat.js":"39","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/CustomerInvoiceForm/CustomerInvoiceForm.js":"40","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DealersInvoiceForm/DealersInvoiceForm.js":"41","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DealersDetailsForm/DealersDetailsForm.js":"42","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/ProductsDetailsForm/ProductsDetailsForm.js":"43","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/CustomerFollowUpForm/CustomerFollowUpForm.js":"44","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/AddProductForm/AddProductForm.js":"45","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/AddDealersForm/AddDealersForm.js":"46","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate.js":"47","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/EditDealersReportForm/EditDealersReportForm.js":"48","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DealersInvoicesListForm/DealersInvoicesListForm.js":"49","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedText/CustomizedText.js":"50","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedTextInput/CustomizedTextInput.js":"51","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DeliveryDetailsForm/DeliveryDetailsForm.js":"52","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedSelect/CustomizedSelect.js":"53","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedEditIcon/CustomizedEditIcon.js":"54","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedPrint/CustomizedPrint.js":"55","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedDownload/CustomizedDownload.js":"56","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedDatepicker/CustomizedDatepicker.js":"57","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCancelIcon/CustomizedCancelIcon.js":"58","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedDatepicker/SelectDate.js":"59","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/organisms/SuccessMsg/SuccessMsg.js":"60","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForState.js":"61","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForOwnerDefault.js":"62","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForStateDefault.js":"63","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect.js":"64","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCombobox/CustomizedCombobboxForOwner.js":"65","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxAll.js":"66","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForAll.js":"67","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/FullScreenModalTwo/FullScreenModalTwo.js":"68"},{"size":322,"mtime":1656828163816,"results":"69","hashOfConfig":"70"},{"size":253,"mtime":1665130913209,"results":"71","hashOfConfig":"70"},{"size":362,"mtime":1655205578447,"results":"72","hashOfConfig":"70"},{"size":1843,"mtime":1665291877701,"results":"73","hashOfConfig":"70"},{"size":2044,"mtime":1665292418626,"results":"74","hashOfConfig":"70"},{"size":2584,"mtime":1664032803022,"results":"75","hashOfConfig":"70"},{"size":16388,"mtime":1665131190935,"results":"76","hashOfConfig":"70"},{"size":3368,"mtime":1663921180484,"results":"77","hashOfConfig":"70"},{"size":6767,"mtime":1665131078351,"results":"78","hashOfConfig":"70"},{"size":6943,"mtime":1663921194180,"results":"79","hashOfConfig":"70"},{"size":7567,"mtime":1665131264534,"results":"80","hashOfConfig":"70"},{"size":828,"mtime":1655216101363,"results":"81","hashOfConfig":"70"},{"size":647,"mtime":1665130993349,"results":"82","hashOfConfig":"70"},{"size":1014,"mtime":1665132215345,"results":"83","hashOfConfig":"70"},{"size":1404,"mtime":1663591922417,"results":"84","hashOfConfig":"70"},{"size":7872,"mtime":1661759451127,"results":"85","hashOfConfig":"70"},{"size":783,"mtime":1664699653005,"results":"86","hashOfConfig":"70"},{"size":1928,"mtime":1660542576481,"results":"87","hashOfConfig":"70"},{"size":797,"mtime":1660962925669,"results":"88","hashOfConfig":"70"},{"size":457,"mtime":1656395694732,"results":"89","hashOfConfig":"70"},{"size":358,"mtime":1655277388434,"results":"90","hashOfConfig":"70"},{"size":10456,"mtime":1661660173848,"results":"91","hashOfConfig":"70"},{"size":7330,"mtime":1660978713574,"results":"92","hashOfConfig":"70"},{"size":659,"mtime":1656160971533,"results":"93","hashOfConfig":"70"},{"size":11353,"mtime":1664446886711,"results":"94","hashOfConfig":"70"},{"size":7893,"mtime":1664696720339,"results":"95","hashOfConfig":"70"},{"size":12509,"mtime":1664776756998,"results":"96","hashOfConfig":"70"},{"size":5436,"mtime":1664696727061,"results":"97","hashOfConfig":"70"},{"size":10374,"mtime":1662265927406,"results":"98","hashOfConfig":"70"},{"size":4656,"mtime":1659344186172,"results":"99","hashOfConfig":"70"},{"size":1669,"mtime":1664019920529,"results":"100","hashOfConfig":"70"},{"size":2923,"mtime":1664012925055,"results":"101","hashOfConfig":"70"},{"size":340,"mtime":1655215070802,"results":"102","hashOfConfig":"70"},{"size":343,"mtime":1664019931068,"results":"103","hashOfConfig":"70"},{"size":311,"mtime":1656394355955,"results":"104","hashOfConfig":"70"},{"size":36998,"mtime":1664696683200,"results":"105","hashOfConfig":"70"},{"size":20584,"mtime":1663591934041,"results":"106","hashOfConfig":"70"},{"size":15230,"mtime":1664776745195,"results":"107","hashOfConfig":"70"},{"size":10384,"mtime":1664696731273,"results":"108","hashOfConfig":"70"},{"size":26305,"mtime":1664273037585,"results":"109","hashOfConfig":"70"},{"size":14833,"mtime":1664696712153,"results":"110","hashOfConfig":"70"},{"size":22794,"mtime":1664696705012,"results":"111","hashOfConfig":"70"},{"size":8712,"mtime":1664775808922,"results":"112","hashOfConfig":"70"},{"size":9482,"mtime":1664776753231,"results":"113","hashOfConfig":"70"},{"size":10188,"mtime":1664776749422,"results":"114","hashOfConfig":"70"},{"size":5572,"mtime":1661598656673,"results":"115","hashOfConfig":"70"},{"size":13443,"mtime":1660151422667,"results":"116","hashOfConfig":"70"},{"size":6235,"mtime":1662179566794,"results":"117","hashOfConfig":"70"},{"size":12904,"mtime":1664696715921,"results":"118","hashOfConfig":"70"},{"size":276,"mtime":1655216910136,"results":"119","hashOfConfig":"70"},{"size":763,"mtime":1660962913872,"results":"120","hashOfConfig":"70"},{"size":14804,"mtime":1660990409810,"results":"121","hashOfConfig":"70"},{"size":1451,"mtime":1656160952498,"results":"122","hashOfConfig":"70"},{"size":330,"mtime":1664012400102,"results":"123","hashOfConfig":"70"},{"size":243,"mtime":1647601435902,"results":"124","hashOfConfig":"70"},{"size":328,"mtime":1656159237794,"results":"125","hashOfConfig":"70"},{"size":607,"mtime":1647604826716,"results":"126","hashOfConfig":"70"},{"size":342,"mtime":1664020258990,"results":"127","hashOfConfig":"70"},{"size":1146,"mtime":1663510097427,"results":"128","hashOfConfig":"70"},{"size":1131,"mtime":1661066384418,"results":"129","hashOfConfig":"70"},{"size":2426,"mtime":1664776740279,"results":"130","hashOfConfig":"70"},{"size":1249,"mtime":1664696639032,"results":"131","hashOfConfig":"70"},{"size":1495,"mtime":1664696651065,"results":"132","hashOfConfig":"70"},{"size":1893,"mtime":1658234108705,"results":"133","hashOfConfig":"70"},{"size":1226,"mtime":1664696634657,"results":"134","hashOfConfig":"70"},{"size":1013,"mtime":1658160365352,"results":"135","hashOfConfig":"70"},{"size":1275,"mtime":1656828209928,"results":"136","hashOfConfig":"70"},{"size":1807,"mtime":1660542576480,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o2q4ko",{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":4,"source":"238"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":3,"source":"246"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":1,"source":"274"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"286"},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"294"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"302"},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"306"},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328"},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332"},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352"},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359"},{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367"},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371"},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375"},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379"},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/index.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/App.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/reportWebVitals.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/RoutingPage/RoutingPage.js",["386","387","388"],[],"import React from \"react\";\nimport {\n    Routes,\n    Route\n  } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport LoginPage from '../LoginPage/LoginPage';\nimport NavigationTiles from '../NavigationTiles/NavigationTiles';\nimport ViewInvoicePage from '../ViewInvoicePage/ViewInvoicePage';\nimport AddCustomerPage from \"../AddCustomerPage/AddCustomerPage\";\nimport GenerateInvoice from '../GenerateInvoice/GenerateInvoice';\nimport GenerateReport from '../GenerateReport/GenerateReport';\nimport EmployeeManagementPage from '../EmployeeManagementPage/EmployeeManagementPage';\nimport Footer from '../Footer/Footer';\nimport { useNavigate } from 'react-router-dom';\n\nconst RoutingPage = () => {\n    let navigate = useNavigate();\n    const [user, setuser] = useState({});\n    const userevent = (e) => {\n        setuser(e);\n    }\n    const api = axios.create({\n        baseURL: `http://3.84.110.201:3001/`\n      })\n    return(\n    <div>\n    <>\n      <Routes>\n        <Route path=\"/\" element={<LoginPage\n          api={api}\n          userevent={userevent}\n        />\n        }\n        />\n        <Route path=\"/main\" element={<NavigationTiles\n        />}\n        />\n        <Route path=\"/viewinvoice\" element={<ViewInvoicePage\n          api={api}\n        />}\n        />\n        <Route path=\"/addcustomerpage\" element={<AddCustomerPage\n          api={api}\n        />}\n        />\n        <Route path=\"/generateinvoice\" element={<GenerateInvoice\n          api={api}\n        />} />\n        <Route path=\"/generatereport\" element={<GenerateReport\n          api={api}\n        />} />\n        <Route path=\"/employeemanagement\" element={<EmployeeManagementPage\n          api={api}\n        />} />\n      </Routes>\n      <div>\n        <Footer />\n      </div>\n      </>\n      </div>\n    );\n}\nexport default RoutingPage;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/LoginPage/LoginPage.js",["389","390"],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/NavigationTiles/NavigationTiles.js",["391"],[],"import React, {useState, useEffect} from \"react\";\nimport CustomizedCard from '../../components/atoms/CustomizedCard/CustomizedCard';\nimport ReceiptIcon from '@mui/icons-material/Receipt';\nimport AddReactionIcon from '@mui/icons-material/AddReaction';\nimport SummarizeIcon from '@mui/icons-material/Summarize';\nimport { useNavigate } from 'react-router-dom';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport '../../style/style.css';\n\nconst NavigationTiles = () => {\n  let navigate = useNavigate();\n  const [adminloggedin, setadminloggedin] = useState();\n    useEffect(() => {\n      setadminloggedin(window.localStorage.getItem('adminloggedin'));\n    }, []);\n  return (\n    <nav>\n      <div>\n        <HeaderWithLogout />\n      </div>\n      <div className=\"container\">\n        <div className=\"row rowcontainer\">\n          <div className=\" col-md-6 col-sm-6\">\n            <CustomizedCard\n              onClick={() => {\n                navigate('/viewinvoice')\n              }}\n              cardname={<ReceiptIcon className=\"navigationicon\" />}\n              cardlabel=\"View Invoice\"\n            />\n          </div>\n          <div className=\"col-md-6 col-sm-6\">\n            <CustomizedCard\n              onClick={() => {\n                navigate('/addcustomerpage')\n              }}\n              cardlabel=\"customer management\"\n              cardname={<AddReactionIcon className=\"navigationicon\" />}\n            />\n          </div>\n          <div className=\"col-md-6 col-sm-6\">\n            <CustomizedCard\n              onClick={() => {\n                navigate('/generateinvoice')\n              }}\n              cardlabel=\"generate invoice\"\n              cardname={<ReceiptIcon className=\"navigationicon\" />}\n            />\n          </div>\n          <div className=\"col-md-6 col-sm-6\">\n            <CustomizedCard\n              onClick={() => {\n                navigate('/generatereport')\n              }}\n              cardlabel=\"generate report\"\n              cardname={<SummarizeIcon className=\"navigationicon\" />}\n            />\n          </div>\n          {\n            adminloggedin == \"Admin\"\n            ? \n              <div className=\"col-md-6 col-sm-6\">\n              <CustomizedCard\n                onClick={() => {\n                  navigate('/employeemanagement')\n                }}\n                cardlabel=\"Employee Management\"\n                cardname={<SummarizeIcon className=\"navigationicon\" />}\n              />\n            </div>\n\n          : null\n          }\n        </div>\n      </div>\n    </nav>\n  );\n}\nexport default NavigationTiles;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/AddCustomerPage/AddCustomerPage.js",["392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedSearchBar from \"../../components/atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport moment from 'moment';\nimport OpenModal from \"../../components/molecules/OpenModal/OpenModal\";\nimport '../../style/style.css';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport CustomizedBtn from \"../../components/atoms/CustomizedBtn/CustomizedBtn\";\nimport FullScreenModalOne from \"../../components/molecules/FullScreenModalOne/FullScreenModalOne\";\nimport {useNavigate} from 'react-router-dom';\nimport Button from '@mui/material/Button';\n\nconst AddCustomerPage = ({\n    api\n}) => {\n    let navigate = useNavigate();\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [customertable, setCustomertable] = useState([]);\n    const [currentCustomerReferenceNo, setCurrentCustomerReferenceNo] = useState('');\n    const [rowdataonbooking, setrowdataonbooking] = useState();\n    const [purchasestatus, setpurchasestatus] = useState();\n    const [bookingstatus, setbookingstatus] = useState();\n    const [searchData, setSearchData] = useState('');\n    const [modalview, setModalview] = useState('');\n    const [purchasemsg, setpurchasemsg] = useState();\n    const [query, setQuery] = useState('');\n    const [check, setcheck] = useState(false);\n    useEffect(() => {\n      setcheck(JSON.parse(window.localStorage.getItem('logoutbtn')));\n    }, []);\n    useEffect(()=>{\n      if(check == null){\n        navigate('/');\n      }\n    },[check])\n    const setpurchasemsgevent = (e) =>{\n      setpurchasemsg(e)\n    }\n    const fetchpurchasestatusevent = (e) => {\n      api.post('/delivery/getpurchasestatus', {\n        params: {\n          e\n        }\n      })\n      .then((res) => {\n        setpurchasestatus(res.data);\n      })\n    }\n    const fetchbookingstatusevent = (e) => {\n      api.post('/delivery/getbookingstatus', {\n        params: {\n          e\n        }\n      })\n      .then((res) => {\n        setbookingstatus(res.data);\n      })\n    }\n    const currentCustomerRefNo = (e) => {\n        setCurrentCustomerReferenceNo(e)\n    }\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(() => {\n        displaycustomerfollowupevent();\n    }, [])\n    const fetchalldatafromcust = (currentCustomerReferenceNo) => {\n      api.post('/delivery/getalldataofcustomer', {\n        params: {\n          currentCustomerReferenceNo\n        }\n      })\n      .then((res) => {\n        const temprowdataonbooking = res.data;\n          api.put('/jointables/updaterateofdeliverytableonbook', {\n            params: {\n              data:temprowdataonbooking\n            }\n          })\n          .then((res)=>{\n            api.post('/delivery/getstatecodefromdeliverytableonbook', {\n              params: {\n                data:temprowdataonbooking\n              }\n            })\n            .then((res) => {\n              const data = res.data;\n              for (var i =0; i< data.length; i++){\n                if (\n                  (data[i].owner_company == 'SRI PARAMANANDA ENTERPRISES' && data[i].state_code === 29) ||\n                  (data[i].owner_company == 'SDD ENTERPRISES' && data[i].state_code === 33)\n                ){\n                  api.put('/jointables/updatekarnatakagstratesdeliverytableonbook', {\n                    params: {\n                      data:temprowdataonbooking\n                    }\n                  })\n                  .then((res)=>{\n                    api.put('/jointables/updatefinalamountdeliverytableonbook', {\n                      params: {\n                        data:temprowdataonbooking\n                      }\n                    })\n                    .then((res)=>{\n                      api.put('/jointables/updatebalanceamountdeliverytableonbook',{\n                        params:{\n                          data:temprowdataonbooking\n                        }\n                      })\n                      .then((res)=>{\n                        api.put('/jointables/updatepaymentstatusdeliverytableonbook',{\n                          params:{\n                            data:temprowdataonbooking\n                          }\n                        })\n                        .then((res)=>{\n                          if(res){\n                            alert(\"Updated successfully\")\n                          }\n                        })\n                      })\n                    })\n                  })\n              }\n              else {\n                api.put('/jointables/updateotherstatesgstratesdeliverytableonbook', {\n                  params: {\n                    data:temprowdataonbooking\n                  }\n                })\n                .then((res)=>{\n                  api.put('/jointables/updatefinalamountdeliverytableonbook', {\n                    params: {\n                      data:temprowdataonbooking\n                    }\n                  })\n                  .then((res)=>{\n                    api.put('/jointables/updatebalanceamountdeliverytableonbook',{\n                      params:{\n                        data:temprowdataonbooking\n                      }\n                    })\n                    .then((res)=>{\n                      api.put('/jointables/updatepaymentstatusdeliverytableonbook',{\n                        params:{\n                          data:temprowdataonbooking\n                        }\n                      })\n                      .then((res)=>{\n                        if(res){\n                          alert(\"Updated successfully\")\n                        }\n                      })\n                    })\n                  })\n                })\n            }\n              }\n            })\n          })\n      })\n    }\n    const fetchupdateddatafromcust = (currentCustomerReferenceNo) => {\n      api.post('/delivery/getalldataofcustomer', {\n        params: {\n          currentCustomerReferenceNo\n        }\n      })\n      .then((res) => {\n        setrowdataonbooking(res.data);\n      })\n    }\n    const displaycustomerfollowupevent = () => {\n      api.get('/customer/displayCustomerFollowUpData', {})\n        .then((res) => {\n          const data = res.data;\n          const tempdata = [...new Set(data.map((e) => e.customer_reference_no))];\n          const tabledata = tempdata.map((temp) => {\n              let filterByTempData = data.filter(dataObject => dataObject.customer_reference_no === temp)\n              var fixedstrings = filterByTempData[0];\n              let displayString = filterByTempData.map((x) => {\n                  return x.product + '-' + x.quantity + '(Nos)'\n              })\n              return {\n                  ...fixedstrings,\n                  displayDetails: displayString\n              }\n          })\n          setCustomertable(tabledata);\n        })\n    }\n    let finalCustomerRefNo = '';\n    const generateCustomerReferenceNo = () => {\n        let s1 = \"CUST2022\";\n        let min = 0;\n        let max = 1000;\n        let random = Math.floor(Math.random() * (max - min + 1)) + min;\n        finalCustomerRefNo = s1 + random;\n    }\n    generateCustomerReferenceNo();\n    let finalcurrentdate = \"\";\n    const currentDate = () => {\n        let date = new Date();\n        finalcurrentdate = moment(date).format('YYYY-MM-DD');\n    }\n    currentDate();\n    useEffect(() => {\n        if (searchData === \"\") {\n            displaycustomerfollowupevent();\n        }\n    }, [searchData])\n    const goEventClicked = () => {\n      api.post('/customer/getCustomerFollowUpData', {\n        params: {\n          searchData\n        }\n      }\n      )\n        .then((res) => {\n          const custdata = res.data;\n          const tempdata = [...new Set(custdata.map((e) => e.customer_reference_no))];\n          const tabledata = tempdata.map((temp) => {\n              let filterByTempData = custdata.filter(dataObject => dataObject.customer_reference_no === temp)\n              var fixedstrings = filterByTempData[0];\n              let displayString = filterByTempData.map((x) => {\n                  return x.product + '-' + x.quantity + '(Nos)'\n              })\n              return {\n                  ...fixedstrings,\n                  displayDetails: displayString\n              }\n          })\n          setCustomertable(tabledata)\n        })\n    }\n    return (\n      <div>\n        <div>\n          <HeaderWithLogout/>\n        </div>\n        <div className=\"addcustpagecontainer\">\n          <div className=\"addcustpagesubcontainer\">\n            <div className=\"pageheading\">\n                Manage Customer Data\n            </div>\n            <div className=\"searchbarstyle\">\n              <input\n                type=\"text\"\n                placeholder=\"Phone Number / Customer Name\"\n                onChange={(e)=>setQuery(e.target.value)}\n              />\n            </div>\n            <div className=\"modalandback\">\n              <CustomizedBtn \n              BtnName=\"Add Customer\"\n              onClick={()=>{\n                setModalview(\"addcustomerform\");\n                openevent(true);\n              }}\n              />\n                  <OpenModal\n                    api={api}\n                    modalview={modalview}\n                    displaycustomerfollowupevent={displaycustomerfollowupevent}\n                    open={open}\n                    openevent={openevent}\n                    purchasestatus={purchasestatus}\n                    bookingstatus={bookingstatus}\n                    currentCustomerReferenceNo={currentCustomerReferenceNo}\n                    setpurchasemsgevent={setpurchasemsgevent}\n                />\n                  <p className=\"backarrowcustomerpage\" onClick={() => { navigate('/main') }}><ArrowBackIcon /></p>\n            </div>\n            <p>\n                  {purchasemsg\n                      ? <p>{purchasemsg}</p>\n                      : <></>\n                  }\n              </p>\n            <div className='table-responsive tableContainer'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Enquiry Date</th>\n                            <th>Customer Name</th>\n                            <th>Customer Address</th>\n                            <th>Phone Number</th>\n                            <th>Phone Number Alter one</th>\n                            <th>Phone Number Alter two</th>\n                            <th>Enquired Product And Details</th>\n                            <th>Comments</th>\n                            <th>Follow Up Call </th>\n                            <th>Final Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            customertable && customertable.length\n                                ? customertable.filter((user=>\n                                  user.customer_name.toLowerCase().includes(query) || \n                                  user.phone_number.toString().includes(query) ||\n                                  user.phone_number_alter_one == query ||\n                                  user.phone_number_alter_two == query\n                                  )).map((data, i) => (\n                                    <tr key={i}>\n                                        <td>{data.customer_reference_no}</td>\n                                        <td>\n                                            {\n                                                data.enquiry_date != null ?\n                                                moment(data.enquiry_date).format('YYYY-MM-DD'):\n                                                data.enquiry_date\n                                            }\n                                        </td>\n                                        <td>{data.customer_name}</td>\n                                        <td>{data.customer_address}</td>\n                                        <td>{data.phone_number}</td>\n                                        <td>{data.phone_number_alter_one}</td>\n                                        <td>{data.phone_number_alter_two}</td>\n                                        <td>\n                                            <ul>\n                                                {\n                                                    data.displayDetails\n                                                        ?\n                                                        data.displayDetails.map((d) => (\n                                                            <li>{d}</li>\n                                                        ))\n                                                        : <></>\n                                                }\n                                            </ul>\n                                        </td>\n                                        <td>{data.comments}</td>\n                                        <td>{\n                                            data.follow_up_call != null ?\n                                            moment(data.follow_up_call).format('YYYY-MM-DD'):\n                                                data.follow_up_call\n                                        }\n                                        </td>\n                                        <td>{data.final_status}</td>\n                                        <td>\n                                          {data.final_status == \"Booked\" || data.final_status == \"Purchased\"\n                                          ? <CustomizedBtn \n                                          BtnName=\"View\"\n                                          onClick={()=>{\n                                            setModalview(\"customerdetailsform\");\n                                            currentCustomerRefNo(data.customer_reference_no);\n                                            fetchpurchasestatusevent(data.customer_reference_no);\n                                            fetchbookingstatusevent(data.customer_reference_no);\n                                            openevent(true);\n                                          }}\n                                          />\n                                          :\n                                          <div className=\"btndesign\">\n                                            <span className=\"cbtn\"><CustomizedBtn \n                                              BtnName=\"Update Booking\"\n                                              onClick={()=>{\n                                                fetchalldatafromcust(data.customer_reference_no);\n                                              }}\n                                              />\n                                              </span>\n                                              <span className=\"cbtn\"><CustomizedBtn \n                                              BtnName=\"Book Order\"\n                                              onClick={()=>{\n                                                currentCustomerRefNo(data.customer_reference_no);\n                                                // fetchalldatafromcust(data.customer_reference_no);\n                                                fetchupdateddatafromcust(data.customer_reference_no);\n                                                setModalview(\"customerdetailsform\");\n                                                openevent(true);\n                                              }}\n                                              />\n                                              </span>\n                                          </div>\n                                          }\n                                        </td>\n                                    </tr>\n                                ))\n                                : <tr>\n                                    <td colSpan={12}>No Record!</td>\n                                  </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n            </div>\n        </div>\n        </div>\n    );\n}\nexport default AddCustomerPage;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/GenerateInvoice/GenerateInvoice.js",["411","412"],[],"import React,{useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport CustomerInvoice from '../../components/organisms/CustomerInvoice/CustomerInvoice';\nimport DealersInvoice from '../../components/organisms/DealersInvoice/DealersInvoice';\nimport { useNavigate } from 'react-router-dom';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport '../../style/style.css';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  let navigate = useNavigate();\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\nconst GenerateInvoice = ({\n  modalview,\n  api\n}) => {\n  const [value, setValue] = React.useState(0);\n  const [searchData, setSearchData] = useState('');\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const style = {\n    color: 'black'\n  }\n  const onHandleChangeEvent = (event) => {\n    setSearchData(event.target.value);\n  }\n  let navigate = useNavigate();\n  const [check, setcheck] = useState(false);\n    useEffect(() => {\n      setcheck(JSON.parse(window.localStorage.getItem('logoutbtn')));\n    }, []);\n    useEffect(()=>{\n      if(check == null){\n        navigate('/');\n      }\n    },[check])\n  return (\n    <div>\n      <div>\n        <HeaderWithLogout />\n      </div>\n      <div className=\"reportcontainer\">\n        <div className=\"pageheading\">\n          Generate Invoices\n        </div>\n        <div className=\"backarrow generateinvoicebackarrow\">\n          <p onClick={() => { navigate('/main') }}><ArrowBackIcon /></p>\n        </div>\n        <Box sx={{ width: '100%', color: 'white' }}>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n              <Tab style={style} label=\"Customer Invoice\" {...a11yProps(0)} />\n              <Tab style={style} label=\"Dealers Invoice\" {...a11yProps(1)} />\n            </Tabs>\n          </Box>\n          <TabPanel value={value} index={0}>\n            <div>\n              <CustomerInvoice\n                api={api}\n                onHandleChangeEvent={onHandleChangeEvent}\n                searchData={searchData}\n                modalview={modalview}\n              />\n            </div>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <div>\n              <DealersInvoice\n                api={api}\n                onHandleChangeEvent={onHandleChangeEvent}\n                searchData={searchData}\n              />\n            </div>\n          </TabPanel>\n        </Box>\n      </div>\n    </div>\n  );\n}\nexport default GenerateInvoice;\n\n","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/ViewInvoicePage/ViewInvoicePage.js",["413","414","415","416","417","418"],[],"import React, { useEffect, useState } from \"react\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport OpenModal from '../../components/molecules/OpenModal/OpenModal';\nimport { useNavigate } from 'react-router-dom';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport moment from 'moment';\nimport FullScreenModal from \"../../components/molecules/FullScreenModal/FullScreenModal\";\nimport '../../style/style.css';\nimport Button from '@mui/material/Button';\n\nconst ViewInvoicePage = ({\n    api\n}) => {\n    const [invoiceData, setInvoiceData] = useState([]);\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [searchData, setSearchData] = useState('');\n    const [modalview, setModalview] = useState('');\n    const [query, setQuery] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    let navigate = useNavigate();\n    const onHandleChangeEvent = (event) => {\n        setSearchData(event.target.value);\n    }\n    const [check, setcheck] = useState(false);\n    useEffect(() => {\n      setcheck(JSON.parse(window.localStorage.getItem('logoutbtn')));\n    }, []);\n    useEffect(()=>{\n      if(check == null){\n        navigate('/');\n      }\n    },[check])\n    useEffect(()=>{\n        api.get('/delivery/getInvoices')\n        .then((res) => {\n            setInvoiceData(res.data);\n        })\n    },[])\n    const openinvoiceevent = (invoiceNo) => {\n        api.post('/delivery/getDeliveryReportData', {\n            params: {\n                invoiceNo\n            }\n        }\n        )\n            .then((res) => {\n                setInvoiceFormData(res.data);\n            })\n    }\n    return (\n        <div>\n            <div>\n                <HeaderWithLogout />\n            </div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                invoiceFormData={invoiceFormData}\n            />\n            <div className=\"viewInvoicePageContainer\">\n                <div className=\"pageheading\">\n                    View Your Invoices\n                </div>\n                <div className=\"searchbarstyle\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Phone Number / Customer Name\"\n                    onChange={(e)=>setQuery(e.target.value)}\n                />\n                </div>\n                <div className=\"displayContainer\">\n                    <div className=\"backarrow\">\n                        <p\n                            onClick={() => {\n                                navigate(\"/main\");\n                            }}\n                        ><ArrowBackIcon /></p>\n                    </div>\n                    <div className=\"table-responsive\">\n                        {\n                            invoiceData.length != 0 &&\n                            <table className=\"table table-striped table-bordered\">\n                                <thead className=\"theadalter\">\n                                    <tr>\n                                        <th>Invoice date</th>\n                                        <th>Invoice no</th>\n                                        <th>Customer name</th>\n                                        <th>Phone Number</th>\n                                        <th>Phone Number Alter One</th>\n                                        <th>Phone Number Alter Two</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        invoiceData.filter((user=>\n                                            user.customer_name.toLowerCase().includes(query) ||\n                                            user.invoice_no.toString().includes(query)\n                                            )).map((data, i) => (\n                                            <tr key={i}>\n                                                <td>\n                                                    {\n                                                        data.delivery_date != null ?\n                                                        moment(data.delivery_date).format('YYYY-MM-DD'):\n                                                        data.delivery_date\n                                                    }\n                                                </td>\n                                                <td>{data.invoice_no}</td>\n                                                <td>{data.customer_name}</td>\n                                                <td>{data.phone_number}</td>\n                                                <td>{data.phone_number_alter_one}</td>\n                                                <td>{data.phone_number_alter_two}</td>\n                                                <td>\n                                                <div className='btnstyle'>\n                                                    <Button \n                                                        id=\"btn\"\n                                                        // type=\"button\" \n                                                        data-bs-toggle=\"modal\"\n                                                        data-bs-target=\"#exampleModal\"\n                                                        onClick={()=>{\n                                                            openinvoiceevent(data.invoice_no);\n                                                        }}\n                                                        >\n                                                            View Invoice\n                                                    </Button>\n                                                </div>\n                                                    <FullScreenModal \n                                                       api={api}\n                                                       invoiceFormData={invoiceFormData}                                                    />\n                                                </td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                        }\n                    </div>\n                    {\n                        invoiceData.length === 0 &&\n                        <p> no data found! </p>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default ViewInvoicePage;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/GenerateReport/GenerateReport.js",["419","420","421","422","423","424","425"],[],"import React,{useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport TextAndSelect from '../../components/molecules/TextAndSelect/TextAndSelect';\nimport DisplayCustomerTable from '../../components/molecules/DisplayCustomerTable/DisplayCustomerTable';\nimport DisplayDeliveryReportsTable from '../../components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable';\nimport DisplayProductDetailsTable from '../../components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable';\nimport DisplayDealersDetailsTable from '../../components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable';\nimport DownloadCustomer from '../../components/molecules/Download/DownloadCustomer';\nimport DownloadDelivery from '../../components/molecules/Download/DownloadDelivery';\nimport { useNavigate } from 'react-router-dom';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport '../../style/style.css';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  let navigate = useNavigate();\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\nconst GenerateReport = ({\n  modalview,\n  api\n}) => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const style = {\n    color: 'black'\n  }\n\n  const [statusselect, setstatusselect] = React.useState(['Booked', 'Cancelled', 'Follow Up In Progress','Purchased']);\n  const [deliverystatus, setDeliverystatus] = React.useState(['Delivered', 'Not Delivered', 'Cancelled']);\n  const [paymentstatus, setpaymentstatus] = React.useState(['Paid', 'Pending']);\n  const [productstatus, setProductstatus] = React.useState(['Available', 'Not Available'])\n  const [gstinstatus, setGstinstatus] = React.useState(['Active', 'In Active']);\n  const [currentstatus, setCurrentstatus] = React.useState('');\n  const [currentstatusAlter, setCurrentstatusAlter] = React.useState('');\n  const [tabledata, setTabledata] = React.useState({});\n  const setTableDataEvent = (e) => {\n    setTabledata(e);\n  }\n  const currentStatusEvent = (e) => {\n    setCurrentstatus(e);\n  }\n  const currentPaymentStatusEvent = (e) => {\n    setCurrentstatusAlter(e)\n  }\n  let navigate = useNavigate();\n  const [check, setcheck] = useState(false);\n    useEffect(() => {\n      setcheck(JSON.parse(window.localStorage.getItem('logoutbtn')));\n    }, []);\n    useEffect(()=>{\n      if(check == null){\n        navigate('/');\n      }\n    },[check])\n  return (\n    <div>\n      <div>\n        <HeaderWithLogout />\n      </div>\n      <div className=\"reportcontainer\">\n        <div className=\"pageheading\">\n          Generate Report\n        </div>\n        <div className=\"backarrow generatereportbackarrow\">\n          <p onClick={() => { navigate('/main') }}><ArrowBackIcon /></p>\n        </div>\n        <Box sx={{ width: '100%', color: 'white' }}>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <Tabs variant=\"scrollable\" value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n              <Tab style={style} label=\"Delivery Reports\" {...a11yProps(0)} />\n              <Tab style={style} label=\"Customer Follow Up Report\" {...a11yProps(1)} />\n              <Tab style={style} label=\"Product Details Report\" {...a11yProps(2)} />\n              <Tab style={style} label=\"Dealers Details Report\" {...a11yProps(3)} />\n            </Tabs>\n          </Box>\n          <TabPanel value={value} index={0}>\n            <div className='tabpanelheader'>\n              <DownloadDelivery\n                setTableDataEvent={setTableDataEvent}\n              />\n              <div classname=\"paymentdeliveryfiltercontainer\">\n                <TextAndSelect\n                  currentStatusEvent={currentPaymentStatusEvent}\n                  statusselect={paymentstatus}\n                  selectlabelname=\"Payment status\"\n                />\n                <TextAndSelect\n                  currentStatusEvent={currentStatusEvent}\n                  statusselect={deliverystatus}\n                  selectlabelname=\"Delivery status\"\n                />\n              </div>\n            </div>\n            <DisplayDeliveryReportsTable\n              api={api}\n              setTableDataEvent={setTableDataEvent}\n              tabledata={tabledata}\n              modalview={modalview}\n              deliverystatus={currentstatus}\n              paymentstatus={currentstatusAlter}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <div className='tabpanelheader'>\n              <DownloadCustomer\n                setTableDataEvent={setTableDataEvent}\n              />\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={statusselect}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayCustomerTable\n              api={api}\n              setTableDataEvent={setTableDataEvent}\n              modalview={modalview}\n              tabledata={tabledata}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <div className='tabpanelheader'>\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={productstatus}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayProductDetailsTable\n              api={api}\n              modalview={modalview}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={3}>\n            <div className='tabpanelheader'>\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={gstinstatus}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayDealersDetailsTable\n              api={api}\n              modalview={modalview}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n        </Box>\n      </div>\n    </div>\n  );\n}\nexport default GenerateReport;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/EmployeeManagementPage/EmployeeManagementPage.js",["426","427","428","429"],[],"import React, {useState, useEffect, Fragment} from \"react\";\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport EmployeesEditableRow from \"../../components/EmployeesEditableRow/EmployeesEditableRow\";\nimport EmployeesReadOnlyRow from \"../../components/molecules/EmployeesReadOnlyRow/EmployeesReadOnlyRow\";\nimport {useNavigate} from 'react-router-dom';\nimport axios from 'axios';\nimport CustomizedSaveIcon from \"../../components/atoms/CustomizedSaveIcon/CustomizedSaveIcon\";\nimport '../../style/style.css';\n\nconst EmployeeManagementPage = ({api}) => {\n    const [check, setcheck] = useState(false);\n    useEffect(() => {\n      setcheck(JSON.parse(window.localStorage.getItem('logoutbtn')));\n    }, []);\n    useEffect(()=>{\n      if(check == null){\n        navigate('/');\n      }\n    },[check])\n    let navigate = useNavigate();\n    const [employees, setemployees] = useState({});\n    useEffect(()=>{\n        api.get('/employees/getusers')\n        .then((res) => {\n            setemployees(res.data);\n        })\n    },[]);\n    const getusers = () => {\n        api.get('/employees/getusers')\n        .then((res) => {\n            setemployees(res.data);\n        })\n    }\n    const [EditId,setEditId] = useState(null);\n    const [editFormData, setEditFormData] = useState({\n        username: \"\",\n        password: \"\"\n      });\n    const [addFormData, setAddFormData] = useState({\n        username: \"\",\n        password: \"\"\n      });\n    const handleEditFormSubmit = () => {\n        api.put('/employees/edituserdata', {\n            params: {\n                id:EditId,\n                data:editFormData\n            }\n          })\n          .then((res) => {\n            if(res){\n                alert(\"Employee Data Edited Successfully\");\n                getusers();\n            }\n          })\n        setEditId(null);\n      };\n      const handleEditClick = (event, data) => {\n            setEditId(data.id);\n    \n        const formValues = {\n          username: data.username,\n          password: data.password\n        };\n    \n        setEditFormData(formValues);\n      };\n      const handleEditFormChange = (event) => {\n        event.preventDefault();\n        setEditFormData({ ...editFormData, [event.target.name]: event.target.value })\n      };\n      const handleAddFormChange = (event) => {\n        event.preventDefault();\n        setAddFormData({ ...addFormData, [event.target.name]: event.target.value })\n      }\n      const handleAddFormSubmit = () => {\n        api.post('/employees/insertuserdata', {\n            params: {\n                addFormData\n            }\n          })\n          .then((res) => {\n            if(res){\n                alert(\"Employee Data Added Successfully\");\n                getusers();\n            }\n          })\n      }\n      const handleCancelClick = () => {\n        setEditId(null);\n      };\n      const [useriddelete, setuseriddelete] = useState();\n      const  deletesuperevent = (id) => {\n        setuseriddelete(id);\n    }\n    const handleDeleteClick = (e) => {\n        if(e == \"yes\"){\n            axios.delete(`http://3.84.110.201:3001/employees/deleteuserdata`,\n            {\n                data: {\n                    id: useriddelete\n                }\n            })\n            .then((res) => {\n                if(res){\n                    getusers();\n                }\n            })\n        }\n    }\n    return(\n        <div>\n        <div>\n          <HeaderWithLogout />\n        </div>\n        <div className=\"reportcontainer\">\n          <div className=\"pageheading\">\n            Employee Management\n          </div>\n          <div className=\"displayContainer\">\n                    <div className=\"backarrow\">\n                        <p\n                            onClick={() => {\n                                navigate(\"/main\");\n                            }}\n                        ><ArrowBackIcon /></p>\n                    </div>\n\n                    <div className=\"addemployeestyle\">\n                        <div><h5>Add an employee:-</h5></div>\n                        <div>\n                            <input\n                        type=\"text\"\n                        name=\"username\"\n                        required=\"required\"\n                        placeholder=\"Enter a username...\"\n                        onChange={handleAddFormChange}\n                        />\n                        </div>\n                        <div>\n                        <input\n                        type=\"text\"\n                        name=\"password\"\n                        required=\"required\"\n                        placeholder=\"Enter an password...\"\n                        onChange={handleAddFormChange}\n                        />\n                        </div>\n                        <div>\n                        <CustomizedSaveIcon \n                            type=\"submit\"\n                            onClick={handleAddFormSubmit}\n                        />\n                        </div>\n                    </div>\n                    <div className=\"table-responsive\">\n                        {\n                            employees.length != 0 &&\n                                <table className=\"table table-striped table-bordered\">\n                                    <thead className=\"theadalter\">\n                                        <tr>\n                                            <th>User Name</th>\n                                            <th>Password</th>\n                                            <th>Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            employees && employees.length &&\n                                            employees.map((data)=>(\n                                                <Fragment>\n                                                {EditId === data.id ? (\n                                                <EmployeesEditableRow\n                                                    rowdata={data}\n                                                    handleEditFormChange={handleEditFormChange}\n                                                    handleCancelClick={handleCancelClick}\n                                                    handleEditFormSubmit={handleEditFormSubmit}\n                                                />\n                                                ) : (\n                                                <EmployeesReadOnlyRow\n                                                deletesuperevent={deletesuperevent}\n                                                    handleEditClick={handleEditClick}\n                                                    rowdata={data}\n                                                    handleDeleteClick={handleDeleteClick}\n                                                />\n                                                )}\n                                            </Fragment>\n                                            ))\n                                        }\n                                    </tbody>\n                                </table>\n                        }\n                    </div>\n                    {\n                        employees.length === 0 &&\n                        <p> No data found! </p>\n                    }\n                </div>\n        </div>\n      </div>\n    );\n}\nexport default EmployeeManagementPage;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/Footer/Footer.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/Header/Header.js",["430"],[],"import React from \"react\";\nimport CustomizedLogo from '../../components/atoms/CustomizedLogo/CustomizedLogo';\nimport { useNavigate } from 'react-router-dom';\nimport '../../style/style.css';\n\nconst Header = ({\n}) => {\n    let navigate = useNavigate();\n    return (\n        <div className=\"headercontainer\">\n            <div className=\"containeritems\" >\n                <CustomizedLogo \n                    onClick={()=>{\n                        navigate('/');\n                    }}\n                />\n                <div className=\"companyname\">SHREE PARAMANANDA ENTERPRISES</div>\n            </div>\n        </div>\n    );\n}\nexport default Header;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/pages/Header/HeaderWithLogout.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/FullScreenModalOne/FullScreenModalOne.js",["431"],[],"import React from \"react\";\nimport AddCustomersForm from \"../AddCustomersForm/AddCustomersForm\";\nimport AddCustomersFormNew from \"../AddCustomersForm/AddCustomersFormNew\";\n\nconst FullScreenModalOne = ({\n    api,\n    currentCustomerReferenceNo\n}) => {\n    return(\n        <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-fullscreen modal-dialog-scrollable\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">View Invoices </h5>\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <h1>body</h1>\n                        <AddCustomersFormNew\n                        api={api}\n                        currentCustomerReferenceNo={currentCustomerReferenceNo}\n                        />\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default FullScreenModalOne;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/OpenModal/OpenModal.js",["432"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport InvoiceFormat from '../InvoiceFormat/InvoiceFormat';\nimport AddCustomersForm from '../AddCustomersForm/AddCustomersForm';\nimport AddFewCustomersForm from '../AddFewCustomersForm/AddFewCustomersForm';\nimport CustomerInvoiceForm from '../CustomerInvoiceForm/CustomerInvoiceForm';\nimport DealersInvoiceForm from '../DealersInvoiceForm/DealersInvoiceForm';\nimport DealersDetailsForm from '../DealersDetailsForm/DealersDetailsForm';\nimport ProductsDetailsForm from '../ProductsDetailsForm/ProductsDetailsForm';\nimport DeliveryDetailsForm from '../DeliveryDetailsForm/DeliveryDetailsForm';\nimport AddProductForm from '../AddProductForm/AddProductForm';\nimport AddDealersForm from '../AddDealersForm/AddDealersForm';\nimport CustomerFollowUpForm from '../CustomerFollowUpForm/CustomerFollowUpForm';\nimport DealersInvoiceFormGenerate from '../../molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate';\nimport DealersInvoicesListForm from '../../molecules/DealersInvoicesListForm/DealersInvoicesListForm';\nimport EditDealersReportForm from '../../molecules/EditDealersReportForm/EditDealersReportForm';\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 900,\n  height: 700,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  overflow: \"scroll\"\n};\nconst OpenModal = ({\n  api,\n  displayDealersDetailsData,\n  displayProductDetailsData,\n  displayDeliveryReportsData,\n  invoiceFormData,\n  modalbuttonname,\n  modalview,\n  rowdata,\n  currentCustomerReferenceNo,\n  displayCustomerFollowUpData,\n  displaycustomerfollowupevent,\n  custrefno,\n  openinvoiceevent,\n  invoiceno,\n  formdisplaydata,\n  dealersdata,\n  deliveryinvoices,\n  fetchdealersdatatoverify,\n  changeevent,\n  verificationstatus,\n  currentInvoiceno,\n  purchasestatus,\n  bookingstatus,\n  open,\n  openevent,\n  currentCustomerReferenceNoCustomerInvoice,\n  setpurchasemsgevent,\n  fetchinvoicesfromdelivery,\n  displayBookedCustomeerDataEvent\n}) => {\n  const handleClose = () => {\n    openevent(false);\n \n    if (modalview === 'productdetailsform') {\n      displayProductDetailsData();\n    }\n    else if (modalview === 'deliverydetailsform') {\n      displayDeliveryReportsData();\n    }\n    else if (modalview === 'editdealersreport') {\n      displayDealersDetailsData();\n    }\n    else if (modalview === 'addproductform') {\n      displayProductDetailsData();\n    }\n    else if (modalview === 'adddealersform') {\n      displayDealersDetailsData();\n    }\n    else if (modalview === 'customerfollowupform') {\n      displayCustomerFollowUpData();\n    }\n    else if (modalview === 'customerdetailsform') {\n      displaycustomerfollowupevent();\n    }\n    else if (modalview === 'addcustomerform') {\n      displaycustomerfollowupevent();\n    }\n    // else if (modalview === 'dealersdetailsform') {\n    //   fetchinvoicesfromdelivery();\n    // }\n    else {\n      displayBookedCustomeerDataEvent();\n    }\n  };\n  return (\n    <div>\n      <div className='modalbutton'>\n      </div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {\n              modalview === 'invoiceformat' &&\n              <InvoiceFormat\n                api={api}\n                invoiceFormData={invoiceFormData}\n                invoiceno={invoiceno}\n              />\n            }\n            {\n              modalview === 'customerdetailsform' &&\n              <AddCustomersForm\n                setpurchasemsgevent={setpurchasemsgevent}\n                api={api}\n                purchasestatus={purchasestatus}\n                bookingstatus={bookingstatus}\n                handleClose={handleClose}\n                displayCustomerFollowUpData={displayCustomerFollowUpData}\n                currentCustomerReferenceNo={currentCustomerReferenceNo}\n                displaycustomerfollowupevent={displaycustomerfollowupevent}\n              />\n            }\n            {\n              modalview === 'addcustomerform' &&\n              <AddFewCustomersForm\n                api={api}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'customerInvoiceForm' &&\n              <CustomerInvoiceForm\n                api={api}\n                invoiceFormData={invoiceFormData}\n                custrefno={custrefno}\n                currentCustomerReferenceNoCustomerInvoice={currentCustomerReferenceNoCustomerInvoice}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'DealersInvoiceForm' &&\n              <DealersInvoiceForm\n                api={api}\n                dealersdata={dealersdata}\n                invoiceFormData={invoiceFormData}\n                handleClose={handleClose}\n                formdisplaydata={formdisplaydata}\n              />\n            }\n            {\n              modalview === 'generatecustomerinvoiceform' &&\n              <InvoiceFormat\n                api={api}\n                invoiceFormData={invoiceFormData}\n                custrefno={custrefno}\n                openinvoiceevent={openinvoiceevent}\n              />\n            }\n\n            {\n              modalview === 'DealersInvoiceFormGenerateFormat' &&\n              <DealersInvoiceFormGenerate\n                api={api}\n                modalview={modalview}\n                invoiceFormData={invoiceFormData}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n              />\n            }\n            {\n              modalview === \"DealersInvoicesListForm\" &&\n              <DealersInvoicesListForm\n                api={api}\n                deliveryinvoices={deliveryinvoices}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === \"dealersdetailsform\" &&\n              <DealersDetailsForm\n                fetchinvoicesfromdelivery={fetchinvoicesfromdelivery}\n                api={api}\n                currentInvoiceno={currentInvoiceno}\n                verificationstatus={verificationstatus}\n                changeevent={changeevent}\n                handleClose={handleClose}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n              />\n            }\n            {\n              modalview === 'deliverydetailsform' &&\n              <DeliveryDetailsForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'customerfollowupform' &&\n              <CustomerFollowUpForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'productdetailsform' &&\n              <ProductsDetailsForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'editdealersreport' &&\n              <EditDealersReportForm\n                rowdata={rowdata}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'adddealersform' &&\n              <AddDealersForm\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'addproductform' &&\n              <AddProductForm\n                handleClose={handleClose}\n              />\n            }\n          </Typography>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\nexport default OpenModal;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/TextAndTextInput/TextAndTextInput.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/FullScreenModal/FullScreenModal.js",["433"],[],"import React, {useRef } from \"react\";\nimport AddFewCustomersForm from \"../AddFewCustomersForm/AddFewCustomersForm\";\nimport InvoiceFormat from \"../InvoiceFormat/InvoiceFormat\";\nimport CustomizedPrint from \"../../atoms/CustomizedPrint/CustomizedPrint\";\nimport { useReactToPrint } from \"react-to-print\";\n\nconst FullScreenModal = ({\n    api,\n    invoiceFormData,\n    custrefno,\n    openinvoiceevent\n}) => {\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n    return(\n        <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-fullscreen modal-dialog-scrollable\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Reciept </h5>\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div ref={componentRef} className=\"modal-body\">\n                    <InvoiceFormat\n                        api={api}\n                        invoiceFormData={invoiceFormData}\n                        custrefno={custrefno}\n                        openinvoiceevent={openinvoiceevent}\n                    />\n                    </div>\n                    <div className=\"modal-footer\">\n                        {/* <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button> */}\n                        <div>\n                            <CustomizedPrint\n                                onClick={handlePrint}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default FullScreenModal;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedSearchBar/CustomizedSearchBar.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedBtn/CustomizedBtn.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCard/CustomizedCard.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/organisms/CustomerInvoice/CustomerInvoice.js",["434","435","436","437","438","439","440","441","442","443","444","445","446","447"],[],"import React, { useState, useEffect } from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport FullScreenModal from \"../../molecules/FullScreenModal/FullScreenModal\";\nimport '../../../style/style.css';\nimport Button from '@mui/material/Button';\n\nconst CustomerInvoice = ({\n    searchData,\n    onHandleChangeEvent,\n    api\n}) => {\n    const [customertable, setCustomertable] = useState([]);\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [currentinvoiceno, setcurrentinvoiceno] = useState();\n    const [currentCustomerReferenceNoCustomerInvoice, setcurrentCustomerReferenceNoCustomerInvoice] = useState();\n    const [modalview, setModalview] = useState('');\n    const [query, setQuery] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(() => {\n        displayBookedCustomeerDataEvent();\n    }, [])\n    const displayBookedCustomeerDataEvent = () => {\n        api.post('customer/displayBookedCustomeerData', {\n            params:{\n                final_status: 'Booked'\n            }\n        })\n        .then((res)=>{\n            setCustomertable(res.data);\n        })\n    }\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const modalviewchange = () => {\n        setChangedmodalview(\"generatecustomerinvoiceform\");\n    }\n    const openCustomerInvoiceEvent = (customer_reference_no, product_hsn_code) => {\n        api.post('delivery/getDeliveryDataForVerification', {\n            params:{\n                customer_reference_no: customer_reference_no,\n                    product_hsn_code:product_hsn_code\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n        }\n    const openinvoiceevent = (customer_reference_no) => {\n        api.post('delivery/getDeliveryReportData',{\n            params:{\n                customer_reference_no\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n        }\n    \n    const [customerrefno, setcustomerrefno] = useState();\n    useEffect(()=>{\n        invoiceFormData.map((data)=>{\n            setcustomerrefno(data.customer_reference_no);\n            setcurrentinvoiceno(data.invoice_no);\n        })\n    },[invoiceFormData])\n    const goEventClicked = () => {\n        api.post('jointables/getCustomerFollowUpDataBooked', {\n            params:{\n                phoneno: searchData,\n                customer_name: searchData,\n                phone_number_alter_one:searchData,\n                phone_number_alter_two:searchData\n            }\n        })\n        .then((res)=>{\n            setCustomertable(res.data);\n        })\n    }\n    const handleKeypress = (e) => {\n        //it triggers by pressing the enter key\n      if (e.key === 'Enter') {\n        goEventClicked();\n        e.preventDefault();\n      }\n    };\n    useEffect(() => {\n        if (searchData === \"\") {\n            displayBookedCustomeerDataEvent();\n        }\n    }, [searchData])\n    return (\n        <div className=\"generateinvoicecontainer\">\n            <div className=\"searchbarstyle\">\n              <input\n                type=\"text\"\n                placeholder=\"Phone Number / Customer Name\"\n                onChange={(e)=>setQuery(e.target.value)}\n              />\n            </div>\n            {/* <CustomizedSearchBar\n                onHandleChangeEvent={onHandleChangeEvent}\n                goEventClicked={goEventClicked}\n                onKeyPress={handleKeypress}\n                labelname=\"phone number/ customer name\"\n                Btnname=\"search\"\n            /> */}\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                invoiceFormData={invoiceFormData}\n                openinvoiceevent={openinvoiceevent}\n                currentCustomerReferenceNoCustomerInvoice={currentCustomerReferenceNoCustomerInvoice}\n                displayBookedCustomeerDataEvent={displayBookedCustomeerDataEvent}\n            />\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Enquiry Date</th>\n                            <th>Customer Name</th>\n                            <th>Customer Address</th>\n                            <th>Phone Number</th>\n                            <th>Phone Number Alter - 1</th>\n                            <th>Phone Number Alter - 2</th>\n                            <th>Enquired Product Hsn Code</th>\n                            <th>Enquired Product</th>\n                            <th>Quantity</th>\n                            <th>Comments</th>\n                            <th>Follow Up Call </th>\n                            <th>Final Status</th>\n                            <th>Action</th>\n                            {/* <th>Generate</th> */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            customertable && customertable.length \n                            ? \n                            customertable.filter((user=>\n                                user.customer_name.toLowerCase().includes(query) || \n                                user.phone_number.toString().includes(query) ||\n                                user.phone_number_alter_one == query ||\n                                user.phone_number_alter_two == query\n                                )).map((data, i) => (\n                                data.from_dealer == 1 \n                                ? <></>\n                                :  <tr key={i}>\n                                <td>{data.customer_reference_no}</td>\n                                <td>{\n                                    data.enquiry_date != null ?\n                                    moment(data.enquiry_date).format('YYYY-MM-DD'):\n                                    data.enquiry_date\n                                }\n                                </td>\n                                <td>{data.customer_name}</td>\n                                <td>{data.customer_address}</td>\n                                <td>{data.phone_number}</td>\n                                <td>{data.phone_number_alter_one}</td>\n                                <td>{data.phone_number_alter_two}</td>\n                                <td>{data.product_hsn_code}</td>\n                                <td>{data.product}</td>\n                                <td>{data.quantity}</td>\n                                <td>{data.comments}</td>\n                                <td>{\n                                    data.follow_up_call != null ?\n                                    moment(data.follow_up_call).format('YYYY-MM-DD'):\n                                    data.follow_up_call \n                                }\n                                </td>\n                                <td>{data.final_status}</td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"Verify Invoice\"\n                                        onClick={()=>{\n                                            setcurrentCustomerReferenceNoCustomerInvoice(data.customer_reference_no);\n                                            openCustomerInvoiceEvent(data.customer_reference_no, data.product_hsn_code);\n                                            setModalview(\"customerInvoiceForm\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                </td>\n                                {/* <td>\n                                 <div className='btnstyle'>\n                                    <Button\n                                        // id=\"btn\"\n                                        // type=\"button\" \n                                        data-bs-toggle=\"modal\"\n                                        data-bs-target=\"#exampleModal\"\n                                        onClick={()=>{\n                                            openinvoiceevent(data.customer_reference_no);\n                                        }}\n                                        // className=\"btnstyle\"\n                                        >\n                                            Generate Invoice\n                                    </Button>\n                                </div> \n                                <FullScreenModal \n                                    api={api}\n                                    modalview={modalview}\n                                    open={open}\n                                    openevent={openevent}\n                                    invoiceFormData={invoiceFormData}\n                                    openinvoiceevent={openinvoiceevent}\n                                    currentCustomerReferenceNoCustomerInvoice={currentCustomerReferenceNoCustomerInvoice}\n                                />\n                                {/* <CustomizedBtn \n                                        BtnName=\"Generate Invoice\"\n                                        onClick={()=>{\n                                            openinvoiceevent(data.customer_reference_no);\n                                            setModalview(\"generatecustomerinvoiceform\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                 \n                                    \n                                </td> */}\n                                </tr>\n                              ))\n                              : <tr>\n                                <td colspan=\"15\">No Record!</td>\n                              </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default CustomerInvoice;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/organisms/DealersInvoice/DealersInvoice.js",["448","449","450","451","452"],[],"import React,{useState, useEffect} from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport DealersInvoicesListForm from \"../../molecules/DealersInvoicesListForm/DealersInvoicesListForm\";\nimport '../../../style/style.css';\n\nconst DealersInvoice = ({\n    searchData,\n    onHandleChangeEvent,\n    api\n}) => {\n    const [dealersDetails, setdealersDetails] = useState({});\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const [query, setQuery] = useState('');\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    const displayDealersDetailsDatawithstatusactiveevent = () =>{\n        api.get('dealers/displayDealersDetailsDatawithstatusactive')\n        .then((res)=>{\n            setdealersDetails(res.data);\n        })\n    }\n    useEffect(()=>{\n        displayDealersDetailsDatawithstatusactiveevent();\n    },[])\n    const openinvoiceevent = (gstin_number) => {\n        api.post('dealers/getdealersfromgst',{\n            params:{\n                gstin_Number:gstin_number\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n    }\n    const fetchdeliverydatamatchinggstevent = (gstin_number) => {\n        api.post('delivery/fetchdeliverymatchinggstno',{\n            params:{\n                gst:gstin_number\n            }\n        })\n        .then((res)=>{\n            if(res.data && res.data.length == 0){\n                res.data.push(\n                    {'state':''})\n            }\n            setInvoiceFormData(res.data);\n        })\n    }\n    useEffect(() => {\n        if (searchData === \"\") {\n            displayDealersDetailsDatawithstatusactiveevent();\n        }\n    }, [searchData])\n    const goEventClicked = () => {\n        api.post('dealers/getDealersDetailsData',{\n            params:{\n                searchData\n            }\n        })\n        .then((res)=>{\n            setdealersDetails(res.data);\n        })\n    }\n    const handleKeypress = (e) => {\n        //it triggers by pressing the enter key\n      if (e.key === 'Enter') {\n        goEventClicked();\n        e.preventDefault();\n      }\n    };\n    const [dealersdata,setdealersdata] = useState();\n    const dealersdataevent = (e) => {\n        setdealersdata(e)\n    };\n    const [deliveryinvoices, setdeliveryinvoices] = useState();\n    const fetchinvoicesfromdelivery = (e) => {\n        api.post('delivery/fetchinvoicesfromdelivery', {\n            params:{\n                gst:e\n            }\n        })\n        .then((res)=>{\n            setdeliveryinvoices(res.data);\n        })\n    }\n    return(\n        <div className=\"generateinvoicecontainer\">\n            <OpenModal \n                api={api}\n                open={open}\n                openevent={openevent}\n                dealersdata={dealersdata}\n                modalview={modalview}\n                invoiceFormData={invoiceFormData} \n                deliveryinvoices={deliveryinvoices}\n            />\n            {/* <CustomizedSearchBar \n                onHandleChangeEvent={onHandleChangeEvent}\n                goEventClicked={goEventClicked}\n                onKeyPress={handleKeypress}\n                labelname=\"phone number/ name\" \n                Btnname=\"Search\"\n            /> */}\n            <div>\n            <DealersInvoicesListForm \n                api={api}\n                deliveryinvoices={deliveryinvoices}\n                fetchinvoicesfromdelivery={fetchinvoicesfromdelivery}\n            />\n            </div>\n            <div className=\"searchbarstyle\">\n                <input\n                type=\"text\"\n                placeholder=\"Phone Number / Customer Name\"\n                onChange={(e)=>setQuery(e.target.value)}\n                />\n            </div>\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>GSTIN Number</th>\n                            <th>Enterprise Name</th>\n                            <th>Enterprise Address</th>\n                            <th>Enterprise State</th>\n                            <th>Proprietor Name</th>\n                            <th>Proprietor Phone Number</th>\n                            <th>GST Status</th>\n                            <th>Action</th>\n                            <th>Generate</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        dealersDetails && dealersDetails.length \n                        ? dealersDetails.filter((user=>\n                            user.proprietor_name.toLowerCase().includes(query) ||\n                            user.proprietor_phone_number.toString().includes(query)\n                            )).map((data, i)=>(\n                            <tr key={i}>\n                                <td>{data.gstin_number}</td>\n                                <td>{data.enterprise_name}</td>\n                                <td>{data.enterprise_address}</td>\n                                <td>{data.enterprise_state}</td>\n                                <td>{data.proprietor_name}</td>\n                                <td>{data.proprietor_phone_number}</td>\n                                <td>{data.gstin_status}</td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"Generate Invoice\"\n                                        onClick={()=>{\n                                            dealersdataevent(data);\n                                            openinvoiceevent(data.gstin_number);\n                                            fetchdeliverydatamatchinggstevent(data.gstin_number);\n                                            setModalview(\"DealersInvoiceForm\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                </td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"View Invoices\"\n                                        onClick={()=>{\n                                            dealersdataevent(data);\n                                            openinvoiceevent(data.gstin_number);\n                                            fetchdeliverydatamatchinggstevent(data.gstin_number);\n                                            fetchinvoicesfromdelivery(data.gstin_number);\n                                        }}\n                                    />\n                                </td>\n                            </tr>\n                        ))\n                        : \n                            <tr>\n                                <td colspan=\"15\">No Record!</td>\n                            </tr>\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoice;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/TextAndSelect/TextAndSelect.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable.js",["453","454","455","456","457","458","459","460","461"],[],"import React, { useState, useEffect } from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from '../OpenModal/OpenModal';\nimport CustomizedEditIcon from \"../../atoms/CustomizedEditIcon/CustomizedEditIcon\";\nimport { CSVLink } from \"react-csv\";\nimport CustomizedDownload from \"../../atoms/CustomizedDownload/CustomizedDownload\";\nimport moment from 'moment';\n\nconst DisplayDeliveryReportsTable = ({\n    deliverystatus,\n    paymentstatus,\n    setTableDataEvent,\n    tabledata,\n    api\n}) => {\n    const [filterflag, setfilterflag] = useState(false);\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [rowdata, setrowdata] = useState({});\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const [query, setQuery] = useState('');\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(() => {\n        if (filterflag && deliverystatus && paymentstatus) {\n            statusfilterdeliveryreport();\n        } else {\n            displayDeliveryReportsData();\n        }\n    }, [deliverystatus, paymentstatus])\n    useEffect(()=>{\n        if (paymentstatus){\n            paymentstatusfilteronly();\n        }\n    },[paymentstatus])\n    useEffect(()=>{\n        if(deliverystatus){\n            deliverystatusfilteronly();\n        }\n    },[deliverystatus])\n    const headers = [\n        { label: 'customer reference no', key: 'customer_reference_no' },\n        { label: 'booked date', key: 'booked_date' },\n        { label: 'requested delivery date', key: 'requested_delivery_date' },\n        { label: 'delivery date', key: 'delivery_date' },\n        { label: 'invoice no', key: 'invoice_no' },\n        { label: 'customer address', key: 'customer_address' },\n        { label: 'gst', key: 'gst' },\n        { label: 'phone number', key: 'phone_number' },\n        { label: 'product hsn code', key: 'product_hsn_code' },\n        { label: 'product', key: 'product' },\n        { label: 'quantity', key: 'quantity' },\n        { label: 'rate', key: 'rate' },\n        { label: 'discount', key: 'discount' },\n        { label: 'cgst', key: 'cgst' },\n        { label: 'sgst', key: 'sgst' },\n        { label: 'igst', key: 'igst' },\n        { label: 'final amount', key: 'final_amount' },\n        { label: 'balance amount', key: 'balance_amount' },\n        { label: 'payment status', key: 'payment_status' },\n        { label: 'booking advance amount', key: 'booking_advance_amount' },\n        { label: 'delivery status', key: 'delivery_status' },\n        { label: 'customer name', key: 'customer_name' },\n    ];\n    const csvReport = {\n        filename: 'DeliveryReports.csv',\n        headers: headers,\n        data: tabledata\n    }\n    const displayDeliveryReportsData = () => {\n        api.get('delivery/displayDeliveryReportsData')\n        .then((res)=>{\n            setTableDataEvent(res.data);\n            setfilterflag(true);\n        })\n    }\n    const statusfilterdeliveryreport = () => {\n        api.post('delivery/statusfilterdeliveryreport',{\n            params:{\n                deliverystatus: deliverystatus,\n                paymentstatus: paymentstatus\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const paymentstatusfilteronly = () => {\n        api.post('delivery/paymentstatusfilteronly',{\n            params:{\n                paymentstatus: paymentstatus\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const deliverystatusfilteronly = () => {\n        api.post('delivery/deliverystatusfilteronly',{\n            params:{\n                deliverystatus: deliverystatus,\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const searchHandle = (e) => {\n        setSearchvalue(e.target.value);\n    }\n    const searchclicked = () => {\n        api.post('delivery/getDeliveryReportData',{\n            params:{\n                phoneno: searchvalue,\n                customer_name: searchvalue\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const handleKeypress = (e) => {\n        //it triggers by pressing the enter key\n      if (e.key === 'Enter') {\n        searchclicked();\n        e.preventDefault();\n      }\n    };\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    useEffect(() => {\n        if (searchvalue === \"\") {\n            displayDeliveryReportsData();\n        }\n    }, [searchvalue])\n    return (\n        <div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayDeliveryReportsData={displayDeliveryReportsData}\n                rowdata={rowdata}\n            />\n            <div className=\"searchbarstyle\">\n              <input\n                type=\"text\"\n                placeholder=\"Phone Number / Customer Name\"\n                onChange={(e)=>setQuery(e.target.value)}\n              />\n            </div>\n            {/* <CustomizedSearchBar\n                labelname=\"customer :- phone number / name\"\n                Btnname=\"search\"\n                onHandleChangeEvent={searchHandle}\n                goEventClicked={searchclicked}\n                onKeyPress={handleKeypress}\n            /> */}\n            <div>\n                {\n                    tabledata && tabledata.length ?\n                        <CSVLink {...csvReport}><CustomizedDownload /></CSVLink> : null\n                }\n            </div>\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Product Sl Number</th>\n                            <th>Booked Date</th>\n                            <th>Requested Delivery Date</th>\n                            <th>Delivery Date</th>\n                            <th>Invoice Number</th>\n                            <th>Customer Name </th>\n                            <th>Customer Address</th>\n                            <th>GSTIN/UIN:</th>\n                            <th>Phone number</th>\n                            <th>Phone number alter one</th>\n                            <th>Phone number alter two</th>\n                            <th>Product HSN Code </th>\n                            <th>Product</th>\n                            <th>Quantity</th>\n                            <th>Rate</th>\n                            <th>Discount</th>\n                            <th>CGST</th>\n                            <th>SGST</th>\n                            <th>IGST</th>\n                            <th>Final Amount</th>\n                            <th>Balance Amount</th>\n                            <th>Payment status </th>\n                            <th>Booking Advance Amount</th>\n                            <th>Delivery Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            tabledata && tabledata.length \n                            ? tabledata.filter((user=>\n                                user.customer_name.toLowerCase().includes(query) || \n                                user.phone_number.toString().includes(query) ||\n                                user.phone_number_alter_one == query ||\n                                user.phone_number_alter_two == query\n                                )).map((data, i) => (\n                                <tr key={i}>\n                                    <td>{data.customer_reference_no}</td>\n                                    <td>{data.product_sl_no}</td>\n                                    <td>\n                                        {\n                                            data.booked_date != null ?\n                                            moment(data.booked_date).format('YYYY-MM-DD'):\n                                            data.booked_date \n                                        }\n                                    </td>\n                                    <td>\n                                        {\n                                            data.requested_delivery_date != null ?\n                                            moment(data.requested_delivery_date).format('YYYY-MM-DD'):\n                                            data.requested_delivery_date \n                                        }\n                                    </td>\n                                    <td>\n                                        {\n                                            data.delivery_date != null ?\n                                            moment(data.delivery_date).format('YYYY-MM-DD'):\n                                            data.delivery_date\n                                        }\n                                    </td>\n                                    <td>{data.invoice_no}</td>\n                                    <td>{data.customer_name}</td>\n                                    <td>{data.customer_address}</td>\n                                    <td>{data.gst}</td>\n                                    <td>{data.phone_number}</td>\n                                    <td>{data.phone_number_alter_one}</td>\n                                    <td>{data.phone_number_alter_two}</td>\n                                    <td>{data.product_hsn_code}</td>\n                                    <td>{data.product}</td>\n                                    <td>{data.quantity}</td>\n                                    <td>{data.rate}</td>\n                                    <td>{data.discount}</td>\n                                    <td>{data.cgst}</td>\n                                    <td>{data.sgst}</td>\n                                    <td>{data.igst}</td>\n                                    <td>{data.final_amount}</td>\n                                    <td>{data.balance_amount}</td>\n                                    <td>{data.payment_status}</td>\n                                    <td>{data.booking_advance_amount}</td>\n                                    <td>{data.delivery_status}</td>\n                                    <td>\n                                    <CustomizedEditIcon\n                                        onClick={() => { \n                                            rowdataevent(data);\n                                            setmodalview(\"deliverydetailsform\");\n                                            openevent(true);\n                                            }}\n                                    />\n                                    </td>\n                                </tr>\n                            ))\n                            : \n                                <tr>\n                                    <td colSpan={23}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DisplayDeliveryReportsTable;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DisplayCustomerTable/DisplayCustomerTable.js",["462","463","464","465","466","467"],[],"import React, { useEffect, useState } from 'react';\nimport CustomizedSearchBar from '../../atoms/CustomizedSearchBar/CustomizedSearchBar';\nimport CustomizedDownload from '../../atoms/CustomizedDownload/CustomizedDownload';\nimport CustomizedPrint from '../../atoms/CustomizedPrint/CustomizedPrint';\nimport {CSVLink} from \"react-csv\";\nimport OpenModal from '../../molecules/OpenModal/OpenModal';\nimport CustomizedEditIcon from '../../atoms/CustomizedEditIcon/CustomizedEditIcon';\nimport moment from 'moment';\n\n\nconst DisplayCustomerTable = ({\n    currentstatus,\n    setTableDataEvent,\n    tabledata,\n    api\n}) => {\n    const [filterflag, setfilterflag] = useState(false);\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [rowdata, setrowdata] = useState({});\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const [query, setQuery] = useState('');\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(()=>{\n        if (filterflag && currentstatus ){\n            statusfiltercustomerdata();\n        }else {\n            displayCustomerFollowUpData();   \n        }\n    },[currentstatus])\n\n    const headers =[\n        {label:'Comments', key:'comments'},\n        {label:'Customer address', key:'customer_address'},\n        {label:'Customer name', key:'customer_name'},\n        {label:'Customer reference No', key:'customer_reference_no'},\n        {label:'Enquired product', key:'enquired_product'},\n        {label:'Enquired product hsn code', key:'enquired_product_hsn_code'},\n        {label:'Enquired date', key:'enquiry_date'},\n        {label:'Final status', key:'final_status'},\n        {label:'Follow up call', key:'follow_up_call'},\n        {label:'Phone number', key:'phone_number'},\n        {label:'Quantity', key:'quantity'}\n      ];\n      const csvReport = {\n        filename:'CustomerReports.csv',\n        headers:headers,\n        data:tabledata\n      }\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    const displayCustomerFollowUpData = () => {\n        api.get('customer/displayCustomerFollowUpData')\n        .then((res)=>{\n            setTableDataEvent(res.data);\n              setfilterflag(true);\n        })\n    }\n    useEffect(()=>{\n        if (searchvalue === \"\"){\n            displayCustomerFollowUpData();\n        }\n    },[searchvalue])\n    const statusfiltercustomerdata = () => {\n        api.post('customer/statusfiltercustomerdata',{\n            params:{\n                status:currentstatus\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n  }\n  const searchHandle = (e) => {\n    setSearchvalue(e.target.value);\n  }\n  const searchclicked = () => {\n    api.post('customer/getCustomerFollowUpDataCustomer',{\n        params:{\n            searchvalue\n        }\n    })\n    .then((res)=>{\n        setTableDataEvent(res.data);\n    })\n  }\n  const handleKeypress = (e) => {\n    //it triggers by pressing the enter key\n  if (e.key === 'Enter') {\n    searchclicked();\n    e.preventDefault();\n  }\n};\n    return(\n        <div>\n             <OpenModal \n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayCustomerFollowUpData={displayCustomerFollowUpData}\n                rowdata={rowdata} \n            />\n            <div className=\"searchbarstyle\">\n              <input\n                type=\"text\"\n                placeholder=\"Phone Number / Customer Name\"\n                onChange={(e)=>setQuery(e.target.value)}\n              />\n            </div>\n            {/* <CustomizedSearchBar \n                labelname=\"customer :- phone number / name\"\n                Btnname=\"search\"\n                onHandleChangeEvent={searchHandle}\n                goEventClicked={searchclicked}\n                onKeyPress={handleKeypress}\n            /> */}\n            <div>\n                {\n                    tabledata && tabledata.length ? \n                    <CSVLink {...csvReport}><CustomizedDownload/></CSVLink> : null\n                }\n                {/* <CustomizedPrint /> */}\n            </div>\n            <div className='table-responsive'>\n                <table className='table table-striped table-bordered tablebackground'>\n                    <thead className='theadalter'>\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Enquiry Date</th>\n                            <th>Customer Name</th>\n                            <th>Customer Address</th>\n                            <th>Phone Number</th>\n                            <th>Phone Number Alter One</th>\n                            <th>Phone Number Alter Two</th>\n                            <th>Enquired Product Hsn Code</th>\n                            <th>Enquired Product</th>\n                            <th>Quantity</th>\n                            <th>Comments</th>\n                            <th>Follow Up Call </th>\n                            <th>Final Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            tabledata && tabledata.length \n                            ? tabledata.filter((user=>\n                                user.customer_name.toLowerCase().includes(query) || \n                                user.phone_number.toString().includes(query)\n                                )).map((data, i)=>(\n                                <tr key={i}>\n                                <td>{data.customer_reference_no} </td>\n                                <td>\n                                    {\n                                        data.enquiry_date != null ?\n                                        moment(data.enquiry_date).format('YYYY-MM-DD'):\n                                        data.enquiry_date\n                                    }\n                                </td>\n                                <td>{data.customer_name}</td>\n                                <td>{data.customer_address} </td>\n                                <td>{data.phone_number} </td>\n                                <td>{data.phone_number_alter_one} </td>\n                                <td>{data.phone_number_alter_two} </td>\n                                <td>{data.product_hsn_code} </td>\n                                <td>{data.product} </td>\n                                <td>{data.quantity} </td>\n                                <td>{data.comments} </td>\n                                <td>\n                                    {\n                                        data.follow_up_call != null ? \n                                        moment(data.follow_up_call).format('YYYY-MM-DD'):\n                                        data.follow_up_call\n                                    } \n                                </td>\n                                <td>{data.final_status} </td>\n                                <td>\n                                <CustomizedEditIcon \n                                    onClick={()=>{\n                                        rowdataevent(data);\n                                        setmodalview(\"customerfollowupform\");\n                                        openevent(true);\n                                    }}\n                                />\n                                </td>\n                            </tr>\n                            ))\n                            : \n                                <tr>\n                                    <td colSpan={12}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DisplayCustomerTable;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable.js",["468","469","470","471","472","473","474","475","476","477"],[],"import React, { useState, useEffect } from 'react';\nimport CustomizedEditIcon from '../../atoms/CustomizedEditIcon/CustomizedEditIcon';\nimport OpenModal from '../OpenModal/OpenModal';\nimport CustomizedSearchBar from '../../atoms/CustomizedSearchBar/CustomizedSearchBar';\nimport CustomizedBtn from '../../atoms/CustomizedBtn/CustomizedBtn';\nimport axios from 'axios';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\nimport '../../../style/style.css';\n\nconst DisplayProductDetailsTable = ({\n    currentstatus,\n}) => {\n    const [productsdetailsdata, setProductsdetailsdata] = useState({});\n    const [filterflag, setfilterflag] = useState(false);\n    const [editRow, setEditRow] = useState(null);\n    const [rowdata, setrowdata] = useState({});\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const [query, setQuery] = useState('');\n    const [productdeletehsncode, setproductdeletehsncode] = useState();\n    const openevent = (e) => {\n        setOpen(e)\n    }\n    const [editFormData, setEditFormData] = useState({\n        product_hsn_code: \"\",\n        product_name: \"\",\n        product_description: \"\",\n        unit_of_measure: \"\",\n        rate_per_unit: \"\",\n        gst_rate: \"\",\n        product_status: \"\",\n        stock: \"\"\n    })\n    useEffect(() => {\n        if (filterflag && currentstatus) {\n            productstatusfilter();\n        }\n        else {\n            displayProductDetailsData();\n        }\n    }, [currentstatus])\n    const modalviewchange = () => {\n        setChangedmodalview(\"addproductform\");\n    }\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    const displayProductDetailsData = () => {\n        axios.get(`http://3.84.110.201:3001/product/displayProductDetailsData`)\n            .then((res) => {\n                setProductsdetailsdata(res.data);\n                setfilterflag(true);\n            })\n    }\n    useEffect(() => {\n        if (searchvalue === \"\") {\n            displayProductDetailsData();\n        }\n    }, [searchvalue])\n    const productstatusfilter = () => {\n        axios.post(`http://3.84.110.201:3001/product/productstatusfilter`, {\n            params: {\n                status: currentstatus\n            }\n        })\n            .then((res) => {\n                setProductsdetailsdata(res.data);\n            })\n    }\n    const editevent = (event, data) => {\n        setEditRow(data.product_hsn_code);\n        const formValues = {\n            product_hsn_code: data.product_hsn_code,\n            product_name: data.product_name,\n            product_description: data.product_description,\n            unit_of_measure: data.unit_of_measure,\n            rate_per_unit: data.rate_per_unit,\n            gst_rate: data.gst_rate,\n            product_status: data.product_status,\n            stock: data.stock\n        }\n        setEditFormData(formValues);\n    }\n    const  deletesuperevent = (id) => {\n        setproductdeletehsncode(id);\n        // deleteevent();\n    }\n    const deleteevent = (e) => {\n        if(e == \"yes\"){\n            axios.delete(`http://3.84.110.201:3001/product/deletefromproductdetailstable`,\n            {\n                data: {\n                    id: productdeletehsncode\n                }\n            })\n            .then((res) => {\n                displayProductDetailsData();\n            })\n        }\n    }\n    const searchHandle = (e) => {\n        setSearchvalue(e.target.value);\n    }\n    const searchclicked = () => {\n        axios.post(`http://3.84.110.201:3001/product/getProductDetailsData`, {\n            params: {\n                product_name: searchvalue,\n                product_hsn: searchvalue\n            }\n        })\n            .then((res) => {\n                setProductsdetailsdata(res.data);\n            })\n    }\n    const handleKeypress = (e) => {\n        //it triggers by pressing the enter key\n      if (e.key === 'Enter') {\n        searchclicked();\n        e.preventDefault();\n      }\n    };\n    return (\n        <div>\n            <OpenModal\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayProductDetailsData={displayProductDetailsData}\n                rowdata={rowdata}\n            />\n            <div className=\"searchbarstyle\">\n              <input\n                type=\"text\"\n                placeholder=\"Product Name/Product HSN\"\n                onChange={(e)=>setQuery(e.target.value)}\n              />\n            </div>\n            {/* <CustomizedSearchBar\n                labelname=\"product name / product hsn\"\n                Btnname=\"search\"\n                onHandleChangeEvent={searchHandle}\n                goEventClicked={searchclicked}\n                onKeyPress={handleKeypress}\n            /> */}\n            <div className='adddealersbtnstyle'>\n                <CustomizedBtn\n                    BtnName=\"Add Product\"\n                    onClick={() => {\n                        setmodalview(\"addproductform\");\n                        openevent(true);\n                    }}\n                />\n            </div>\n            <div className='table-responsive'>\n                <form>\n                    <table className='table table-striped table-bordered tablebackground'>\n                        <thead className='theadalter'>\n                            <tr>\n                                <th>Product HSN code</th>\n                                <th>Product Name</th>\n                                <th>Owner Company</th>\n                                <th>Owner Address</th>\n                                <th>Owner Contact One</th>\n                                <th>Owner Contact Two</th>\n                                <th>Product Description</th>\n                                <th>Unit of Measure</th>\n                                <th>Rate per unit (₹)</th>\n                                <th>GST Rate (%)</th>\n                                <th>Product Status</th>\n                                <th>Product Discount (%)</th>\n                                <th>Stock</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                productsdetailsdata && productsdetailsdata.length\n                                    ? productsdetailsdata.filter((user=>\n                                        user.product_name.toLowerCase().includes(query) || \n                                        user.product_hsn_code.toString().includes(query)\n                                        )).map((data) => (\n                                        <tr>\n                                            <td>{data.product_hsn_code}</td>\n                                            <td>{data.product_name}</td>\n                                            <td>{data.owner_company}</td>\n                                            <td>{data.owner_address}</td>\n                                            <td>{data.owner_contact_one}</td>\n                                            <td>{data.owner_contact_two}</td>\n                                            <td>{data.product_description}</td>\n                                            <td>{data.unit_of_measure}</td>\n                                            <td>{data.rate_per_unit}</td>\n                                            <td>{data.gst_rate}</td>\n                                            <td>{data.product_status}</td>\n                                            <td>{data.discount}</td>\n                                            <td>{data.stock}</td>\n                                            <td>\n                                                <div className='editdeletecontainer'>\n                                                    <CustomizedEditIcon\n                                                        onClick={() => {\n                                                            rowdataevent(data);\n                                                            setmodalview(\"productdetailsform\");\n                                                            openevent(true);\n                                                        }}\n                                                    />\n                                                    <div\n                                                        className=\"deleteiconcontainer\"\n                                                        data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n                                                        <DeleteIcon \n                                                            id=\"deleteicon\"\n                                                            onClick={()=>(deletesuperevent(data.product_hsn_code))}\n                                                        />\n                                                    </div>\n                                                    <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                                        <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\n                                                            <div className=\"modal-content\">\n                                                                <div className=\"modal-body\">\n                                                                    <p>Are you sure you want to delete ?</p>\n                                                                </div>\n                                                                <div className=\"modal-footer\">\n                                                                    <div className='btnstyle'>\n                                                                        <Button\n                                                                            type=\"button\"\n                                                                            className=\"btn btn-primary\"\n                                                                            data-bs-dismiss=\"modal\"\n                                                                            onClick={() => (deleteevent(\"yes\"))}  \n                                                                            >\n                                                                            Confirm\n                                                                        </Button>\n                                                                    </div>\n                                                                    <div className='btnstyle'>\n                                                                        <Button\n                                                                            type=\"button\"\n                                                                            className=\"btn btn-secondary\"\n                                                                            data-bs-dismiss=\"modal\"\n                                                                            onClick={() => (deleteevent(\"no\"))}  \n                                                                            >\n                                                                            Cancel\n                                                                        </Button>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    ))\n                                    :\n                                    <tr>\n                                        <td colSpan={9}>No Record!</td>\n                                    </tr>\n                            }\n\n                        </tbody>\n                    </table>\n                </form>\n            </div>\n        </div>\n    );\n}\nexport default DisplayProductDetailsTable;\n","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/Download/DownloadCustomer.js",["478","479","480","481","482","483","484","485","486","487","488","489","490","491"],[],"import React, { useState } from 'react';\nimport CustomizedText from '../../atoms/CustomizedText/CustomizedText';\nimport CustomizedDownload from '../../atoms/CustomizedDownload/CustomizedDownload';\nimport CustomizedDatepicker from '../../atoms/CustomizedDatepicker/CustomizedDatepicker';\nimport SearchIcon from '@mui/icons-material/Search';\nimport moment from 'moment';\nimport axios from 'axios';\nconst DownloadCustomer = ({setTableDataEvent}) => {\n  const [fromselecteddate, fromsetselecteddate] = useState('');\n  const [toselecteddate, tosetselecteddate] = useState('');\n  \n  const fromselecteddateevent = (e) => {\n    fromsetselecteddate(e);\n  }\n  const toselecteddateevent = (e) => {\n    tosetselecteddate(e);\n  }\n  const searchbuttonclicked = () => {\n    axios.post('http://3.84.110.201:3001/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromselecteddate,\n        todate:toselecteddate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const weeklysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n\n    var firstday = new Date(curr.setDate(first));\n    var lastday = new Date(curr.setDate(last));\n\n    firstday = firstday.toString();\n    firstday = firstday.split(\" \"); \n    var fromdate = firstday[3]+\"-\"+months[firstday[1]]+\"-\"+firstday[2];\n    \n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const monthlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n\n    axios.post('http://3.84.110.201:3001/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const yearlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+\"01\"+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const todaysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date;\n    curr = curr.toString();\n    curr = curr.split(\" \"); \n    curr = curr[3]+\"-\"+months[curr[1]]+\"-\"+curr[2];\n    axios.post('http://3.84.110.201:3001/customer/todaydatefetchcustomerdata',{\n      params:{\n        currentdate:curr\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n    return(\n        <div className='fromtodownloadlinkcontainer'>\n        <div className='fromtodownloadcontainer'>\n          <div className='fromcontainer'>\n            <CustomizedText textname=\"from :- \" />\n            <CustomizedDatepicker selecteddateevent={fromselecteddateevent} />\n          </div>\n          <div className='tocontainer'>\n            <CustomizedText textname=\"to :-\" />\n            <CustomizedDatepicker selecteddateevent={toselecteddateevent} />\n          </div>\n          <SearchIcon className='searchicon' onClick={searchbuttonclicked} />\n        </div>\n        <div>\n          <span className='atagfirst'>\n            <a href='#' onClick={weeklysearchclicked} >Weekly</a> \n          </span>\n          <span className='atagsecond'>\n            <a href='#' onClick={monthlysearchclicked} >Monthly</a>\n          </span>\n          <span className='atagthird'>\n            <a href='#' onClick={yearlysearchclicked} >Yearly</a>\n          </span>\n          <span className='atagfourth'>\n            <a href='#' onClick={todaysearchclicked} >Today's Follow Up Call</a>\n          </span>\n        </div>\n        </div>\n\n    );\n}\nexport default DownloadCustomer;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable.js",["492","493","494","495","496","497","498","499"],[],"import React, { useState, useEffect } from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from '../OpenModal/OpenModal';\nimport CustomizedEditIcon from \"../../atoms/CustomizedEditIcon/CustomizedEditIcon\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\nimport '../../../style/style.css';\n\nconst DisplayDealersDetailsTable = ({\n    currentstatus,\n    api\n}) => {\n    const [dealersdetailsdata, setDealersdetailsdata] = useState({});\n    const [filterflag, setfilterflag] = useState(false);\n    const [rowdata, setrowdata] = useState({});\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const [query, setQuery] = useState('');\n    const [deletedealersgst, setdeletedealersgst] = useState();\n    const openevent = (e) => {\n        setOpen(e)\n    }\n    useEffect(() => {\n        if (filterflag && currentstatus) {\n            gstinstatusfilterdealersdata();\n        } else {\n            displayDealersDetailsData();\n        }\n    }, [currentstatus])\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    const displayDealersDetailsData = () => {\n        api.get('dealers/displayDealersDetailsData')\n            .then((res) => {\n                setDealersdetailsdata(res.data);\n                setfilterflag(true);\n            })\n    }\n    useEffect(() => {\n        if (searchvalue === \"\") {\n            displayDealersDetailsData();\n        }\n    }, [searchvalue])\n    const gstinstatusfilterdealersdata = () => {\n        api.post('dealers/gstinstatusfilterdealersdata', {\n            params: {\n                status: currentstatus\n            }\n        })\n            .then((res) => {\n                setDealersdetailsdata(res.data);\n            })\n    }\n    const searchHandle = (e) => {\n        setSearchvalue(e.target.value);\n    }\n    const modalviewchange = () => {\n        setChangedmodalview(\"adddealersform\");\n    }\n    const searchclicked = () => {\n        api.post('dealers/gstinstatusfilterdealersdata', {\n            params: {\n                proprietor_name: searchvalue,\n                proprietor_phone_number: searchvalue\n            }\n        })\n            .then((res) => {\n                setDealersdetailsdata(res.data);\n            })\n    }\n    const handleKeypress = (e) => {\n        //it triggers by pressing the enter key\n      if (e.key === 'Enter') {\n        searchclicked();\n        e.preventDefault();\n      }\n    };\n    const  deletesuperevent = (id) => {\n        setdeletedealersgst(id);\n    }\n    const deleteevent = (e) => {\n        if(e == \"yes\"){\n            api.delete(`http://3.84.110.201:3001/dealers/deletefromdealersdetailstable`,\n            {\n                data: {\n                    id: deletedealersgst\n                }\n            })\n            .then((res) => {\n                displayDealersDetailsData();\n            })\n        }\n        \n    }\n    return (\n        <div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayDealersDetailsData={displayDealersDetailsData}\n                rowdata={rowdata}\n            />\n            <div className=\"searchbarstyle\">\n              <input\n                type=\"text\"\n                placeholder=\"Enterprise Name or Phone Number\"\n                onChange={(e)=>setQuery(e.target.value)}\n              />\n            </div>\n            {/* <CustomizedSearchBar\n                labelname=\"proprietor name /proprietor phone number\"\n                Btnname=\"search\"\n                onHandleChangeEvent={searchHandle}\n                goEventClicked={searchclicked}\n                onKeyPress={handleKeypress}\n            /> */}\n            <div className=\"adddealersbtnstyle\">\n                <CustomizedBtn\n                    BtnName=\"Add Dealers\"\n                    onClick={() => {\n                        setmodalview(\"adddealersform\");\n                        openevent(true);\n                    }}\n                />\n            </div>\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>GSTIN Number</th>\n                            <th>Enterprise Name</th>\n                            <th>Enterprise Address</th>\n                            <th>Proprietor Name</th>\n                            <th>Proprietor Phone Number</th>\n                            <th>GSTIN Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            dealersdetailsdata && dealersdetailsdata.length\n                                ? dealersdetailsdata.filter((user=>\n                                    user.enterprise_name.toLowerCase().includes(query) || \n                                    user.proprietor_phone_number.toString().includes(query)\n                                    )).map((data, i) => (\n                                    <tr key={i}>\n                                        <td>{data.gstin_number}</td>\n                                        <td>{data.enterprise_name}</td>\n                                        <td>{data.enterprise_address}</td>\n                                        <td>{data.proprietor_name}</td>\n                                        <td>{data.proprietor_phone_number}</td>\n                                        <td>{data.gstin_status}</td>\n                                        <td>\n                                            <div className=\"editdeletecontainer\">\n                                                <CustomizedEditIcon\n                                                    onClick={() => {\n                                                        rowdataevent(data);\n                                                        setmodalview(\"editdealersreport\");\n                                                        openevent(true);\n                                                    }}\n                                                />\n                                                <div\n                                                    className=\"deleteiconcontainer\"\n                                                    data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\n                                                >\n                                                    <DeleteIcon \n                                                        id=\"deleteicon\" \n                                                        onClick={()=>(deletesuperevent(data.gstin_number))}\n                                                    />\n                                                </div>\n                                                <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                                    <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\n                                                        <div className=\"modal-content\">\n                                                            <div className=\"modal-body\">\n                                                                <p>Are you sure you want to delete ?</p>\n                                                            </div>\n                                                            <div className=\"modal-footer\">\n                                                                <div className='btnstyle'>\n                                                                    <Button\n                                                                        type=\"button\"\n                                                                        className=\"btn btn-primary\"\n                                                                        data-bs-dismiss=\"modal\"\n                                                                        onClick={() => (deleteevent(\"yes\"))}  \n                                                                        >\n                                                                        Confirm\n                                                                    </Button>\n                                                                </div>\n                                                                <div className='btnstyle'>\n                                                                    <Button\n                                                                        type=\"button\"\n                                                                        className=\"btn btn-secondary\"\n                                                                        data-bs-dismiss=\"modal\"\n                                                                        onClick={() => (deleteevent(\"no\"))}\n                                                                        >\n                                                                        Cancel\n                                                                    </Button>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                ))\n                                :\n                                <tr>\n                                    <td colSpan={7}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DisplayDealersDetailsTable;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/Download/DownloadDelivery.js",["500","501","502","503","504","505","506","507","508","509"],[],"import React, { useState } from 'react';\nimport CustomizedText from '../../atoms/CustomizedText/CustomizedText';\nimport CustomizedDatepicker from '../../atoms/CustomizedDatepicker/CustomizedDatepicker';\nimport SearchIcon from '@mui/icons-material/Search';\nimport axios from 'axios';\nimport '../../../style/style.css';\n\nconst DownloadDelivery = ({setTableDataEvent}) => {\n  const [fromselecteddate, fromsetselecteddate] = useState('');\n  const [toselecteddate, tosetselecteddate] = useState('');\n  \n  const fromselecteddateevent = (e) => {\n    fromsetselecteddate(e);\n  }\n  const toselecteddateevent = (e) => {\n    tosetselecteddate(e);\n  }\n  const searchbuttonclicked = () => {\n    axios.post('http://3.84.110.201:3001/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromselecteddate,\n        todate:toselecteddate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const weeklysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n\n    var firstday = new Date(curr.setDate(first));\n    var lastday = new Date(curr.setDate(last));\n\n    firstday = firstday.toString();\n    firstday = firstday.split(\" \"); \n    var fromdate = firstday[3]+\"-\"+months[firstday[1]]+\"-\"+firstday[2];\n    \n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n\n  }\n  const monthlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const yearlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay();\n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+\"01\"+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n    return(\n        <div className='fromtodownloadlinkcontainer'>\n        <div className='fromtodownloadcontainer'>\n          <div className='fromcontainer'>\n            <CustomizedText textname=\"from :- \" />\n            <CustomizedDatepicker selecteddateevent={fromselecteddateevent} />\n          </div>\n          <div className='tocontainer'>\n            <CustomizedText textname=\"to :-\" />\n            <CustomizedDatepicker selecteddateevent={toselecteddateevent} />\n          </div>\n          <div >\n            <SearchIcon className='searchicon' onClick={searchbuttonclicked} />\n          </div>\n        </div>\n        <div>\n          <span className='atagfirst'>\n            <a href='#' onClick={weeklysearchclicked} >weekly</a> \n          </span>\n          <span className='atagsecond'>\n            <a href='#' onClick={monthlysearchclicked} >monthly</a>\n          </span>\n          <span className='atagthird'>\n            <a href='#' onClick={yearlysearchclicked} >yearly</a>\n          </span>\n        </div>\n        </div>\n\n    );\n}\nexport default DownloadDelivery;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/EmployeesEditableRow/EmployeesEditableRow.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/EmployeesReadOnlyRow/EmployeesReadOnlyRow.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedLogOutIcon/CustomizedLogOutIcon.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedSaveIcon/CustomizedSaveIcon.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedLogo/CustomizedLogo.js",["510"],[],"import React from 'react';\nimport logo from '../../../images/logo.png';\nimport '../../../style/style.css';\n\nconst CustomizedLogo = ({\n    onClick\n}) => {\n    return(\n        <div className='imagecontainer'>\n            <img src={logo} onClick={onClick} />\n        </div>\n    );\n}\nexport default CustomizedLogo;\n","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/AddCustomersForm/AddCustomersForm.js",["511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport CustomizedBtn from '../../atoms/CustomizedBtn/CustomizedBtn';\nimport { purchasesuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from \"../../atoms/CustomizedPrint/CustomizedPrint\";\nimport CustomizedComboboxForOwner from \"../../atoms/CustomizedCombobox/CustomizedCombobboxForOwner\";\nimport CustomizedComboboxForOwnerDefault from \"../../atoms/CustomizedCombobox/CustomizedComboboxForOwnerDefault\";\nimport CustomizedComboboxForState from \"../../atoms/CustomizedCombobox/CustomizedComboboxForState\";\nimport CustomizedComboboxForStateDefault from \"../../atoms/CustomizedCombobox/CustomizedComboboxForStateDefault\";\nimport '../../../style/style.css';\n\nconst AddCustomersForm = ({\n    currentCustomerReferenceNo,\n    handleClose,\n    displaycustomerfollowupevent,\n    purchasestatus,\n    bookingstatus,\n    api,\n    setpurchasemsgevent\n}) => {\n    const [rowdatadisplayed, setRowdatadisplayed] = useState();\n    const [paymentstatus, setpaymentstatus] = useState([\"paid\", \"pending\"]);\n    const [bookeddate, setbookeddate] = useState('');\n    const [productdata, setproductdata] = useState({});\n    const [finalpurchasestatus, setfinalpurchasestatus] = useState();\n    const [finalbookingstatus, setfinalbookingstatus] = useState();\n    const [selectedowner, setselectedowner] = useState();\n    useEffect(() => {\n        if (rowdatadisplayed) {\n            rowdatadisplayed.map((data) => {\n                setselectedowner(data.owner_company)\n            })\n        }\n    }, [rowdatadisplayed])\n    const [customerdata, setcustomerdata] = useState(\n        {\n            customerReferenceNo: \"\",\n            enquiryDate: \"\",\n            customerName: \"\",\n            customerAddress: \"\",\n            // statename: { value: 29, label: 'Karnataka' },\n            statename: \"\",\n            phoneno: \"\",\n            phonenoalterone: \"\",\n            phonenoaltertwo: \"\",\n            finalStatus: \"\",\n            phone_number: \"\",\n            phone_number_alter_one: \"\",\n            phone_number_alter_two: \"\",\n            product_hsn_code: \"\",\n            product: \"\",\n            quantity: \"\",\n            customer_name: \"\",\n            owner_company: \"SRI PARAMANANDA ENTERPRISES\"\n        }\n    );\n    const [comboboxdata, setComboboxdata] = useState([]);\n    const [owner, setowner] = useState([\n        {\n            \"ownerid\": 1,\n            \"ownername\": \"SDD ENTERPRISES\"\n        },\n        {\n            \"ownerid\": 2,\n            \"ownername\": \"SRI PARAMANANDA ENTERPRISES\"\n        }]);\n    const selecteventforstate = (e, index) => {\n\n        let updateRowDataByIndex = [...rowdatadisplayed];\n        rowdatadisplayed.find((item, i) => {\n            if (item.delivery_id === index) {\n                updateRowDataByIndex[i][\"state\"] = e.label;\n                updateRowDataByIndex[i][\"state_code\"] = e.value;\n                setRowdatadisplayed(() => [...updateRowDataByIndex]);\n            }\n        })\n\n        // setcustomerdata({ ...customerdata, \"statename\": e })\n    }\n    const [state, setstate] = useState([]);\n    useEffect(() => {\n        api.get('/stateandstatecodes/getstateandstatecodes', {})\n            .then((res) => {\n                setstate(res.data);\n            })\n    }, [])\n    const recalldisplayProductDetailsDataforcomboboxevent = (selectedowner) => {\n        api.post('product/displayProductDetailsDataforcombobox', {\n            params: {\n                selectedowner\n            }\n        })\n            .then((res) => {\n                setComboboxdata(res.data);\n            })\n    }\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n    useEffect(() => {\n        if (purchasestatus) {\n            setfinalpurchasestatus(purchasestatus[0].purchase_status);\n        }\n    }, [purchasestatus])\n    useEffect(() => {\n        if (bookingstatus) {\n            setfinalbookingstatus(bookingstatus[0].booking_status);\n        }\n    }, [bookingstatus])\n    const selectevent = (event, index) => {\n        let updateRowDataByIndex = [...rowdatadisplayed];\n        rowdatadisplayed.find((item, i) => {\n            if (item.delivery_id === index) {\n                updateRowDataByIndex[i][\"payment_status\"] = event.target.innerHTML;\n                setRowdatadisplayed(() => [...updateRowDataByIndex]);\n            }\n        })\n    }\n    const bookeddateevent = () => {\n        let newDate = new Date()\n        let date = newDate.getDate();\n        let month = newDate.getMonth() + 1;\n        let year = newDate.getFullYear();\n        let finaldate = year + \"-\" + month + \"-\" + date;\n        setbookeddate(finaldate);\n    }\n    const [updaterowdata, setUpdaterowdata] = useState();\n    useEffect(() => {\n        bookeddateevent();\n    }, [])\n    useEffect(() => {\n        fetchalldatafromcust();\n    }, [])\n    const fetchalldatafromcust = () => {\n        api.post('/delivery/getalldataofcustomer', {\n            params: {\n                currentCustomerReferenceNo\n            }\n        })\n            .then((res) => {\n                const data = res.data;\n                setRowdatadisplayed(data);\n                setUpdaterowdata(data[0]);\n            })\n    }\n    useEffect(() => {\n        if (updaterowdata && updaterowdata.product_hsn_code) {\n            api.post('/product/displayProductDetailsDatabasedonproducthsn', {\n                params: {\n                    product_hsn_code: updaterowdata.product_hsn_code\n                }\n            })\n                .then((res) => {\n                    const data = res.data;\n                    setproductdata(data);\n                })\n        }\n    }, [updaterowdata]);\n    const submiteventclicked = () => {\n        api.put('/customer/updatefinalstatuscustomertable', {\n            params: {\n                final_status: \"Booked\",\n                customer_reference_no: currentCustomerReferenceNo\n            }\n        })\n            .then((res) => {\n                // displaycustomerfollowupevent();\n                api.put('/delivery/updatebookingstatusofdeliverytable', {\n                    params: {\n                        customer_reference_no: currentCustomerReferenceNo\n                    }\n                })\n                    .then((res) => {\n                        // displaycustomerfollowupevent();\n                        api.put('/delivery/updateDeliveryData', {\n                            params: {\n                                rowdatadisplayed: rowdatadisplayed,\n                                customerdata: customerdata\n                            }\n                        })\n                            .then((res) => {\n                                api.put('/delivery/updaterateofdelivery', {\n                                    params: {\n                                        rowdatadisplayed: rowdatadisplayed\n                                    }\n                                })\n                                    .then((res) => {\n                                        api.post('/delivery/getstatecodefromdelivery', {\n                                            params: {\n                                                rowdatadisplayed: rowdatadisplayed\n                                            }\n                                        })\n                                            .then((res) => {\n                                                const data = res.data;\n                                                for (var i = 0; i < data.length; i++) {\n                                                    if (\n                                                        (data[i].owner_company == 'SRI PARAMANANDA ENTERPRISES' && data[i].state_code === 29) ||\n                                                        (data[i].owner_company == 'SDD ENTERPRISES' && data[i].state_code === 33)\n                                                    ) {\n                                                        api.put('/jointables/updatekarnatakagstrates', {\n                                                            params: {\n                                                                customer_reference_no: data[i].customer_reference_no,\n                                                                product_hsn_code: data[i].product_hsn_code\n                                                            }\n                                                        })\n                                                            .then((res) => {\n                                                                api.put('/jointables/updatefinalamountdelivery', {\n                                                                    params: {\n                                                                        rowdatadisplayed: rowdatadisplayed\n                                                                    }\n                                                                })\n                                                                    .then((res) => {\n                                                                        api.put('/delivery/updatebalanceamountdelivery', {\n                                                                            params: {\n                                                                                rowdatadisplayed: rowdatadisplayed\n                                                                            }\n                                                                        })\n                                                                            .then((res) => {\n                                                                                if (res) {\n                                                                                    setpurchasemsgevent(\"Booking Successfully\");\n                                                                                    // alert(res.msg);\n                                                                                    // const res = purchasesuccessmsg({});\n                                                                                    handleClose();\n                                                                                }\n                                                                            })\n                                                                    })\n                                                            })\n                                                    }\n                                                    else {\n                                                        api.put('/delivery/updateotherstatesgstrates', {\n                                                            params: {\n                                                                customer_reference_no: data[i].customer_reference_no,\n                                                                product_hsn_code: data[i].product_hsn_code\n                                                            }\n                                                        })\n                                                            .then((res) => {\n                                                                api.put('/jointables/updatefinalamountdelivery', {\n                                                                    params: {\n                                                                        rowdatadisplayed: rowdatadisplayed\n                                                                    }\n                                                                })\n                                                                    .then((res) => {\n                                                                        api.put('/delivery/updatebalanceamountdelivery', {\n                                                                            params: {\n                                                                                rowdatadisplayed: rowdatadisplayed\n                                                                            }\n                                                                        })\n                                                                            .then((res) => {\n                                                                                if (res) {\n                                                                                    setpurchasemsgevent(\"Order Placed Successfully\");\n                                                                                    // const res = purchasesuccessmsg({});\n                                                                                    // alert(res.msg);\n                                                                                    handleClose();\n                                                                                }\n                                                                            })\n                                                                    })\n                                                            })\n                                                    }\n                                                }\n                                            })\n                                    })\n                            })\n                    })\n            })\n\n\n    }\n    const changeevent = (event, index) => {\n        let updateRowDataByIndex = [...rowdatadisplayed];\n        rowdatadisplayed.find((item, i) => {\n            if (item.delivery_id === index) {\n                updateRowDataByIndex[i][event.target.name] = event.target.value;\n                setRowdatadisplayed(() => [...updateRowDataByIndex]);\n            }\n        })\n    }\n    const selecteventforowner = (e) => {\n        setselectedowner(e.label);\n        recalldisplayProductDetailsDataforcomboboxevent(e.label);\n        setcustomerdata({ ...customerdata, \"owner_company\": e.label })\n        // if (e.label == \"SDD ENTERPRISES\") {\n        //     setcustomerdata({ ...customerdata, \"owner_company\": e.label, \"statename\": { label: 'Tamil Nadu', value: 33 } })\n        // }\n        // else if (e.label == \"SRI PARAMANANDA ENTERPRISES\") {\n        //     setcustomerdata({ ...customerdata, \"owner_company\": e.label, \"statename\": { label: 'Karnataka', value: 29 } })\n        // }\n    }\n    return (\n        <div>\n            <div>\n                <CustomizedPrint\n                    onClick={handlePrint}\n                />\n            </div>\n            <div ref={componentRef}>\n                <div className=\"formheading\">\n                    <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n                    <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,\n                        Opp Anna\n                        Building,Hosur Main Road Bangalore-560099,\n                        <br></br>Mobile: 9035757145/9902880851/9141070705</p>\n                </div>\n                <div className=\"pageheading\">\n                    Purchase Order\n                </div>\n                {\n                    rowdatadisplayed && rowdatadisplayed.length &&\n                    rowdatadisplayed.map((data, i) => (\n                        <form className=\"formcontainer\">\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Owner Company:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                    <input\n                                            defaultValue={data.owner_company}\n                                            type=\"text\"\n                                            readOnly\n                                            disabled\n                                        />\n                                        {/* <CustomizedComboboxForOwnerDefault\n                                            comboboxdata={owner}\n                                            dvalue={data.owner_company}\n                                            // type=\"state\"\n                                            selectevent={selecteventforowner}\n                                        /> */}\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Customer Reference Number:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={currentCustomerReferenceNo}\n                                            type=\"text\"\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Booked date:\n                                    </div>\n                                    <div>\n                                        <SelectDate\n                                            type=\"booked_date\"\n                                            typeOne=\"booked_date\"\n                                            incomingdate={\n                                                data.booked_date != null\n                                                    ? data.booked_date = data.booked_date\n                                                    : data.booked_date = data.booked_date\n                                            }\n                                            disable=\"yes\"\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Requested delivery date:\n                                    </div>\n                                    <div>\n                                        <SelectDate\n                                            typeOne=\"requested_delivery_date\"\n                                            onHandleChangeEvent={(event) => changeevent(event, data.delivery_id)}\n                                            incomingdate={\n                                                data.requested_delivery_date != null\n                                                    ? data.requested_delivery_date = data.requested_delivery_date\n                                                    : data.requested_delivery_date = data.requested_delivery_date\n                                            }\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Customer Name:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={data.customer_name}\n                                            name=\"customer_name\"\n                                            type=\"text\"\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Customer Address:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={data.customer_address}\n                                            name=\"customer_address\"\n                                            type=\"text\"\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        State:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        {/* <CustomizedComboboxForStateDefault\n                                            dvaluestate={data.state}\n                                            dvaluestate_code={data.state_code}\n                                            // selectedowner={selectedowner}\n                                            comboboxdata={state}\n                                            // type=\"state\"\n                                            // selectevent={selecteventforstate}\n                                            selectevent={(event) => selecteventforstate(event, data.delivery_id)}\n                                        /> */}\n                                        <input\n                                            defaultValue={data.state}\n                                            type=\"text\"\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Phone number:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"phone_number\"\n                                            defaultValue={data.phone_number}\n                                            readOnly\n                                            disabled\n                                            // onChange={(event) => changeevent(event, data.delivery_id)}\n                                            // onWheel={(e) => e.target.blur()}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product hsn code:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            defaultValue={data.product_hsn_code}\n                                            onWheel={(e) => e.target.blur()}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.product}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Quantity:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"quantity\"\n                                            defaultValue={data.quantity}\n                                            readOnly\n                                            disabled\n                                            // onWheel={(e) => e.target.blur()}\n                                            // onChange={(event) => changeevent(event, data.delivery_id)}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product Rate:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.rate / data.quantity}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Discount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.discount}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Rate After Extended Discount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"extended_discount\"\n                                            onChange={(event) => changeevent(event, data.delivery_id)}\n                                            defaultValue={data.extended_discount}\n                                            onWheel={(e) => e.target.blur()}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        CGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.cgst}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        SGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.sgst}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        IGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.igst}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Rate:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.rate}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Final amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.final_amount}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Balance amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            defaultValue={data.balance_amount}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Payment status:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.payment_status}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Booking advance amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"booking_advance_amount\"\n                                            defaultValue={data.booking_advance_amount}\n                                            onChange={(event) => changeevent(event, data.delivery_id)}\n                                            onWheel={(e) => e.target.blur()}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"divider\"></div>\n                        </form>\n                    ))\n                }\n            </div>\n            {\n                finalpurchasestatus == 1\n                    ? <p className=\"verificationstyle\">Purchase completed!</p>\n                    : finalbookingstatus == 1\n                        ? <p className=\"verificationstyle\">Booking completed!</p>\n                        : <div className=\"submitcontainee\">\n                            <CustomizedBtn\n                                BtnName=\"Book\"\n                                onClick={submiteventclicked}\n                            />\n                        </div>\n            }\n        </div>\n    )\n}\nexport default AddCustomersForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/AddCustomersForm/AddCustomersFormNew.js",["543"],[],"import React, {useEffect, useState} from \"react\";\n\nconst AddCustomersFormNew = ({\n    api,\n    currentCustomerReferenceNo\n}) => {\n    const [rowdatadisplayed, setRowdatadisplayed] = useState();\n    useEffect(() => {\n        fetchalldatafromcust();\n    }, [])\n    const fetchalldatafromcust = () => {\n        api.post('/delivery/getalldataofcustomer', {\n            params: {\n                currentCustomerReferenceNo\n            }\n        })\n            .then((res) => {\n                const data = res.data;\n                setRowdatadisplayed(data);\n                // setUpdaterowdata(data[0]);\n            })\n    }\n    return(\n        <div>\n            {\n                    rowdatadisplayed && rowdatadisplayed.length &&\n                    rowdatadisplayed.map((data, i) => (\n                        <form className=\"formcontainer\">\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Owner Company:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        {/* <CustomizedComboboxForOwner\n                                            comboboxdata={owner}\n                                            dvalue = {data.owner_company}\n                                            selectevent={selecteventforowner}\n                                        /> */}\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Customer Reference Number:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={currentCustomerReferenceNo}\n                                            type=\"text\"\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Booked date:\n                                    </div>\n                                    <div>\n                                        {/* <SelectDate\n                                            type=\"booked_date\"\n                                            typeOne=\"booked_date\"\n                                            incomingdate={\n                                                data.booked_date != null\n                                                    ? data.booked_date = data.booked_date\n                                                    : data.booked_date = data.booked_date\n                                            }\n                                            disable=\"yes\"\n                                        /> */}\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Requested delivery date:\n                                    </div>\n                                    <div>\n                                        {/* <SelectDate\n                                            typeOne=\"requested_delivery_date\"\n                                            onHandleChangeEvent={(event) => changeevent(event, data.delivery_id)}\n                                            incomingdate={\n                                                data.requested_delivery_date != null\n                                                    ? data.requested_delivery_date = data.requested_delivery_date\n                                                    : data.requested_delivery_date = data.requested_delivery_date\n                                            }\n                                        /> */}\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Customer Name:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={data.customer_name}\n                                            name=\"customer_name\"\n                                            type=\"text\"\n                                            // onChange={(event) => changeevent(event, data.delivery_id)}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Customer Address:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={data.customer_address}\n                                            name=\"customer_address\"\n                                            type=\"text\"\n                                            // onChange={(event) => changeevent(event, data.delivery_id)}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        State:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        {/* <CustomizedComboboxForState\n                                            selectedowner={selectedowner}\n                                            comboboxdata={state}\n                                            // type=\"state\"\n                                            selectevent={selecteventforstate}\n                                        /> */}\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Phone number:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"phone_number\"\n                                            defaultValue={data.phone_number}\n                                            onWheel={(e) => e.target.blur()}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product hsn code:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            defaultValue={data.product_hsn_code}\n                                            onWheel={(e) => e.target.blur()}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.product}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Quantity:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"quantity\"\n                                            defaultValue={data.quantity}\n                                            onWheel={(e) => e.target.blur()}\n                                            // onChange={(event) => changeevent(event, data.delivery_id)}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product Rate:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.rate}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Discount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.discount}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Rate After Extended Discount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"extended_discount\"\n                                            // onChange={(event) => changeevent(event, data.delivery_id)}\n                                            defaultValue={data.extended_discount}\n                                            onWheel={(e) => e.target.blur()}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        CGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.cgst}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        SGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.sgst}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        IGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.igst}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Rate:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.rate}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Final amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.final_amount}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Balance amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            defaultValue={data.balance_amount}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Payment status:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.payment_status}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Booking advance amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"booking_advance_amount\"\n                                            defaultValue={data.booking_advance_amount}\n                                            // onChange={(event) => changeevent(event, data.delivery_id)}\n                                            onWheel={(e) => e.target.blur()}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"divider\"></div>\n                        </form>\n                    ))\n                }\n        </div>\n    );\n}\nexport default AddCustomersFormNew;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/AddFewCustomersForm/AddFewCustomersForm.js",["544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport { customeraddedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxForState from '../../atoms/CustomizedCombobox/CustomizedComboboxForState';\nimport CustomizedComboboxMultipleSelect from '../../atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect';\nimport CustomizedComboboxForOwner from \"../../atoms/CustomizedCombobox/CustomizedCombobboxForOwner\";\nimport '../../../style/style.css';\n\nconst AddFewCustomersForm = ({\n  handleClose,\n  api\n}) => {\n  const [customerdata, setcustomerdata] = useState(\n    {\n      customerReferenceNo: \"\",\n      enquiryDate: \"\",\n      customerName: \"\",\n      customerAddress: \"\",\n      // statename: { value: 29, label: 'Karnataka' },\n      statename: \"\",\n      phoneno: \"\",\n      phonenoalterone: \"\",\n      phonenoaltertwo: \"\",\n      finalStatus: \"\",\n      phone_number: \"\",\n      phone_number_alter_one: \"\",\n      phone_number_alter_two: \"\",\n      product_hsn_code: \"\",\n      product: \"\",\n      quantity: \"\",\n      customer_name: \"\",\n      owner_company:\"SRI PARAMANANDA ENTERPRISES\"\n    }\n  );\n\n  const [errors, seterrors] = useState({\n    commonError:\"Please Enter all Important Fields\",\n    // customerNameError:\"\",\n    // customerAddressError:\"\",\n    // phoneNumberError:\"\",\n    // enquiredProductError:\"\"\n  })\n  const [comboboxdata, setComboboxdata] = useState([]);\n  const [productname, setProductname] = useState(\"\");\n  const [producthsn, setProducthsn] = useState();\n  const [state, setstate] = useState([]);\n  const [owner, setowner] = useState([\n    {\"ownerid\":1,\n    \"ownername\":\"SDD ENTERPRISES\"},\n    {\"ownerid\":2,\n    \"ownername\":\"SRI PARAMANANDA ENTERPRISES\"}]);\n    const [selectedowner, setselectedowner] = useState(\"SRI PARAMANANDA ENTERPRISES\")\n  const [products, setproducts] = useState([]);\n  const [statecode, setstatecode] = useState(\"\");\n  const [producthsncodeonly, setproducthsncodeonly] = useState();\n  const [productnameonly, setproductnameonly] = useState();\n  const [productquantityonly, setproductquantityonly] = useState();\n  useEffect(() => {\n    api.get('/stateandstatecodes/getstateandstatecodes', {})\n      .then((res) => {\n        setstate(res.data);\n      })\n  }, [])\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let finalpreInvoiceNo = '';\n  const generatePreInvoiceNo = () => {\n    let s1 = 'p';\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalpreInvoiceNo = s1 + \"2022\" + random;\n  }\n  generatePreInvoiceNo();\n  let finalcurrentdate = \"\";\n  const currentDate = () => {\n    let date = new Date();\n    finalcurrentdate = moment(date).format('YYYY-MM-DD');\n  }\n  useEffect(() => {\n    api.post('product/displayProductDetailsDataforcombobox', {\n      params:{\n        selectedowner\n      }\n    })\n      .then((res) => {\n        setComboboxdata(res.data);\n      })\n  }, [])\n  currentDate();\n  useEffect(() => {\n    api.post('stateandstatecodes/fetchstatecode', {\n      params:{\n        statename: customerdata != undefined ? customerdata.statename : null\n      }\n\n      // params: {\n      //   statename: customerdata != undefined ? customerdata.statename.value : null\n      // }\n    })\n      .then((res) => {\n        setstatecode(res.data);\n      })\n  }, [customerdata])\n  const validate = () => {\n    let nameError = \"\";\n    let addressError = \"\";\n    let phoneError = \"\";\n    let productError = \"\";\n    let ce = \"\";\nif (!customerdata || !customerdata.customer_name || !customerdata.customer_address \n   ||!customerdata.phone_number ||  products.length == 0){\n    ce = \"Please Enter all Important Fields\";\n   }\n    // if (!customerdata.customer_name){\n    //   nameError = \"Please Enter Customer Name\";\n    // }\n    // if (!customerdata.customer_address){\n    //   addressError = \"Please Enter Customer Address\";\n    // }\n    // if (!customerdata.phone_number){\n    //   phoneError = \"Please Enter Primary Phone Number\";\n    // }\n    // if (products.length == 0){\n    //   productError = \"Please Choose Atleast One Product\";\n    // }\n    if( ce\n      // nameError || addressError || phoneError || productError \n      ){\n      seterrors({...errors, [\"commonError\"]:ce\n    });\n      return false;\n    }\n    return true;\n  }\n  const submiteventclicked = () => {\n    const isvalid = validate();\n    if(isvalid){\n        api.post('/customer/addCustomerFollowUpData',\n      {\n        params: {\n          customerReferenceNo: finalCustomerRefNo,\n          owner_company:customerdata.owner_company,\n          enquiryDate: finalcurrentdate,\n          customerName: customerdata.customer_name,\n          customerAddress: customerdata.customer_address,\n          statename: customerdata.statename,\n          phoneno: customerdata.phone_number,\n          phonenoalterone: customerdata.phone_number_alter_one,\n          phonenoaltertwo: customerdata.phone_number_alter_two,\n          finalStatus: 'Follow up in progress'\n        }\n      })\n    api.post('delivery/addDeliveryData', {\n      params: {\n        customerReferenceNo: finalCustomerRefNo,\n        customerAddress: customerdata.customer_address,\n        statename: customerdata.statename,\n        phone_number: customerdata.phone_number,\n        phone_number_alter_one: customerdata.phone_number_alter_one,\n        phone_number_alter_two: customerdata.phone_number_alter_two,\n        product_hsn_code: producthsncodeonly,\n        product: productnameonly,\n        quantity: productquantityonly,\n        customer_name: customerdata.customer_name,\n        owner_company: customerdata.owner_company\n      }\n    })\n      .then((res) => {\n        if(res){\n          const res = customeraddedsuccessmsg({})\n          alert(res.msg);\n          handleClose();\n        }\n      })\n    //   seterrors({...errors, [\"customerNameError\"]:\"\", \n    //   [\"customerAddressError\"]:\"\", \n    //   [\"phoneNumberError\"]:\"\"\n    // });\n   \n    }\n    else {\n      alert(errors.commonError);\n    }\n  }\n  const selectevent = (e) => {\n    setProductname(e.target.outerText);\n  }\n  const selecteventforstate = (e) => {\n    setcustomerdata({ ...customerdata, \"statename\": e })\n  }\n  const recalldisplayProductDetailsDataforcomboboxevent = (selectedowner) => {\n    api.post('product/displayProductDetailsDataforcombobox', {\n      params:{\n        selectedowner\n      }\n    })\n      .then((res) => {\n        setComboboxdata(res.data);\n      })\n  }\n\n  const selecteventforowner = (e) => {\n    setselectedowner(e.label);\n    // if(e.label == \"SRI PARAMANANDA ENTERPRISES\"){\n    //   setcustomerdata({ ...customerdata , \"statename\": {value: 29, label: 'Karnataka'}})\n    // }\n    // else if(e.label == \"SDD ENTERPRISES\"){\n    //   setcustomerdata({ ...customerdata , \"statename\": {value: 33, label: 'Tamil Nadu'}})\n    // }\n    recalldisplayProductDetailsDataforcomboboxevent(e.label);\n    setcustomerdata({ ...customerdata, \"owner_company\": e.label})\n    // if (e.label == \"SDD ENTERPRISES\"){\n    //   setcustomerdata({ ...customerdata, \"owner_company\": e.label,  \"statename\": {label: 'Tamil Nadu', value: 33 }})\n    // }\n    // else if (e.label == \"SRI PARAMANANDA ENTERPRISES\"){\n    //   setcustomerdata({ ...customerdata, \"owner_company\": e.label,  \"statename\": {label: 'Karnataka', value: 29}})\n    // }\n  }\n\n  const selectedproducts = (e) => {\n    let selectedproducts = e.map((data) => {\n      return { productname: data, quantity: 1 }\n    })\n    setproducts(selectedproducts);\n  }\n \n  useEffect(() => {\n    if (products != null) {\n      let s = \"\";\n      let tempproductname = [];\n      let tempproductquantity = [];\n      products.map((data) => {\n        tempproductname.push(data.productname);\n        tempproductquantity.push(data.quantity);\n        s += data.productname + \",\";\n      })\n      setproductnameonly(tempproductname);\n      setproductquantityonly(tempproductquantity);\n      api.post('product/fetchproducthsnfromproductdetails', {\n        params: {\n          product_name: s\n        }\n      })\n        .then((res) => {\n          setProducthsn(res.data);\n        })\n    }\n  }, [products])\n  useEffect(() => {\n    let temparray = [];\n    if (producthsn != null) {\n      producthsn.map((data) => {\n        temparray.push(data.product_hsn_code)\n      })\n    }\n    setproducthsncodeonly(temparray);\n  }, [producthsn])\n  const incrementclicked = (data) => {\n    var productstock;\n    api.post('product/getquantitybasedonproductname',{\n        params:data\n    })\n    .then((res)=>{\n        productstock = res.data\n        productstock.map((d)=>{\n            var stock = d.stock;\n            let selectedproductdetails = products.map((product) => {\n                if (product.productname == data.productname) {\n                    if (stock >product.quantity){\n                        product.quantity += 1;\n                    }\n                    else{\n                        alert(`only ${stock} stocks available`);\n                    }\n                }\n                return product;\n              });\n              setproducts(selectedproductdetails);\n        })\n    })\n\n  }\n  const decrementclicked = (data) => {\n    let selectedproductdetails = products.map((product) => {\n      if (product.productname == data.productname) {\n        if (product.quantity >= 2) {\n          product.quantity -= 1;\n        }\n      }\n      return product;\n    });\n    setproducts(selectedproductdetails);\n  }\n  const changeevent = (event) => {\n    setcustomerdata({ ...customerdata, [event.target.name]: event.target.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Add New Customer\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Select Owner:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxForOwner\n                comboboxdata={owner}\n                // type=\"state\"\n                selectevent={selecteventforowner}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Customer Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n              <p className=\"errormsgstyle\">{errors.customerNameError}</p>\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Customer Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_address\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n              <p className=\"errormsgstyle\">{errors.customerAddressError}</p>\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            {/* <sup className=\"asteriskstyle\">*</sup> */}\n            State:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxForState\n                selectedowner={selectedowner}\n                comboboxdata={state}\n                // type=\"state\"\n                selectevent={selecteventforstate}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Ph no:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number\"\n                type=\"number\"\n                onChange={changeevent}\n                onWheel={(e) => e.target.blur()}\n              />\n              <p className=\"errormsgstyle\">{errors.phoneNumberError}</p>\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Ph no (Alter - 1):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                type=\"number\"\n                onChange={changeevent}\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Ph no (Alter - 2):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                type=\"number\"\n                onChange={changeevent}\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Enquired Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxMultipleSelect\n                comboboxdata={comboboxdata}\n                selectedproducts={selectedproducts}\n              />\n              <p className=\"errormsgstyle\">{errors.enquiredProductError}</p>\n            </div>\n          </label>\n        </div>\n        <div>\n          <div className=\"selectedproductheading\">Selected products:-\n            <ul>\n              {products && products.length &&\n                products.map((data, i) => (\n                  <li key={i} className=\"productnamedesign\">\n                    <div>{data.productname}</div>\n                    <div className=\"incrementdecrement\">\n                      <CustomizedBtn BtnName=\"+\" onClick={() => { incrementclicked(data) }} />\n                      {data.quantity}\n                      <CustomizedBtn BtnName=\"-\" onClick={() => { decrementclicked(data) }} />\n                    </div>\n                  </li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n        </form>\n    </div>\n  )\n}\nexport default AddFewCustomersForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/InvoiceFormat/InvoiceFormat.js",["565","566"],[],"import React, { useEffect, useState } from \"react\";\nimport { ToWords } from 'to-words';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst InvoiceFormat = ({\n    invoiceFormData\n}) => {\n    const [constantinvoicedata, setconstantinvoicedata] = useState();\n    const [totalamount, settotalamount] = useState();\n    const [totalinwords, settotalinwords] = useState();\n    const toWords = new ToWords();\n    useEffect(() => {\n        if (invoiceFormData) {\n            const tempdata = [...new Set(invoiceFormData.map((e) => e.customer_reference_no))];\n            tempdata.map((temp) => {\n                let filterByTempData = invoiceFormData.filter(dataObject => dataObject.customer_reference_no === temp)\n                var fixedstrings = filterByTempData[0];\n                setconstantinvoicedata(fixedstrings);\n                let temptotal = 0;\n                invoiceFormData.map((data) => temptotal = temptotal + data.final_amount);\n                settotalamount(temptotal);\n                let words = toWords.convert(temptotal);\n                settotalinwords(words);\n            })\n        }\n    }, [invoiceFormData])\n    return (\n        <div className=\"invoiceformatcontainer\">\n            <p className=\"invoiceheading\">Invoice</p>\n            <div className=\"table-responsive\" id=\"tableprint\" >\n                {\n                    constantinvoicedata\n                        ?\n                        <div>\n                            <div className=\"invoicecontainer\">\n                                <div>\n                                    {/* <p> <span className=\"lightstyle\">Address:</span> Shop #05,Medhini Arcade, <br></br>\n                                        Kithaganahalli Gate, <br></br>Opp Anna Building,\n                                        Hosur Main Road<br></br> Bangalore-560099,\n                                        <br></br></p> */}\n                                    <p> <span className=\"lightstyle\">Address:</span><span className=\"addressstyle\">{constantinvoicedata.owner_address}</span></p>\n                                    <p> <span className=\"lightstyle\">GSTIN/UIN:</span>29AYSPB6397D1ZX <br></br>\n                                       <span className=\"lightstyle\">State: </span> {constantinvoicedata.state} <br></br>\n                                       <span className=\"lightstyle\">State Code: </span> {constantinvoicedata.state_code}</p>\n                                </div>\n                                <div>\n                                    <span className=\"invoicenamestyle\">{constantinvoicedata.owner_company}</span>\n                                    <p>\n                                        <span className=\"lightstyle\">Contact Us:</span>\n                                        <span>{constantinvoicedata.owner_contact_one}</span>/\n                                        <span>{constantinvoicedata.owner_contact_two}</span>\n                                    </p>\n                                </div>\n                            </div>\n                            <table className=\"tbl\">\n                                <tbody>\n                                    <tr>\n                                        <td rowSpan=\"3\">Buyer:</td>\n                                        <td rowSpan=\"3\">{constantinvoicedata.customer_address}\n                                        </td>\n                                        <td colspan=\"3\">Invoice No:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.invoice_no}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\">Date of supply:-</td>\n                                        <td colspan=\"7\">\n                                            {constantinvoicedata.delivery_date != null ?\n                                                moment(constantinvoicedata.delivery_date).format('YYYY-MM-DD') :\n                                                constantinvoicedata.delivery_date\n                                            }\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\">PO no:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.po_number}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>GSTIN/UIN:</td>\n                                        <td>{constantinvoicedata.gst}</td>\n                                        <td colspan=\"3\">Vehicle No:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.vehicle_number}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>State Code:</td>\n                                        <td>{constantinvoicedata.state_code}</td>\n                                        <td colspan=\"3\">Pan Number:</td>\n                                        <td colspan=\"7\">pan 567jkhasdfkj67rt8</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Place of supply : </td>\n                                        <td colspan=\"11\">{constantinvoicedata.place_of_supply}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Contact NO :</td>\n                                        <td colspan=\"2\">{constantinvoicedata.phone_number} </td>\n                                        <td colspan=\"4\">{constantinvoicedata.phone_number_alter_one} </td>\n                                        <td colspan=\"4\">{constantinvoicedata.phone_number_alter_two} </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Sl</td>\n                                        <td>Discription of Product</td>\n                                        <td>HSN CODE</td>\n                                        <td>Qty</td>\n                                        <td>Rate</td>\n                                        <td>Amount</td>\n                                        <td>CGST</td>\n                                        <td>SGST</td>\n                                        <td>IGST</td>\n                                        <td>Discount</td>\n                                    </tr>\n                                    {\n                                        invoiceFormData && invoiceFormData.length &&\n                                        invoiceFormData.map((d, index) => (\n                                            <tr>\n                                                <td >{index + 1}</td>\n                                                <td >{d.product}</td>\n                                                <td >{d.product_hsn_code}</td>\n                                                <td >{d.quantity}</td>\n                                                <td >{d.rate / d.quantity}</td>\n                                                <td >{d.rate}</td>\n                                                <td >{d.cgst}</td>\n                                                <td >{d.sgst}</td>\n                                                <td >{d.igst}</td>\n                                                <td >{d.discount}</td>\n                                            </tr>\n                                        ))\n                                    }\n                                    <tr>\n                                        <td colspan=\"3\">Total</td>\n                                        <td colspan=\"7\">{totalamount}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\" rowSpan=\"5\">\n                                            Terms &Conditions :\n                                            <ol>\n                                                <li>Payment only by DD/CHQ,In faver of Shree Paramananda Enterprises</li>\n                                                <li>In Case of Cash payment contact the above phone number Before Making Payment</li>\n                                                <li>Goods once sold Cannot return Back</li>\n                                            </ol>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"5\">Round off:</td>\n                                        <td colspan=\"4\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">TOTAL:</td>\n                                        <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">Final Payble Amount :- </td>\n                                        <td colSpan=\"3\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"1\">Amount in Words: </td>\n                                        <td colSpan=\"6\">Rupees {totalinwords} Only</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"3\">Received The goods in good condition </td>\n                                        <td colSpan=\"7\">certified that the particulars given above are true and correct For Shree Paramananda Enterprises</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"3\">Receivers Signature: </td>\n                                        <td colSpan=\"7\">Authorised Signatory:</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        : <></>\n                }\n            </div>\n        </div>\n    );\n}\nexport default InvoiceFormat;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/CustomerInvoiceForm/CustomerInvoiceForm.js",["567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { invoicedataverificationsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport '../../../style/style.css';\n\nconst CustomerInvoiceForm = ({\n    handleClose,\n    invoiceFormData,\n    api,\n    currentCustomerReferenceNoCustomerInvoice\n}) => {\n    const [listofinvoices, setlistofinvoices] = useState([]);\n    const [finalinvoicenumber, setfinalinvoicenumber] = useState('');\n    const [updaterowdata, setUpdaterowdata] = useState();\n    const [rowdatadisplayed, setRowdatadisplayed] = useState();\n    const [rowdatadisplayedalter, setRowdatadisplayedalter] = useState();\n    const [errors, seterrors] = useState({\n        placeofsupplyerror:\"\",\n        ponumbererror:\"\",\n        vehiclenoerror:\"\",\n        commonError:\"Please Enter All Important Fields\"\n      })\n    useEffect(() => {\n        api.get('delivery/fetchinvoicesfromdeliverytable')\n            .then((res) => {\n                setlistofinvoices(res.data);\n            })\n    }, [])\n    useEffect(() => {\n        fetchalldatafromcust();\n    }, [])\n    const fetchalldatafromcust = () => {\n        api.post('/delivery/getalldataofcustomer', {\n            params: {\n                currentCustomerReferenceNoCustomerInvoice\n            }\n        })\n            .then((res) => {\n                const data = res.data;\n                setRowdatadisplayed(data);\n            })\n    }\n    useEffect(() => {\n        var numbers = [];\n        var maximum = Math.max(...numbers);\n        var newmaximum = maximum + 1;\n        if (newmaximum.toString().length === 4) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + newmaximum);\n        }\n        else if (newmaximum.toString().length === 3) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + \"0\" + newmaximum);\n        }\n        else if (newmaximum.toString().length === 2) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + \"00\" + newmaximum);\n        }\n        else if (newmaximum.toString().length === 1) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + \"000\" + newmaximum);\n        }\n    }, [listofinvoices]);\n\n    // const validate = (index) => {\n    //     let poserror = \"\";\n    //     let pnerror = \"\";\n    //     let vnerror = \"\";\n    //     let ce = \"\";\n\n    //     if (rowdatadisplayed){\n    //         rowdatadisplayed.find((item, i) => {\n    //             if (item.delivery_id === index) {\n    //                 if(!rowdatadisplayed[i].place_of_supply || !rowdatadisplayed[i].po_number ||\n    //                     !rowdatadisplayed[i].vehicle_number\n    //                     ){\n    //                         ce = \"Please Enter All Important Fields\";\n    //                 }\n    //                 // if(!rowdatadisplayed[i].place_of_supply){\n    //                 //     poserror = \"Please enter Place Of Supply\";\n    //                 // }\n    //                 // if(!rowdatadisplayed[i].po_number){\n    //                 //     pnerror = \"Please Enter PO Number\";\n    //                 // }\n    //                 // if(!rowdatadisplayed[i].vehicle_number){\n    //                 //     vnerror = \"Please Enter Vehicle Number\";\n    //                 // }\n    //             }\n    //         })\n    //     }\n    //     if( ce\n    //         // poserror || pnerror || vnerror \n    //         ){\n    //       seterrors({...errors, [\"commonError\"]:ce\n    //     });\n    //       return false;\n    //     }\n    //     return true;\n    //   }\n    const submiteventclicked = (customer_reference_no, delivery_id) => {\n        // const isvalid = validate(delivery_id);\n        // if(isvalid){\n            let date = new Date();\n            var date1 = date.toISOString();\n            var date2 = date1.split(\"-\");\n            var month = Number(date2[1]);\n            var year = Number(date2[0]);\n            var yearstring = \"\";\n            if(month >= 4 && month <= 12){\n                var y1 = year;\n                var y2 =year+1; \n                yearstring = y1+\"-\"+y2;\n            }\n            if(month>=1 && month <= 3){\n                var y1 = year;\n                var y2 = year-1;\n                yearstring = y2+\"-\"+y1;\n            }\n            let finalInvoiceNo = '';\n            let s1 = \"IN\"+yearstring+\"/\";\n            let min = 0;\n            let max = 1000;\n            let random = Math.floor(Math.random() * (max - min + 1)) + min;\n            let notostring = random.toString();\n            let size = notostring.length;\n            if (size === 4) {\n                finalInvoiceNo = s1 + random;\n            }\n            else if (size === 3) {\n                finalInvoiceNo = s1 + \"0\" + random;\n            }\n            else if (size === 2) {\n                finalInvoiceNo = s1 + \"00\" + random;\n            }\n            else if (size === 1) {\n                finalInvoiceNo = s1 + \"000\" + random;\n            }\n            api.put('/delivery/updatepurchasestatusofdeliverytable', {\n                params: {\n                    customer_reference_no: customer_reference_no\n                }\n            })\n            .then((res)=>{\n                api.put('customer/updatefinalstatuscustomertablepurchased',{\n                    params:{\n                        customer_reference_no: customer_reference_no\n                    }\n                })\n                .then((res)=>{\n                    api.put('delivery/updateDeliveryDataafterverify', {\n                        params: {\n                            invoice_no: finalInvoiceNo,\n                            customer_reference_no: customer_reference_no,\n                            po_number: rowdatadisplayed[0].po_number,\n                            vehicle_no: rowdatadisplayed[0].vehicle_number,\n                            pan_number: rowdatadisplayed[0].pan_number,\n                            place_of_supply: rowdatadisplayed[0].place_of_supply\n                        }\n                    })\n                        .then((res) => {\n                            if (res) {\n                                const res = invoicedataverificationsuccessmsg({});\n                                alert(res.msg);\n                                handleClose();\n                            }\n                            api.put('product/updateProductsDetailsProductDataDecrement',{\n                                rowdatadisplayed\n                            })\n                        })\n                })\n            })\n\n            // seterrors({...errors, [\"placeofsupplyerror\"]:\"\", \n            // [\"ponumbererror\"]:\"\", \n            // [\"vehiclenoerror\"]:\"\"\n            // });\n        // }\n        // else{\n        //     alert(errors.commonError );\n        //   }\n    }\n    const changeevent = (event, index) => {\n        setRowdatadisplayedalter(rowdatadisplayed);\n        let updateRowDataByIndex = [...rowdatadisplayed];\n        rowdatadisplayed.find((item, i) => {\n            if (item.delivery_id === index) {\n                updateRowDataByIndex[i][event.target.name] = event.target.value;\n                setRowdatadisplayed(() => [...updateRowDataByIndex]);\n            }\n        })\n    }\n    return (\n        <div>\n            <div className=\"pageheading\">\n                verify invoice and submit\n            </div>\n            {\n                invoiceFormData && invoiceFormData.length &&\n                invoiceFormData.map((data, i) => (\n                    <form className=\"formcontainer\">\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Buyer:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.customer_name}\n                                        type=\"text\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Buyer Address:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.customer_address}\n                                        type=\"text\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    State code:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.state}\n                                        type=\"text\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                {/* <sup className=\"asteriskstyle\">*</sup> */}\n                                Place of supply:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.place_of_supply}\n                                        type=\"text\"\n                                        onChange={(event) => changeevent(event, data.delivery_id)}\n                                        index={i}\n                                        name=\"place_of_supply\"\n                                    />\n                                    <p className=\"errormsgstyle\">{errors.placeofsupplyerror}</p>\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Invoice No:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.invoice_no}\n                                        type=\"text\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Date of supply:\n                                </div>\n                                <div>\n                                    <SelectDate\n                                        disable=\"yes\"\n                                        type=\"delivery_date\"\n                                        typeOne=\"delivery_date\"\n                                        onHandleChangeEvent={(event) => changeevent(event, data.delivery_id)}\n                                        incomingdate={\n                                            data.delivery_date != null\n                                                ? data.delivery_date \n                                                : data.delivery_date\n                                        }\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                {/* <sup className=\"asteriskstyle\">*</sup> */}\n                                PO no:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        onChange={(event) => changeevent(event, data.delivery_id)}\n                                        index={i}\n                                        defaultValue={data.po_number}\n                                        type=\"text\"\n                                        name=\"po_number\"\n                                    />\n                                    <p className=\"errormsgstyle\">{errors.ponumbererror}</p>\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                {/* <sup className=\"asteriskstyle\">*</sup> */}\n                                Vehicle No:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        onChange={(event) => changeevent(event, data.delivery_id)}\n                                        index={i}\n                                        defaultValue={data.vehicle_number}\n                                        type=\"text\"\n                                        name=\"vehicle_number\"\n                                    />\n                                    <p className=\"errormsgstyle\">{errors.vehiclenoerror}</p>\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Contact Number - 1:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.phone_number}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Contact Number - 2:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.phone_number_alter_one}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Contact Number - 3:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.phone_number_alter_two}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Discription of Product:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.product}\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Product HSN Code:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.product_hsn_code}\n                                        type=\"text\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Quantity:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.quantity}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Rate:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.rate}\n                                        type=\"text\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Amount:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Total:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    CGST:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.cgst}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    SGST:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.sgst}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    IGST:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.igst}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Round off:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    TOTAL:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        {\n                            data.verification_status\n                                ? <p className=\"verificationstyle\">Purchase Completed!</p>\n                                :\n                                <div className=\"submitcontainee\">\n                                    <CustomizedBtn\n                                        BtnName=\"Verify and Purchase\"\n                                        onClick={() => {\n                                            submiteventclicked(data.customer_reference_no, data.delivery_id)\n                                        }}\n                                    />\n                                </div>\n                        }\n                    </form>\n                ))\n            }\n\n        </div>\n    )\n}\nexport default CustomerInvoiceForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DealersInvoiceForm/DealersInvoiceForm.js",["584","585","586","587","588","589","590","591","592","593","594","595"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport CustomizedComboboxMultipleSelect from '../../atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect';\nimport CustomizedComboboxForState from '../../atoms/CustomizedCombobox/CustomizedComboboxForState';\nimport { generateinvoicesuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxForOwner from \"../../atoms/CustomizedCombobox/CustomizedCombobboxForOwner\";\nimport '../../../style/style.css';\nconst DealersInvoiceForm = ({\n  dealersdata,\n  handleClose,\n  api\n}) => {\n  const [comboboxdata, setComboboxdata] = useState([]);\n  const [customerdata, setcustomerdata] = useState(\n    {\n      customerReferenceNo: \"\",\n      enquiryDate: \"\",\n      customerName: \"\",\n      customerAddress: \"\",\n      statename: { value: 29, label: 'Karnataka' },\n      phoneno: \"\",\n      phonenoalterone: \"\",\n      phonenoaltertwo: \"\",\n      finalStatus: \"\",\n      phone_number: \"\",\n      phone_number_alter_one: \"\",\n      phone_number_alter_two: \"\",\n      product_hsn_code: \"\",\n      product: \"\",\n      quantity: \"\",\n      customer_name: \"\",\n      owner_company:\"SRI PARAMANANDA ENTERPRISES\"\n    }\n  );\n  const [owner, setowner] = useState([\n    {\"ownerid\":1,\n    \"ownername\":\"SDD ENTERPRISES\"},\n    {\"ownerid\":2,\n    \"ownername\":\"SRI PARAMANANDA ENTERPRISES\"}]);\n    const [selectedowner, setselectedowner] = useState(\"SRI PARAMANANDA ENTERPRISES\")\n  const [products, setproducts] = useState({\n    productname: '',\n    quantity: \"\",\n    product_status: \"\"\n  });\n  const [state, setstate] = useState([]);\n  const [selectedstate, setselectedstate] = useState(\"Karnataka\");\n  const [changeddata, setchangeddata] = useState();\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  const [errors, seterrors] = useState({\n    commonError:\"Please Enter all Important Fields\"\n    // enquiredProductError:\"\",\n    // poNumberError:\"\",\n    // vehicleNumberError:\"\",\n    // placeOfSupplyError:\"\",\n  })\n  generateCustomerReferenceNo();\n  let finalInvoiceNo = '';\n  const generateInvoiceNo = () => {\n    let s1 = \"In22-2023/\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    let notostring = random.toString();\n    let size = notostring.length;\n    if (size === 4) {\n      finalInvoiceNo = s1 + random;\n    }\n    else if (size === 3) {\n      finalInvoiceNo = s1 + \"0\" + random;\n    }\n    else if (size === 2) {\n      finalInvoiceNo = s1 + \"00\" + random;\n    }\n    else if (size === 1) {\n      finalInvoiceNo = s1 + \"000\" + random;\n    }\n  }\n  generateInvoiceNo();\n  useEffect(() => {\n    api.get('stateandstatecodes/getstateandstatecodes')\n      .then((res) => {\n        setstate(res.data);\n      })\n  }, [])\n  const selecteventforowner = (e) => {\n    setselectedowner(e.label);\n    recalldisplayProductDetailsDataforcomboboxevent(e.label);\n    if (e.label == \"SDD ENTERPRISES\"){\n      setcustomerdata({ ...customerdata, \"owner_company\": e.label,  \"statename\": {label: 'Tamil Nadu', value: 33 }})\n    }\n    else if (e.label == \"SRI PARAMANANDA ENTERPRISES\"){\n      setcustomerdata({ ...customerdata, \"owner_company\": e.label,  \"statename\": {label: 'Karnataka', value: 29}})\n    }\n  }\n  const validate = () => {\n    let ce = \"\";\n\n    // if (products.productname.length == 0 ){\n    //   productError = \"Please Choose Atleast One Product\";\n    // }\n    if( products.length == undefined){\n      ce = \"Please Enter all Important Fields\";\n      // pnError = \"Please Po Number\";\n      // if (!changeddata.po_number){\n      //   pnError = \"Please Po Number\";\n      // }\n      // if (!changeddata.vehicle_number){\n        // vnError = \"Please Enter Vehicle Number\";\n      // }\n      // if (!changeddata.place_of_supply){\n        // posError = \"Please Enter Place Of Supply\";\n      // }\n    }\n   \n    if( ce \n      // productError || pnError || vnError || posError \n      ){\n      seterrors({...errors, [\"commonError\"]:ce\n      // [\"poNumberError\"]:pnError, \n      // [\"vehicleNumberError\"]:vnError,\n      // [\"placeOfSupplyError\"]:posError\n    });\n      return false;\n    }\n    return true;\n  }\n  const submiteventclicked = () => {\n    const isvalid = validate();\n    if(isvalid){\n      api.post('product/fetchallproductdetails', {\n        params: {\n          productsdata: products\n        }\n      })\n        .then((res) => {\n          var data = res.data;\n          let prod = products.map((d) => {\n            let temp = data.find(a => a.product_name == d.productname)\n            return { ...d, ...temp }\n          })\n          let selectedstatecode = \"\";\n          state.map((d) => {\n            if (d.statename === selectedstate) {\n              selectedstatecode = d.statecode;\n            }\n          })\n          // api.post('customer/insertdealerscustomertable', {\n          //   params: {\n          //     customer_reference_no: finalCustomerRefNo,\n          //     dealersdata: dealersdata,\n          //     state: customerdata.statename,\n          //     changed_data: changeddata\n          //   }\n          // })\n          //   .then((res) => {\n          //   })\n          api.post('dealers/insertdealersdataintodeliverytable', {\n            params: {\n              customer_reference_no: finalCustomerRefNo,\n              invoice_no: finalInvoiceNo,\n              dealersdata: dealersdata,\n              productsdata: prod,\n              state: customerdata.statename,\n              state_code: selectedstatecode,\n              changed_data: changeddata,\n              owner_company: customerdata.owner_company\n            }\n          })\n            .then((res) => {\n              if (res) {\n                const res = generateinvoicesuccessmsg({})\n                alert(res.msg);\n                handleClose();\n              }\n            })\n        })\n    //     seterrors({...errors, [\"enquiredProductError\"]:\"\", \n    //   [\"poNumberError\"]:\"\",\n    //   [\"vehicleNumberError\"]:\"\",\n    //   [\"placeOfSupplyError\"]:\"\"\n    // });\n      }\n      else {\n        alert(errors.commonError);\n      }\n  }\n  const incrementclicked = (data) => {\n    let selectedproductdetails = products.map((product) => {\n      if (product.productname == data.productname) {\n        product.quantity += 1;\n      }\n      return product;\n    });\n    setproducts(selectedproductdetails);\n  }\n  const decrementclicked = (data) => {\n    let selectedproductdetails = products.map((product) => {\n      if (product.productname == data.productname) {\n        product.quantity -= 1;\n      }\n      return product;\n    });\n    setproducts(selectedproductdetails);\n  }\n  const selectedproducts = (e) => {\n    let selectedproducts = e.map((data) => {\n      return { productname: data, quantity: 1 }\n    })\n    setproducts(selectedproducts);\n  }\n  useEffect(() => {\n    api.post('product/displayProductDetailsDataforcombobox',{\n      params:{\n        selectedowner\n      }\n    })\n      .then((res) => {\n        setComboboxdata(res.data);\n      })\n  }, [])\n  const recalldisplayProductDetailsDataforcomboboxevent = (selectedowner) => {\n    api.post('product/displayProductDetailsDataforcombobox', {\n      params:{\n        selectedowner\n      }\n    })\n      .then((res) => {\n        setComboboxdata(res.data);\n      })\n  }\n  const selecteventforstate = (e) => {\n    // setselectedstate(e.label);\n    setcustomerdata({ ...customerdata, \"statename\": e })\n  }\n  const changeevent = (e) => {\n    setchangeddata({ ...changeddata, [e.target.name]: e.target.value });\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Generate Invoice\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Select Owner:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxForOwner\n                comboboxdata={owner}\n                // type=\"state\"\n                selectevent={selecteventforowner}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              GSTIN Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.gstin_number}\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.enterprise_name}\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.enterprise_address}\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Proprietor Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.proprietor_phone_number}\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Enquired Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxMultipleSelect\n                comboboxdata={comboboxdata}\n                selectedproducts={selectedproducts}\n              />\n              <p className=\"errormsgstyle\">{errors.enquiredProductError}</p>\n            </div>\n          </label>\n        </div>\n        <div>\n          <p>Selected products:-\n            <ul>\n              {products && products.length &&\n                products.map((data) => (\n                  <li className=\"productnamedesign\">\n                    <div>{data.productname}</div>\n                    <div className=\"incrementdecrement\">\n                      <CustomizedBtn BtnName=\"+\" onClick={() => { incrementclicked(data) }} />\n                      {data.quantity}\n                      <CustomizedBtn BtnName=\"-\" onClick={() => { decrementclicked(data) }} />\n                    </div>\n                  </li>\n                ))\n              }\n            </ul>\n          </p>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            PO Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"po_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n              <p className=\"errormsgstyle\">{errors.poNumberError}</p>\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            Vehicle Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"vehicle_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n              <p className=\"errormsgstyle\">{errors.vehicleNumberError}</p>\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            Place of Supply:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"place_of_supply\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n              <p className=\"errormsgstyle\">{errors.placeOfSupplyError}</p>\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            {/* <sup className=\"asteriskstyle\">*</sup> */}\n            State:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxForState\n                selectedowner={selectedowner}\n                className=\"select\"\n                comboboxdata={state}\n                type=\"state\"\n                selectevent={selecteventforstate}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone number (Alter-1):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                type=\"number\"\n                onChange={changeevent}\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone number (Alter-2):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                type=\"number\"\n                onChange={changeevent}\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default DealersInvoiceForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DealersDetailsForm/DealersDetailsForm.js",["596","597","598","599","600","601","602","603","604"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { purchasesuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from '../../atoms/CustomizedPrint/CustomizedPrint';\n// import CustomizedComboboxForOwner from \"../../atoms/CustomizedCombobox/CustomizedCombobboxForOwner\";\nimport axios from 'axios';\nimport '../../../style/style.css';\nconst DealersDetailsForm = ({\n  rowdata,\n  handleClose,\n  fetchdealersdatatoverify,\n  verificationstatus,\n  currentInvoiceno,\n  fetchinvoicesfromdelivery\n}) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  // const [selectedowner, setselectedowner] = useState()\n  const [Rowdatadisplayed, setRowdatadisplayed] = useState();\n  const [gstno, setgstno] = useState();\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n  useEffect(() => {\n    fetchalldatafromcust();\n  }, [])\n  const fetchalldatafromcust = () => {\n    axios.post('http://3.84.110.201:3001/delivery/getalldataofcustomer', {\n        params: {\n          currentCustomerReferenceNo: currentInvoiceno\n        }\n      })\n        .then((res) => {\n          setRowdatadisplayed(res.data);\n        })\n  }\n  useEffect(() => {\n    if (fetchdealersdatatoverify) {\n      setUpdaterowdata(fetchdealersdatatoverify);\n    }\n  }, [fetchdealersdatatoverify])\n  const [finalverificationstatus, setfinalverificationstatus] = useState();\n  useEffect(() => {\n    if (verificationstatus) {\n      setfinalverificationstatus(verificationstatus[0].verification_status);\n    }\n  }, [verificationstatus])\n  const [constantinvoicedata, setconstantinvoicedata] = useState();\n  useEffect(() => {\n    if (fetchdealersdatatoverify) {\n      const tempdata = [...new Set(fetchdealersdatatoverify.map((e) => e.customer_reference_no))];\n      tempdata.map((temp) => {\n        let filterByTempData = fetchdealersdatatoverify.filter(dataObject => dataObject.customer_reference_no === temp)\n        var fixedstrings = filterByTempData[0];\n        setconstantinvoicedata(fixedstrings);\n      })\n    }\n  }, [fetchdealersdatatoverify])\n  const submiteventclicked = (gstno) => {\n    let custrefno = \"\";\n    let statecode;\n    let owner_company = \"\";\n    Rowdatadisplayed.map((data) => {\n      custrefno = data.customer_reference_no;\n      statecode = data.state_code;\n      owner_company= data.owner_company\n    })\n  //   axios.put('http://3.84.110.201:3001/customer/updatefinalstatuscustomertablepurchased',{\n  //     params:{\n  //         customer_reference_no: custrefno\n  //     }\n  // })\n    axios.post('http://3.84.110.201:3001/delivery/setverificationstatus', {\n      params: {\n        customer_reference_no: custrefno\n      }\n    })\n    .then((res)=>{\n      axios.put('http://3.84.110.201:3001/delivery/updatepurchasestatusofdeliverytable', {\n        params: {\n          customer_reference_no: custrefno\n        }\n      })\n      .then((res)=>{\n        axios.put('http://3.84.110.201:3001/delivery/updateDeliveryDatafromdealersform', {\n          params: {\n            rowdatadisplayed: Rowdatadisplayed\n          }\n        })\n        .then((res)=>{\n          axios.post('http://3.84.110.201:3001/jointables/calculaterateofdeliveryofdealers', {\n            params: {\n              rowdatadisplayed: Rowdatadisplayed\n            }\n          })\n          .then((res)=>{\n            if (\n              (owner_company == 'SRI PARAMANANDA ENTERPRISES' && statecode === 29) ||\n              (owner_company == 'SDD ENTERPRISES' && statecode === 33)\n              ) {\n              axios.put('http://3.84.110.201:3001/jointables/updatekarnatakagstratesfromdealers', {\n                params: {\n                  rowdatadisplayed: Rowdatadisplayed\n                }\n              })\n              .then((res)=>{\n                axios.put('product/updateProductsDetailsProductDataDecrement',{\n                  Rowdatadisplayed\n              })\n              .then((res)=>{\n                axios.put('http://3.84.110.201:3001/jointables/updatefinalamountdeliveryfromdealers', {\n                  params: {\n                    customer_reference_no: custrefno\n                  }\n                })\n                .then((res)=>{\n                  axios.put('http://3.84.110.201:3001/jointables/updatebalanceamountdeliveryfromdealers', {\n                    params: {\n                      rowdatadisplayed: Rowdatadisplayed\n                    }\n                  })\n                    .then((res) => {\n                      if (res) {\n                        const res = purchasesuccessmsg({});\n                        alert(res.msg);\n                        handleClose();\n                        fetchinvoicesfromdelivery(gstno);\n                      }\n                    })\n                })\n              })\n              })\n            }\n            else {\n              axios.put('http://3.84.110.201:3001/jointables/updateotherstatesgstratesfromdealers', {\n                params: {\n                  rowdatadisplayed: Rowdatadisplayed\n                }\n              })\n                .then((res) => {\n                  axios.put('product/updateProductsDetailsProductDataDecrement',{\n                    Rowdatadisplayed\n                })\n                .then((res)=>{\n                  axios.put('http://3.84.110.201:3001/jointables/updatefinalamountdeliveryfromdealers', {\n                    params: {\n                      customer_reference_no: custrefno\n                    }\n                  })\n                    .then((res) => {\n                      axios.put('http://3.84.110.201:3001/jointables/updatebalanceamountdeliveryfromdealers', {\n                        params: {\n                          rowdatadisplayed: Rowdatadisplayed\n                        }\n                      })\n                        .then((res) => {\n                          if (res) {\n                            const res = purchasesuccessmsg({});\n                            alert(res.msg);\n                            handleClose();\n                            fetchinvoicesfromdelivery(gstno);\n                          }\n                        })\n                    })\n                })\n                })\n            }\n          })\n        })\n      })\n    })\n      \n      \n   \n  }\n  \n  useEffect(()=>{\n    if (Rowdatadisplayed){\n      Rowdatadisplayed.map((data,i)=>(\n        setgstno(data.gst)\n      ))\n    }\n  },[Rowdatadisplayed])\n  const changeevent = (event, index) => {\n    let updateRowDataByIndex = [...Rowdatadisplayed];\n    Rowdatadisplayed.find((item, i) => {\n      if (item.delivery_id === index) {\n        updateRowDataByIndex[i][event.target.name] = event.target.value;\n        setRowdatadisplayed(() => [...updateRowDataByIndex]);\n      }\n    })\n  }\n  // const selecteventforowner = (e) => {\n  //   setselectedowner(e.label);\n  //   recalldisplayProductDetailsDataforcomboboxevent(e.label);\n  //   if (e.label == \"SDD ENTERPRISES\"){\n  //     setcustomerdata({ ...customerdata, \"owner_company\": e.label,  \"statename\": {label: 'Tamil Nadu', value: 33 }})\n  //   }\n  //   else if (e.label == \"SRI PARAMANANDA ENTERPRISES\"){\n  //     setcustomerdata({ ...customerdata, \"owner_company\": e.label,  \"statename\": {label: 'Karnataka', value: 29}})\n  //   }\n  // }\n  return (\n    <div>\n      <div><CustomizedPrint\n        onClick={handlePrint}\n      />\n      </div>\n      <div ref={componentRef}>\n        <div className=\"formheading\">\n          <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n          <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,\n            Opp Anna\n            Building,Hosur Main Road Bangalore-560099,\n            <br></br>Mobile: 9035757145/9902880851/9141070705</p>\n        </div>\n        <div className=\"pageheading\">\n          Purchase Order\n        </div>\n        <form className=\"formcontainer\">\n          {\n            Rowdatadisplayed && Rowdatadisplayed.length\n              ? Rowdatadisplayed.map((data, i) => (\n                <>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        owner company:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        {/* <CustomizedComboboxForOwner\n                          comboboxdata={owner}\n                          dvalue = {data.owner_company}\n                          selectevent={selecteventforowner}\n                        /> */}\n                        <input\n                          defaultValue={data.owner_company}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        customer name:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.customer_name}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Customer address:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.customer_address}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Invoice no:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.invoice_no}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        GST:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.gst}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        phone number:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.phone_number}\n                          type=\"number\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        phone number (alter one):\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.phone_number_alter_one}\n                          type=\"number\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        phone number (alter two):\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.phone_number_alter_two}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Product:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.product}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        quantity:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.quantity}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        rate:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.rate}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        discount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.discount}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Rate After Extended Discount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.extended_discount}\n                          type=\"number\"\n                          onChange={(event) => changeevent(event, data.delivery_id)}\n                          name=\"extended_discount\"\n                          onWheel={(e) => e.target.blur()}\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        cgst:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.cgst}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        sgst:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.sgst}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        igst:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.igst}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        final amount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.final_amount}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        balance amount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.balance_amount}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                      <label className=\"formdatalabelstyle\">\n                          <div className=\"formnamestyle\">\n                              Payment status:\n                          </div>\n                          <div className=\"formdatainputstyle\">\n                              <input\n                                  type=\"text\"\n                                  defaultValue={data.payment_status}\n                                  readOnly\n                                  disabled\n                              />\n                          </div> \n                      </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        advance amount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.booking_advance_amount}\n                          type=\"number\"\n                          onChange={(event) => changeevent(event, data.delivery_id)}\n                          name=\"booking_advance_amount\"\n                          onWheel={(e) => e.target.blur()}\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        po number:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.po_number}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        vehicle number:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.vehicle_number}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"divider\"></div>\n                </>\n              ))\n              : <p>No Record!</p>\n            }\n            {/* <CustomizedBtn\n            BtnName=\"submit\"\n            // onClick={submiteventclicked}\n            onClick={() => {\n              submiteventclicked(data.gst);\n          }}\n          /> */}\n        </form>\n      </div>\n      {\n        finalverificationstatus == 1\n          ? <p className=\"verificationstyle\">Verification and Purchase completed!</p>\n          : <div className=\"submitcontainee\">\n            <CustomizedBtn\n              BtnName=\"submit\"\n              // onClick={submiteventclicked}\n              onClick={()=>{\n                submiteventclicked(gstno);\n              }}\n            />\n          </div>\n      }\n    </div>\n  )\n}\nexport default DealersDetailsForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/ProductsDetailsForm/ProductsDetailsForm.js",["605","606","607","608"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport CustomizedComboboxForOwner from \"../../atoms/CustomizedCombobox/CustomizedCombobboxForOwner\";\nimport axios from 'axios';\nimport '../../../style/style.css';\n\nconst ProductsDetailsForm = ({ rowdata, handleClose }) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [productstatus, setproductstatus] = useState([\"Available\", \"Not Available\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const [owner, setowner] = useState([\n    {\"ownerid\":1,\n    \"ownername\":\"SDD ENTERPRISES\"},\n    {\"ownerid\":2,\n    \"ownername\":\"SRI PARAMANANDA ENTERPRISES\"}]);\n    const [selectedowner, setselectedowner] = useState(\"SRI PARAMANANDA ENTERPRISES\");\n    const selecteventforowner = (e) => {\n      setselectedowner(e.label);\n    }\n  const submiteventclicked = () => {\n    axios.put('http://3.84.110.201:3001/product/updateProductsDetails', {\n      params: {\n        data:updaterowdata,\n        selectedowner:selectedowner\n      }\n    })\n      .then((res) => {\n        if (res) {\n          const res = editedsuccessmsg({});\n          alert(res.msg);\n          handleClose();\n        }\n      })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [\"product_status\"]: event.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Product details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product HSN code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_hsn_code\"\n                defaultValue={rowdata.product_hsn_code}\n                onChange={changeevent}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.product_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Owner Company:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <CustomizedComboboxForOwner\n                comboboxdata={owner}\n                // type=\"state\"\n                selectevent={selecteventforowner}\n              />\n              {/* <input\n                name=\"owner_company\"\n                onChange={changeevent}\n                defaultValue={rowdata.owner_company}\n                type=\"text\"\n              /> */}\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            Owner Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"owner_address\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            Owner Contact One:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"owner_contact_one\"\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            Owner Contact Two:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"owner_contact_two\"\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Description:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_description\"\n                onChange={changeevent}\n                defaultValue={rowdata.product_description}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Unit of Measure:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"unit_of_measure\"\n                onChange={changeevent}\n                defaultValue={rowdata.unit_of_measure}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Rate per unit:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"rate_per_unit\"\n                onChange={changeevent}\n                defaultValue={rowdata.rate_per_unit}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              GST Rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gst_rate\"\n                onChange={changeevent}\n                defaultValue={rowdata.gst_rate}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll\n                  comboboxdata={productstatus}\n                  dvalue={rowdata.product_status}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"discount\"\n                onChange={changeevent}\n                defaultValue={rowdata.discount}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Stock:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"stock\"\n                onChange={changeevent}\n                defaultValue={rowdata.stock}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default ProductsDetailsForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/CustomerFollowUpForm/CustomerFollowUpForm.js",["609","610","611","612","613"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport axios from 'axios';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport '../../../style/style.css';\nimport moment from 'moment';\n\nconst CustomerFollowUpForm = ({\n  rowdata,\n  handleClose\n}) => {\n  const [updaterowdata, setUpdaterowdata] = useState({\n    \"follow_up_call\" :\"0000-00-00\"\n  });\n  const [finalstatus, setfinalstatus] = useState([\"Booked\", \"Cancelled\", \"Follow Up In Progress\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const submiteventclicked = () => {\n    axios.put('http://3.84.110.201:3001/customer/updateCustomerDetails',{\n      params:{\n        updaterowdata\n      }\n    })\n    .then((res)=>{\n      if(res){\n        axios.put('http://3.84.110.201:3001/customer/updateDeliveryDetails',{\n          params:{\n            updaterowdata\n          }\n        })\n        .then((res)=>{\n          if(res){\n            const res = editedsuccessmsg({});\n            alert(res.msg);\n            handleClose();\n          }\n        })\n      }\n    })\n  }\n  const selectevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, \"follow_up_call\": event })\n  }\n  const selectevent1 = (event) => {\n    setUpdaterowdata({ ...updaterowdata, \"final_status\":event.value })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Customer Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Reference No:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.customer_reference_no}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquiry Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <SelectDate\n                type=\"enquiry_date\"\n                typeOne=\"enquiry_date\"\n                incomingdate={\n                  rowdata.enquiry_date != null ?\n                  moment(rowdata.enquiry_date).format('YYYY-MM-DD'):\n                  rowdata.enquiry_date\n                }\n                disable=\"yes\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"customer_address\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_address}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number Alter One:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number_alter_one}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number Alter Two:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number_alter_two}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired product hsn code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_hsn_code}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Quantity:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.quantity}\n                type=\"number\"\n                readOnly\n                disabled\n                // onChange={changeevent}\n                // onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Comments:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"comments\"\n                onChange={changeevent}\n                defaultValue={rowdata.comments}\n                type=\"text\"\n              />\n            </div>\n            {/* <div className=\"formdatainputstyle\">\n              <input\n                name=\"comments\"\n                onChange={changeevent}\n                value={rowdata.comments}\n                type=\"text\"\n              />\n            </div> */}\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Follow up call:\n            </div>\n            <SelectDate\n                typeOne=\"follow_up_call\"\n                onHandleChangeEvent={(event) => changeevent(event)}\n                incomingdate={\n                    rowdata.follow_up_call != null\n                        ? rowdata.follow_up_call = rowdata.follow_up_call\n                        : rowdata.follow_up_call = rowdata.follow_up_call\n                }\n            />\n            {/* <SelectDate\n                onHandleChangeEvent={(event)=>selectevent(event)}\n                typeOne=\"follow_up_call\"\n                incomingdate={\n                  rowdata.follow_up_call != null\n                        ? moment(rowdata.follow_up_call).format('YYYY-MM-DD')\n                        : rowdata.follow_up_call = rowdata.follow_up_call\n                }\n            /> */}\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Final status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll\n                comboboxdata={finalstatus}\n                dvalue={rowdata.final_status}\n                selectevent={selectevent1}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default CustomerFollowUpForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/AddProductForm/AddProductForm.js",["614","615","616","617","618"],[],"import React, { useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport { addedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport axios from 'axios';\nimport CustomizedComboboxForOwner from \"../../atoms/CustomizedCombobox/CustomizedCombobboxForOwner\";\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport '../../../style/style.css';\nconst AddProductForm = ({ handleClose }) => {\n  const [customerdata, setcustomerdata] = useState();\n  const [productstatus, setproductstatus] = useState(['Available', 'Not Available']);\n  const [errors, seterrors] = useState({\n    commonError:\"please enter all important fields\"\n  })\n  const [owner, setowner] = useState([\n    {\"ownerid\":1,\n    \"ownername\":\"SDD ENTERPRISES\"},\n    {\"ownerid\":2,\n    \"ownername\":\"SRI PARAMANANDA ENTERPRISES\"}]);\n    const [selectedowner, setselectedowner] = useState(\"SRI PARAMANANDA ENTERPRISES\");\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let finalcurrentdate = \"\";\n  const currentDate = () => {\n    let date = new Date();\n    finalcurrentdate = moment(date).format('YYYY-MM-DD');\n  }\n  currentDate();\n  const validate = () => {\n    let ce = \"\";\n    if (!customerdata || !customerdata.product_name || !selectedowner || !customerdata.product_hsn_code ||\n      !customerdata.product_description || !customerdata.unit_of_measure || !customerdata.rate_per_unit ||\n      !customerdata.gst_rate || !customerdata.product_status || !customerdata.product_status || \n      !customerdata.owner_address || !customerdata.owner_contact_one || !customerdata.owner_contact_two ||\n      !customerdata.stock || !customerdata.discount \n      ){\n      ce = \"please enter all important fields\";\n    }\n    if(ce){\n      seterrors({...errors, [\"commonError\"]:ce});\n      return false;\n    }\n    return true;\n  }\n  const submiteventclicked = () => {\n    const isvalid = validate();\n    if(isvalid){\n      axios.post('http://3.84.110.201:3001/product/addProductData', {\n        params: {\n          data: customerdata,\n          selectedowner:selectedowner\n        }\n      })\n        .then((res) => {\n          if (res) {\n            const res = addedsuccessmsg({})\n            alert(res.msg);\n            handleClose();\n          }\n        })\n    }\n    else {\n      alert(errors.commonError );\n    }\n  }\n  const selecteventforowner = (e) => {\n    setselectedowner(e.label);\n  }\n  const changeevent = (event) => {\n    setcustomerdata({ ...customerdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setcustomerdata({ ...customerdata, \"product_status\": event.value })\n  }\n  // const handleKeypress = (e) => {\n  //       //it triggers by pressing the enter key\n  //     if (e.key === 'Enter') {\n  //       submiteventclicked();\n  //       e.preventDefault();\n  //     }\n  //   };\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Add Product Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Product Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Owner Company:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <CustomizedComboboxForOwner\n                comboboxdata={owner}\n                // type=\"state\"\n                selectevent={selecteventforowner}\n              />\n              {/* <input\n                name=\"owner_company\"\n                type=\"text\"\n                onChange={changeevent}\n              /> */}\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Owner Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"owner_address\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Owner Contact One:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"owner_contact_one\"\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Owner Contact Two:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"owner_contact_two\"\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Product hsn code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_hsn_code\"\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Product description:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_description\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Unit of measure:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"unit_of_measure\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>rate per unit:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"rate_per_unit\"\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>gst rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gst_rate\"\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Product status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll \n                  comboboxdata={productstatus}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>stock:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"stock\"\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"discount\"\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n            // onKeyPress={handleKeypress}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default AddProductForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/AddDealersForm/AddDealersForm.js",["619","620","621","622","623","624"],[],"import React, { useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport { addedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxForAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxForAll\";\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport '../../../style/style.css';\nconst AddDealersForm = ({ handleClose }) => {\n  const [customerdata, setcustomerdata] = useState();\n  const [gststatus, setgststatus] = useState(['Active', 'In Active']);\n  const [errors, seterrors] = useState({\n    commonError:\"Please Enter All Important Fields\"\n  })\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let updatedate = \"\";\n  let finalcurrentdate = \"\";\n  const currentDate = () => {\n    let date = new Date();\n    finalcurrentdate = moment(date).format('YYYY-MM-DD');\n  }\n  currentDate();\n  const validate = () => {\n    let ce = \"\";\n    if (!customerdata || !customerdata.enterprise_address || !customerdata.enterprise_name ||\n      !customerdata.gstin_number || !customerdata.gstin_status || !customerdata.proprietor_name ||\n      !customerdata.proprietor_phone_number ){\n      ce = \"please enter all important fields\";\n    }\n    if(ce){\n      seterrors({...errors, [\"commonError\"]:ce});\n      return false;\n    }\n    return true;\n  }\n  const submiteventclicked = () => {\n    const isvalid = validate();\n    if(isvalid){\n      axios.post(`http://3.84.110.201:3001/dealers/addDealersData`,{\n        params:{\n          data: customerdata\n        }\n      })\n      .then((res)=>{\n        if(res){\n          const res = addedsuccessmsg({})\n          alert(res.msg);\n          handleClose();\n        }\n      })\n    }\n    else{\n      alert(errors.commonError );\n    }\n  }\n  const changeevent = (event) => {\n    setcustomerdata({ ...customerdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setcustomerdata({ ...customerdata, \"gstin_status\": event.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Add Dealers Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>GSTIN Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gstin_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Enterprise name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"enterprise_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Enterprise address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"enterprise_address\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Proprietor address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"proprietor_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Proprietor phone number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"proprietor_phone_number\"\n                type=\"number\"\n                onChange={changeevent}\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>gst status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll \n                  comboboxdata={gststatus}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default AddDealersForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate.js",["625","626","627","628","629","630","631","632","633"],[],"import React, { useEffect, useState } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from \"../../atoms/CustomizedPrint/CustomizedPrint\";\nimport CustomizedDownload from \"../../atoms/CustomizedDownload/CustomizedDownload\";\nimport { CSVLink } from \"react-csv\";\nimport { ToWords } from 'to-words';\nimport axios from 'axios';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst DealersInvoiceFormGenerate = ({\n    invoiceFormData,\n    modalview,\n    custrefno,\n    invoiceno,\n    fetchdealersdatatoverify\n}) => {\n    const [listofinvoices, setlistofinvoices] = useState([]);\n    const [tabledata, setTabledata] = React.useState({});\n    // const componentRef = useRef();\n    const [constantinvoicedata, setconstantinvoicedata] = useState();\n    const [totalamount, settotalamount] = useState();\n    const [totalinwords, settotalinwords] = useState();\n    const toWords = new ToWords();\n    // const handlePrint = useReactToPrint({\n    //     content: () => componentRef.current,\n    // });\n    useEffect(() => {\n        if (fetchdealersdatatoverify) {\n            const tempdata = [...new Set(fetchdealersdatatoverify.map((e) => e.customer_reference_no))];\n            tempdata.map((temp) => {\n                let filterByTempData = fetchdealersdatatoverify.filter(dataObject => dataObject.customer_reference_no === temp)\n                var fixedstrings = filterByTempData[0];\n                setconstantinvoicedata(fixedstrings);\n                let temptotal = 0;\n                fetchdealersdatatoverify.map((data) => temptotal = temptotal + data.final_amount);\n                settotalamount(temptotal);\n                let words = toWords.convert(temptotal);\n                settotalinwords(words);\n            })\n        }\n    }, [fetchdealersdatatoverify])\n    useEffect(() => {\n        axios.get('http://3.84.110.201:3001/delivery/fetchinvoicesfromdeliverytable')\n            .then((res) => {\n                setlistofinvoices(res.data);\n            })\n    }, [])\n    useEffect(() => {\n        axios.post('http://3.84.110.201:3001/jointables/downloadinvoicedisplayedastable', {\n            params: {\n                invoice_no: invoiceno,\n                customer_reference_no: custrefno\n            }\n        })\n            .then((res) => {\n                setTabledata(res.data);\n            })\n    }, [])\n    const headers = [\n        { label: 'customer reference no', key: 'customer_reference_no' },\n        { label: 'booked date', key: 'booked_date' },\n        { label: 'requested delivery date', key: 'requested_delivery_date' },\n        { label: 'delivery date', key: 'delivery_date' },\n        { label: 'invoice no', key: 'invoice_no' },\n        { label: 'customer address', key: 'customer_address' },\n        { label: 'gst', key: 'gst' },\n        { label: 'phone number', key: 'phone_number' },\n        { label: 'product hsn code', key: 'product_hsn_code' },\n        { label: 'product', key: 'product' },\n        { label: 'quantity', key: 'quantity' },\n        { label: 'rate', key: 'rate' },\n        { label: 'discount', key: 'discount' },\n        { label: 'cgst', key: 'cgst' },\n        { label: 'sgst', key: 'sgst' },\n        { label: 'igst', key: 'igst' },\n        { label: 'final amount', key: 'final_amount' },\n        { label: 'balance amount', key: 'balance_amount' },\n        { label: 'payment status', key: 'payment_status' },\n        { label: 'booking advance amount', key: 'booking_advance_amount' },\n        { label: 'delivery status', key: 'delivery_status' },\n        { label: 'customer name', key: 'customer_name' },\n    ];\n    const csvReport = {\n        filename: 'DeliveryReports.csv',\n        headers: headers,\n        data: tabledata\n    }\n    return (\n        <div className=\"invoiceformatcontainer\">\n            <div className=\"invoiceheader\">\n                {/* <div>\n                    <CustomizedPrint\n                    onClick={handlePrint}\n                />\n                </div> */}\n                {/* <div>\n                    {\n                        tabledata && tabledata.length ?\n                            <CSVLink {...csvReport}><CustomizedDownload /></CSVLink> : null\n                    }\n                </div> */}\n            </div>\n            <div className=\"table-responsive\" id=\"tableprint\">\n                {\n                    constantinvoicedata\n                        ?\n                        <div>\n                        <div className=\"invoicecontainer\">\n                                <div>\n                                    <p> <span className=\"lightstyle\">Address:</span> Shop #05,Medhini Arcade, <br></br>\n                                        Kithaganahalli Gate, <br></br>Opp Anna Building,\n                                        Hosur Main Road<br></br> Bangalore-560099,\n                                        <br></br></p>\n                                    <p> <span className=\"lightstyle\">GSTIN/UIN:</span>29AYSPB6397D1ZX <br></br>\n                                       <span className=\"lightstyle\">State: </span> {constantinvoicedata.state} <br></br>\n                                       <span className=\"lightstyle\">State Code: </span> {constantinvoicedata.state_code}</p>\n                                </div>\n                                <div>\n                                    <span className=\"invoicenamestyle\">SHREE PARAMANANDA ENTERPRISES</span>\n                                    <p><span className=\"lightstyle\">Contact Us:</span> 9035757145/9141070705</p>\n                                </div>\n                            </div>\n                        <table className=\"tbl\">\n                            {/* <thead>\n                                <tr>\n                                    <th colspan=\"6\" scope=\"col\">\n                                        <div className=\"theaddiv\">\n                                            <h6>TAX INVOICE</h6>\n                                            <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n                                            <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,Opp Anna Building,Hosur Main Road Bangalore-560099,Mobile: 9035757145/9902880851/9141070705</p>\n                                            <p>Email ID:shreeparamananda@gmail.com</p>\n                                            <p>GSTIN/UIN:29AYSPB6397D1ZX ,Karnataka State Code:29</p>\n                                        </div>\n                                    </th>\n                                </tr>\n                            </thead> */}\n                            <tbody>\n                                <tr>\n                                    <td rowSpan=\"3\">Buyer:</td>\n                                    <td rowSpan=\"3\">{constantinvoicedata.customer_address}\n                                    </td>\n                                    <td colspan=\"3\">Invoice No:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.invoice_no}</td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\">Date of supply:-</td>\n                                    <td colspan=\"7\">\n                                        {\n                                        constantinvoicedata.delivery_date != null ?\n                                        moment(constantinvoicedata.delivery_date).format('YYYY-MM-DD'):\n                                        constantinvoicedata.delivery_date\n                                        }\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\">PO no:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.po_number}</td>\n                                </tr>\n                                <tr>\n                                    <td>GSTIN/UIN:</td>\n                                    <td>{constantinvoicedata.gst}</td>\n                                    <td colspan=\"3\">Vehicle No:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.vehicle_number}</td>\n                                </tr>\n                                <tr>\n                                    <td>State Code:</td>\n                                    <td>{constantinvoicedata.state}</td>\n                                    <td colspan=\"3\">Pan Number:</td>\n                                    <td colspan=\"7\">pan 567jkhasdfkj67rt8</td>\n                                </tr>\n                                <tr>\n                                    <td>Place of supply : </td>\n                                    <td colspan=\"11\">{constantinvoicedata.state}</td>\n                                </tr>\n                                <tr>\n                                    <td>Contact NO :</td>\n                                    <td colspan=\"2\">{constantinvoicedata.phone_number} </td>\n                                    <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                    <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                </tr>\n                                <tr>\n                                    <td>Sl</td>\n                                    <td>Discription of Product</td>\n                                    <td>HSN CODE</td>\n                                    <td>Qty</td>\n                                    <td>Rate</td>\n                                    <td>Amount</td>\n                                    <td>CGST</td>\n                                    <td>SGST</td>\n                                    <td>IGST</td>\n                                    <td>Discount</td>\n                                </tr>\n                                {\n                                    fetchdealersdatatoverify && fetchdealersdatatoverify.length &&\n                                    fetchdealersdatatoverify.map((d, index) => (\n                                        <tr>\n                                            <td >{index +1}</td>\n                                            <td >{d.product}</td>\n                                            <td >{d.product_hsn_code}</td>\n                                            <td >{d.quantity}</td>\n                                            <td >{d.rate/d.quantity}</td>\n                                            <td >{d.rate}</td>\n                                            <td >{d.cgst}</td>\n                                            <td >{d.sgst}</td>\n                                            <td >{d.igst}</td>\n                                            <td >{d.discount}</td>\n                                        </tr>\n                                    ))\n                                }\n                                <tr>\n                                    <td colspan=\"3\">Total</td>\n                                    <td colspan=\"7\">{totalamount}</td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\" rowSpan=\"5\">\n                                        Terms &Conditions :\n                                        <ol>\n                                            <li>Payment only by DD/CHQ,In faver of Shree Paramananda Enterprises</li>\n                                            <li>In Case of Cash payment contact the above phone number Before Making Payment</li>\n                                            <li>Goods once sold Cannot return Back</li>\n                                        </ol>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">Round off:</td>\n                                    <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">TOTAL:</td>\n                                    <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">Final Payble Amount :- </td>\n                                    <td colSpan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"1\">Amount in Words: </td>\n                                    <td colSpan=\"6\">Rupees {totalinwords} Only</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"3\">Received The goods in good condition </td>\n                                    <td colSpan=\"7\">certified that the particulars given above are true and correct For Shree Paramananda Enterprises</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"3\">Receivers Signature: </td>\n                                    <td colSpan=\"7\">Authorised Signatory:</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        </div>\n                        : <></>\n                }\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoiceFormGenerate;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/EditDealersReportForm/EditDealersReportForm.js",["634","635"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport '../../../style/style.css';\nconst EditDealersReportForm = ({ rowdata, handleClose }) => {\n    const [updaterowdata, setUpdaterowdata] = useState();\n    const [dealerstatus, setdealerstatus] = useState([\"Active\", \"In Active\"]);\n    useEffect(() => {\n        setUpdaterowdata(rowdata);\n    }, [])\n    const submiteventclicked = (e) => {\n        axios.put('http://3.84.110.201:3001/dealers/updateDealersDetails', {\n            params: {\n                updaterowdata\n            }\n        })\n            .then((res) => {\n                if (res) {\n                    const res = editedsuccessmsg({});\n                    alert(res.msg);\n                    handleClose();\n                }\n            })\n    }\n    const changeevent = (event) => {\n        setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n    }\n    const selectevent = (event) => {\n        setUpdaterowdata({ ...updaterowdata, \"gstin_status\": event.value })\n    }\n    return (\n        <div>\n            <div className=\"pageheading\">\n                Edit Dealers Details\n            </div>\n            <form className=\"formcontainer\">\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Enterprise Name:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"enterprise_name\"\n                                defaultValue={rowdata.enterprise_name}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Enterprise Address:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"enterprise_address\"\n                                defaultValue={rowdata.enterprise_address}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Proprietor Name:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"proprietor_name\"\n                                defaultValue={rowdata.proprietor_name}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Proprietor Phone Number:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"proprietor_phone_number\"\n                                defaultValue={rowdata.proprietor_phone_number}\n                                onChange={changeevent}\n                                type=\"number\"\n                                onWheel={(e) => e.target.blur()}\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            GSTIN Number:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                defaultValue={rowdata.gstin_number}\n                                type=\"text\"\n                                // onChange={changeevent}\n                                // name=\"gstin_number\"\n                                readOnly\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            GSTIN Status:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <CustomizedComboboxAll\n                                comboboxdata={dealerstatus}\n                                dvalue={rowdata.gstin_status}\n                                selectevent={selectevent}\n                                />\n                            {/* <CustomizedComboboxForAll\n                                comboboxdata={dealerstatus}\n                                selectevent={selectevent}\n                                selectedvalue={rowdata.gstin_status}\n                            /> */}\n                        </div>\n                    </label>\n                </div>\n                <div className=\"submitcontainee\">\n                    <CustomizedBtn\n                        BtnName=\"submit\"\n                        onClick={submiteventclicked}\n                    />\n                </div>\n            </form>\n        </div>\n    )\n}\nexport default EditDealersReportForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DealersInvoicesListForm/DealersInvoicesListForm.js",["636","637","638","639","640","641","642"],[],"import React, { useEffect, useState } from \"react\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport FullScreenModalTwo from \"../FullScreenModalTwo/FullScreenModalTwo\";\nimport '../../../style/style.css';\nimport Button from '@mui/material/Button';\n\nconst DealersInvoicesListForm = ({\n    deliveryinvoices,\n    fetchinvoicesfromdelivery,\n    api\n}) => {\n    const [fetchdealersdatatoverify, setfetchdealersdatatoverify] = useState();\n    const [verificationstatus, setverificationstatus] = useState();\n    const [currentInvoiceno, setcurrentInvoiceno] = useState();\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) => {\n        setOpen(e)\n    }\n    const currentInvoicenoevent = (e) => {\n        setcurrentInvoiceno(e);\n    }\n    const fetchdealersdatatoverifyevent = (e) => {\n        api.post('delivery/fetchdealersdatatoverify', {\n            params: {\n                invoice_no: e\n            }\n        })\n            .then((res) => {\n                const fetchdealersdatatoverify = res.data;\n                api.put('jointables/updaterateofdeliverytableonbook', {\n                    params: {\n                        data: fetchdealersdatatoverify\n                    }\n                })\n                    .then((res) => {\n                        api.post('delivery/getstatecodefromdeliverytableonbook', {\n                            params: {\n                                data: fetchdealersdatatoverify\n                            }\n                        })\n                            .then((res) => {\n                                var data = res.data;\n                                for (var i = 0; i < data.length; i++) {\n                                    if (\n                                        (data[i].owner_company == 'SRI PARAMANANDA ENTERPRISES' && data[i].state_code === 29) ||\n                                        (data[i].owner_company == 'SDD ENTERPRISES' && data[i].state_code === 33)\n                                    ) {\n                                        api.put('jointables/updatekarnatakagstratesdeliverytableonbook', {\n                                            params: {\n                                                data: fetchdealersdatatoverify\n                                            }\n                                        })\n                                            .then((res) => {\n                                                api.put('jointables/updatefinalamountdeliverytableonbook', {\n                                                    params: {\n                                                        data: fetchdealersdatatoverify\n                                                    }\n                                                })\n                                                .then((res)=>{\n                                                    api.put('/jointables/updatebalanceamountdeliverytableonbook', {\n                                                        params: {\n                                                            data: fetchdealersdatatoverify\n                                                        }\n                                                    })\n                                                    .then((res)=>{\n                                                        api.put('/jointables/updatepaymentstatusdeliverytableonbook', {\n                                                            params: {\n                                                                data: fetchdealersdatatoverify\n                                                            }\n                                                        })\n                                                        .then((res)=>{\n                                                            if(res){\n                                                                alert(\"Updated Successfully\")\n                                                            }\n                                                        })\n                                                    })\n                                                })\n                                            })\n                                    }\n                                    else {\n                                        api.put('jointables/updateotherstatesgstratesdeliverytableonbook', {\n                                            params: {\n                                                data: fetchdealersdatatoverify\n                                            }\n                                        })\n                                            .then((res) => {\n                                                api.put('jointables/updatefinalamountdeliverytableonbook', {\n                                                    params: {\n                                                        data: fetchdealersdatatoverify\n                                                    }\n                                                })\n                                                .then((res)=>{\n                                                    api.put('/jointables/updatebalanceamountdeliverytableonbook', {\n                                                        params: {\n                                                            data: fetchdealersdatatoverify\n                                                        }\n                                                    })\n                                                    .then((res)=>{\n                                                        api.put('/jointables/updatepaymentstatusdeliverytableonbook', {\n                                                            params: {\n                                                                data: fetchdealersdatatoverify\n                                                            }\n                                                        })\n                                                        .then((res)=>{\n                                                            if(res){\n                                                                alert(\"Updated Successfully\")\n                                                            }\n                                                        })\n                                                    })\n                                                })\n                                            })\n                                    }\n                                }\n                            })\n                    })\n            })\n    }\n    const updatedownloadinvoiceevent = (e) =>{\n        api.post('delivery/fetchdealersdatatoverify', {\n            params: {\n                invoice_no: e\n            }\n        })\n        .then((res) => {\n            setfetchdealersdatatoverify(res.data);\n        })\n    }\n    const fetchverificationstatusevent = (e) => {\n        api.post('delivery/getverificationstatus', {\n            params: {\n                invoice_no: e\n            }\n        })\n            .then((res) => {\n                setverificationstatus(res.data);\n            })\n    }\n    return (\n        <div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                currentInvoiceno={currentInvoiceno}\n                verificationstatus={verificationstatus}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n                fetchinvoicesfromdelivery={fetchinvoicesfromdelivery}\n            />\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered \">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Invoices List</th>\n                            <th>Action</th>\n                            {/* <th>Generate</th> */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            deliveryinvoices && deliveryinvoices.length\n                                ? deliveryinvoices.map((data) => (\n                                    <tr>\n                                        <td>{data.invoice_no}</td>\n                                        <td>{\n                                            data.purchase_status == 1\n                                                ?\n                                                <CustomizedBtn\n                                                    BtnName=\"View\"\n                                                    onClick={() => {\n                                                        // fetchdealersdatatoverifyevent(data.invoice_no);\n                                                        fetchverificationstatusevent(data.invoice_no);\n                                                        currentInvoicenoevent(data.invoice_no);\n                                                        setModalview(\"dealersdetailsform\");\n                                                        openevent(true);\n                                                    }}\n                                                />\n                                                :\n                                                <div className=\"btndesign\">\n                                                    <span className=\"cbtn\"><CustomizedBtn\n                                                        BtnName=\"Update Invoice\"\n                                                        onClick={() => {\n                                                            fetchdealersdatatoverifyevent(data.invoice_no);\n                                                        }}\n                                                    />\n                                                    </span>\n                                                    <span className=\"cbtn\"><CustomizedBtn\n                                                        BtnName=\"Verify Invoice\"\n                                                        onClick={() => {\n                                                            fetchverificationstatusevent(data.invoice_no);\n                                                            currentInvoicenoevent(data.invoice_no);\n                                                            setModalview(\"dealersdetailsform\");\n                                                            openevent(true);\n                                                        }}\n                                                    />\n                                                    </span>\n                                                </div>\n                                        }\n                                        </td>\n                                        {/* <td>\n                                            <div className='btnstyle'>\n                                                <Button \n                                                    id=\"btn\"\n                                                    data-bs-toggle=\"modal\"\n                                                    data-bs-target=\"#exampleModal\"\n                                                    onClick={()=>{\n                                                        updatedownloadinvoiceevent(data.invoice_no);\n                                                    }}\n                                                    >\n                                                        Download Invoice\n                                                </Button>\n                                            </div>\n                                            <FullScreenModalTwo \n                                             api={api}\n                                             modalview={modalview}\n                                             open={open}\n                                             openevent={openevent}\n                                             currentInvoiceno={currentInvoiceno}\n                                             verificationstatus={verificationstatus}\n                                             fetchdealersdatatoverify={fetchdealersdatatoverify}\n                                              />\n                                        </td> */}\n                                    </tr>\n                                ))\n                                :\n                                <tr>\n                                    <td colSpan={3}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoicesListForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedText/CustomizedText.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedTextInput/CustomizedTextInput.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/DeliveryDetailsForm/DeliveryDetailsForm.js",["643","644","645","646","647","648","649","650","651","652"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst DeliveryDetailsForm = ({ rowdata, handleClose }) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [paymentstatus, setpaymentstatus] = useState([\"Paid\", \"Pending\"]);\n  const [deliverstatus, setdeliverstatus] = useState([\"Delivered\", \"Not Delivered\", \"Cancelled\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const [comboboxdata, setComboboxdata] = useState();\n  useEffect(() => {\n    axios.get(`http://3.84.110.201:3001/product/displayProductDetailsDataforcombobox`)\n    .then((res)=>{\n      var data = res.data;\n      let productnamesarray = [];\n        data.map((d) => {\n          productnamesarray.push(d.product_name);\n        })\n        setComboboxdata(productnamesarray);\n    })\n  }, [])\n  const [updatedPaymentstatus, setupdatedPaymentstatus] = useState('');\n  const [updatedDeliverystatus, setupdatedDeliverystatus] = useState('');\n  const paymentstatusevent = (e) => {\n    setupdatedPaymentstatus(e);\n  }\n  const deliverystatusevent = (e) => {\n    setupdatedDeliverystatus(e);\n  }\n  const submiteventclicked = () => {\n    axios.put(`http://3.84.110.201:3001/product/updateProductsDetailsProductDataIncrement`,{\n      params:{\n        updaterowdata\n      }\n    })\n    axios.put(`http://3.84.110.201:3001/delivery/updateDeliveryDetails`,{\n      params:{\n        updaterowdata\n      }\n    })\n    .then((res)=>{\n      if(res){\n        const res = editedsuccessmsg({});\n        alert(res.msg);\n        handleClose();\n      }\n    })\n  }\n  const selectevent = (event) =>{\n    setUpdaterowdata({ ...updaterowdata, \"delivery_status\": event.value })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Delivery Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Reference Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.customer_reference_no}\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Sl No:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_sl_no}\n                onChange={changeevent}\n                name=\"product_sl_no\"\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Booked Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n             <SelectDate\n              type=\"booked_date\"\n              typeOne=\"booked_date\"\n              incomingdate={\n                rowdata.booked_date != null ?\n                moment(rowdata.booked_date).format('YYYY-MM-DD'):\n                rowdata.booked_date\n              }\n              disable=\"yes\"\n            /> \n          </div>\n            \n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Requested Delivery Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <SelectDate\n              type=\"requested_delivery_date\"\n              typeOne=\"requested_delivery_date\"\n              incomingdate={\n                rowdata.requested_delivery_date != null ?\n                moment(rowdata.requested_delivery_date).format('YYYY-MM-DD'):\n                rowdata.requested_delivery_date\n              }\n              disable=\"yes\"\n            />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Delivery Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <SelectDate\n              type=\"delivery_date\"\n              typeOne=\"delivery_date\"\n              incomingdate={\n                rowdata.delivery_date != null ?\n                moment(rowdata.delivery_date).format('YYYY-MM-DD'):\n                rowdata.delivery_date\n              }\n              disable=\"yes\"\n            />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Invoice number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.invoice_no}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"customer_address\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_address}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number Alter (one):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number_alter_one}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number Alter (two):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number_alter_two}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Hsn Code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_hsn_code}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <input\n                defaultValue={rowdata.product}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Quantity:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.quantity}\n                type=\"number\"\n                name=\"quantity\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.rate}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.discount}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              CGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.cgst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              SGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.sgst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              IGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.igst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Final Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"final_amount\"\n                defaultValue={rowdata.final_amount}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Balance Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"balance_amount\"\n                defaultValue={rowdata.balance_amount}\n                type=\"number\"\n                onChange={changeevent}\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Payment Status:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <input\n                name=\"balance_amount\"\n                defaultValue={rowdata.payment_status}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Booking Advance Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"booking_advance_amount\"\n                onHandleChangeEvent={changeevent}\n                defaultValue={rowdata.booking_advance_amount}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Delivery Status:\n            </div>\n             <div className=\"formdatainputstyle\">\n             <CustomizedComboboxAll \n                comboboxdata={deliverstatus}\n                dvalue={rowdata.delivery_status}\n                selectevent={selectevent}\n              />\n            </div> \n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default DeliveryDetailsForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedSelect/CustomizedSelect.js",["653"],[],"import * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport '../../../style/style.css';\n\nconst CustomizedSelect = ({statusselect,selectlabelname,currentStatusEvent})=> {\n  const [age, setAge] = React.useState('');\n  const [finalstatus, setFinalstatus] = React.useState();\n  const handleChange = (event) => {\n    setAge(event.target.value);\n    setFinalstatus(event.target.value);\n  };\n  React.useEffect(()=>{\n    currentStatusEvent(finalstatus);\n  },[finalstatus])\n  return (\n    <div className='customizedselectcontainer'>\n      <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"demo-simple-select-standard-label\">{selectlabelname}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-standard-label\"\n          id=\"demo-simple-select-standard\"\n          value={age}\n          onChange={handleChange}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {\n            statusselect && statusselect.length &&\n            statusselect.map((data)=>(\n            <MenuItem \n              value={data}  \n              onChange={handleChange}\n            >{data}</MenuItem>\n            ))\n          }\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\nexport default CustomizedSelect;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedEditIcon/CustomizedEditIcon.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedPrint/CustomizedPrint.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedDownload/CustomizedDownload.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedDatepicker/CustomizedDatepicker.js",["654","655"],[],"import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\n\nconst CustomizedDatepicker = ({\n    type,\n    incomingdate,\n    selecteddateevent\n}) => {\n    const [date, setDate] = useState();\n    const resultDate=moment(incomingdate).format('YYYY-MM-DD');\n     useEffect(()=>{\n       setDate(resultDate);\n    },[])\n    return(\n        <div>\n            <input \n                name={type} \n                type=\"date\" \n                onChange={(e)=>{setDate(e.target.value); selecteddateevent(e.target.value)}}\n            />\n        </div>\n    );\n}\nexport default CustomizedDatepicker;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCancelIcon/CustomizedCancelIcon.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedDatepicker/SelectDate.js",["656","657"],[],"import React, {useState, useEffect } from 'react';\nimport moment from 'moment';\n\nconst SelectDate = ({\n    incomingdate,\n    typeOne,\n    onHandleChangeEvent,\n    disable,\n    selectevent\n}) => {\n    const [date, setDate] = useState();\n    const [defaultvalue, setdefaultvalue] = useState();\n    useEffect(()=>{\n        const resultDate=moment(incomingdate).format('YYYY-MM-DD');\n        setdefaultvalue(resultDate);\n      },[incomingdate]);\n    const handleChange = (e) =>{\n        setdefaultvalue(e.target.value);\n        // selectevent(e.target.value);\n    }\n    return(\n        <div>\n            {\n                disable ?\n                    <input \n                        value={defaultvalue}\n                        type=\"date\" \n                        disabled\n                    />\n                    :\n                    <input \n                        value={defaultvalue}\n                        type=\"date\"\n                        name={typeOne}\n                        onChange={(e)=>{handleChange(e); onHandleChangeEvent(e)}}\n                    />\n            }\n            \n        </div>\n    );\n}\nexport default SelectDate;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/organisms/SuccessMsg/SuccessMsg.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForState.js",["658","659","660","661","662","663"],[],"import React, {useEffect, useState} from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport Select from 'react-select';\n\nconst CustomizedCombobox = ({\n  comboboxdata,\n  selectevent,\n  selectedowner,\n  dvaluestate,\n  dvaluestate_code\n}) => {\n  const [statedata, setstatedata] = useState();\n  const [defaultvalue, setdefaultvalue] = useState();\n  useEffect(()=>{\n    let temp = comboboxdata.map((d)=>{\n      return {value:d.statecode, label:d.statename}\n    })\n    setstatedata(temp);\n  },[comboboxdata])\n  useEffect(()=>{\n//     if (dvaluestate){\n//       setdefaultvalue({label: dvaluestate, value: dvaluestate_code})\n//     }\n// else \nif(selectedowner == \"SRI PARAMANANDA ENTERPRISES\"){\n      setdefaultvalue({label: 'Karnataka', value: 29})\n    }\n    else if(selectedowner == \"SDD ENTERPRISES\"){\n      setdefaultvalue({label: 'Tamil Nadu', value: 33})\n    }\n  },[comboboxdata,selectedowner, dvaluestate, dvaluestate_code])\n  const handleChange = e => {\n    setdefaultvalue(e);\n    selectevent(e);\n  }\n  return (\n    <div className='comboboxselectstyle'>\n      <Select\n        placeholder=\"Select Option\"\n        value={defaultvalue}\n        options={statedata} // set list of the data\n        onChange={handleChange} // assign onChange function\n    />\n  </div>\n    // <Autocomplete\n    //   onChange={selectevent}\n    //   id=\"highlights-demo\"\n    //   sx={{ width: 300 }}\n    //   options={comboboxdata}\n    //   getOptionLabel={(option) => option.statename}\n    //   renderInput={(params) => (\n    //     <TextField {...params} margin=\"normal\" />\n    //   )}\n    //   renderOption={(props, option, { inputValue }) => {\n    //     const matches = match(option.statename, inputValue);\n    //     const parts = parse(option.statename, matches);\n\n    //     return (\n    //       <li {...props}>\n    //         <div>\n    //           {parts.map((part, index) => (\n    //             <span\n    //               key={index}\n    //               style={{\n    //                 fontWeight: part.highlight ? 700 : 400,\n    //               }}\n    //             >\n    //               {part.text}\n    //             </span>\n    //           ))}\n    //         </div>\n    //       </li>\n    //     );\n    //   }}\n    // />\n  );\n}\nexport default CustomizedCombobox;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForOwnerDefault.js",["664","665","666","667"],[],"import React, {useEffect, useState} from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport Select from 'react-select';\n\nconst CustomizedComboboxForOwnerDefault = ({\n  comboboxdata,\n  selectevent,\n  dvalue\n}) => {\n  const [statedata, setstatedata] = useState();\n  const [defaultvalue, setdefaultvalue] = useState();\n  useEffect(()=>{\n    let temp = comboboxdata.map((d)=>{\n      return {value:d.ownerid, label:d.ownername}\n    })\n    setstatedata(temp);\n  },[comboboxdata])\n  useEffect(()=>{\n    if(dvalue){\n      setdefaultvalue({label: dvalue, value: 2})\n    }\n    // else{\n    //   setdefaultvalue({label: 'SRI PARAMANANDA ENTERPRISES', value: 2})\n    // }\n  },[comboboxdata, dvalue])\n  const handleChange = e => {\n    setdefaultvalue(e);\n    selectevent(e);\n  }\n  return (\n    <div className='comboboxselectstyle'>\n      <Select\n        placeholder=\"Select Option\"\n        value={defaultvalue}\n        options={statedata} // set list of the data\n        onChange={handleChange} // assign onChange function\n    />\n  </div>\n  );\n}\nexport default CustomizedComboboxForOwnerDefault;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForStateDefault.js",["668","669","670","671"],[],"import React, {useEffect, useState} from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport Select from 'react-select';\n\nconst CustomizedComboboxForStateDefault = ({\n  comboboxdata,\n  selectevent,\n//   selectedowner,\n  dvaluestate,\n  dvaluestate_code\n}) => {\n  const [statedata, setstatedata] = useState();\n  const [defaultvalue, setdefaultvalue] = useState();\n  useEffect(()=>{\n    let temp = comboboxdata.map((d)=>{\n      return {value:d.statecode, label:d.statename}\n    })\n    setstatedata(temp);\n  },[comboboxdata])\n  useEffect(()=>{\n    if (dvaluestate){\n      setdefaultvalue({label: dvaluestate, value: dvaluestate_code})\n    }\n// else if(selectedowner == \"SRI PARAMANANDA ENTERPRISES\"){\n//       setdefaultvalue({label: 'Karnataka', value: 29})\n//     }\n//     else if(selectedowner == \"SDD ENTERPRISES\"){\n//       setdefaultvalue({label: 'Tamil Nadu', value: 33})\n//     }\n  },[comboboxdata, dvaluestate, dvaluestate_code])\n  const handleChange = e => {\n    setdefaultvalue(e);\n    selectevent(e);\n  }\n  return (\n    <div className='comboboxselectstyle'>\n      <Select\n        placeholder=\"Select Option\"\n        value={defaultvalue}\n        options={statedata} // set list of the data\n        onChange={handleChange} // assign onChange function\n    />\n  </div>\n  );\n}\nexport default CustomizedComboboxForStateDefault;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect.js",["672"],[],"import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(name, productName, theme) {\n  return {\n    fontWeight:\n      productName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nconst CustomizedComboboxMultipleSelect = ({\n  comboboxdata,\n  selectedproducts\n}) => {\n  const theme = useTheme();\n  const [productName, setProductName] = React.useState([]);\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setProductName(\n      typeof value === 'string' ? value.split(',') : value,\n    );\n    selectedproducts(\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <Select\n          labelId=\"demo-multiple-name-label\"\n          id=\"demo-multiple-name\"\n          multiple\n          value={productName}\n          onChange={handleChange}\n          input={<OutlinedInput />}\n          MenuProps={MenuProps}\n        >\n          {comboboxdata.map((name) => (\n            <MenuItem\n              key={name.product_name}\n              value={name.product_name}\n              style={getStyles(name, productName, theme)}\n            >\n              {name.product_name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default CustomizedComboboxMultipleSelect;\n","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCombobox/CustomizedCombobboxForOwner.js",["673","674","675","676"],[],"import React, {useEffect, useState} from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport Select from 'react-select';\n\nconst CustomizedComboboxForOwner = ({\n  comboboxdata,\n  selectevent,\n  dvalue\n}) => {\n  const [statedata, setstatedata] = useState();\n  const [defaultvalue, setdefaultvalue] = useState();\n  useEffect(()=>{\n    let temp = comboboxdata.map((d)=>{\n      return {value:d.ownerid, label:d.ownername}\n    })\n    setstatedata(temp);\n  },[comboboxdata])\n  useEffect(()=>{\n    if(dvalue){\n      setdefaultvalue({label: dvalue, value: 2})\n    }\n    else{\n      setdefaultvalue({label: 'SRI PARAMANANDA ENTERPRISES', value: 2})\n    }\n  },[comboboxdata, dvalue])\n  const handleChange = e => {\n    setdefaultvalue(e);\n    selectevent(e);\n  }\n  return (\n    <div className='comboboxselectstyle'>\n      <Select\n        placeholder=\"Select Option\"\n        value={defaultvalue}\n        options={statedata} // set list of the data\n        onChange={handleChange} // assign onChange function\n    />\n  </div>\n  );\n}\nexport default CustomizedComboboxForOwner;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxAll.js",["677","678"],[],"import React, {useEffect, useState} from 'react';\nimport TextField from '@mui/material/TextField';\nimport Select from 'react-select';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport '../../../style/style.css';\n\nconst CustomizedComboboxAll = ({\n  comboboxdata,\n  onChange,\n  dvalue,\n  selectevent\n}) => {\n  const [status, setstatus] = useState();\n  const [defaultvalue, setdefaultvalue] = useState();\n  useEffect(()=>{\n    setdefaultvalue({value:dvalue, label:dvalue})\n  },[dvalue])\n  useEffect(()=>{\n    let ds = comboboxdata.map((data)=>{\n      return {value:data, label:data}\n    })\n    setstatus(ds);\n  },[comboboxdata, dvalue])\n  const handleChange = e => {\n    setdefaultvalue(e);\n    selectevent(e);\n  }\n  return (\n    <div className='comboboxselectstyle'>\n    <Select\n      placeholder=\"Select Option\"\n      value={defaultvalue}\n      options={status} // set list of the data\n      onChange={handleChange} // assign onChange function\n  />\n  </div>\n  );\n}\nexport default CustomizedComboboxAll;","/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForAll.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/from git/sdd/src/components/molecules/FullScreenModalTwo/FullScreenModalTwo.js",[],[],{"ruleId":"679","severity":1,"message":"680","line":7,"column":20,"nodeType":"681","messageId":"682","endLine":7,"endColumn":29},{"ruleId":"679","severity":1,"message":"683","line":19,"column":9,"nodeType":"681","messageId":"682","endLine":19,"endColumn":17},{"ruleId":"679","severity":1,"message":"684","line":20,"column":12,"nodeType":"681","messageId":"682","endLine":20,"endColumn":16},{"ruleId":"679","severity":1,"message":"685","line":4,"column":19,"nodeType":"681","messageId":"682","endLine":4,"endColumn":32},{"ruleId":"686","severity":1,"message":"687","line":20,"column":5,"nodeType":"688","endLine":20,"endColumn":16,"suggestions":"689"},{"ruleId":"690","severity":1,"message":"691","line":60,"column":27,"nodeType":"692","messageId":"693","endLine":60,"endColumn":29},{"ruleId":"679","severity":1,"message":"694","line":2,"column":8,"nodeType":"681","messageId":"682","endLine":2,"endColumn":27},{"ruleId":"679","severity":1,"message":"695","line":9,"column":8,"nodeType":"681","messageId":"682","endLine":9,"endColumn":26},{"ruleId":"679","severity":1,"message":"696","line":11,"column":8,"nodeType":"681","messageId":"682","endLine":11,"endColumn":14},{"ruleId":"679","severity":1,"message":"697","line":17,"column":12,"nodeType":"681","messageId":"682","endLine":17,"endColumn":28},{"ruleId":"679","severity":1,"message":"698","line":17,"column":30,"nodeType":"681","messageId":"682","endLine":17,"endColumn":49},{"ruleId":"679","severity":1,"message":"699","line":20,"column":12,"nodeType":"681","messageId":"682","endLine":20,"endColumn":28},{"ruleId":"679","severity":1,"message":"700","line":23,"column":24,"nodeType":"681","messageId":"682","endLine":23,"endColumn":37},{"ruleId":"686","severity":1,"message":"701","line":35,"column":7,"nodeType":"688","endLine":35,"endColumn":14,"suggestions":"702"},{"ruleId":"686","severity":1,"message":"703","line":68,"column":8,"nodeType":"688","endLine":68,"endColumn":10,"suggestions":"704"},{"ruleId":"690","severity":1,"message":"691","line":92,"column":42,"nodeType":"692","messageId":"693","endLine":92,"endColumn":44},{"ruleId":"690","severity":1,"message":"691","line":93,"column":42,"nodeType":"692","messageId":"693","endLine":93,"endColumn":44},{"ruleId":"679","severity":1,"message":"705","line":194,"column":9,"nodeType":"681","messageId":"682","endLine":194,"endColumn":27},{"ruleId":"679","severity":1,"message":"706","line":203,"column":9,"nodeType":"681","messageId":"682","endLine":203,"endColumn":25},{"ruleId":"686","severity":1,"message":"703","line":213,"column":8,"nodeType":"688","endLine":213,"endColumn":20,"suggestions":"707"},{"ruleId":"679","severity":1,"message":"708","line":214,"column":11,"nodeType":"681","messageId":"682","endLine":214,"endColumn":25},{"ruleId":"690","severity":1,"message":"691","line":306,"column":63,"nodeType":"692","messageId":"693","endLine":306,"endColumn":65},{"ruleId":"690","severity":1,"message":"691","line":307,"column":63,"nodeType":"692","messageId":"693","endLine":307,"endColumn":65},{"ruleId":"690","severity":1,"message":"691","line":344,"column":62,"nodeType":"692","messageId":"693","endLine":344,"endColumn":64},{"ruleId":"690","severity":1,"message":"691","line":344,"column":95,"nodeType":"692","messageId":"693","endLine":344,"endColumn":97},{"ruleId":"679","severity":1,"message":"683","line":16,"column":7,"nodeType":"681","messageId":"682","endLine":16,"endColumn":15},{"ruleId":"686","severity":1,"message":"701","line":68,"column":7,"nodeType":"688","endLine":68,"endColumn":14,"suggestions":"709"},{"ruleId":"679","severity":1,"message":"710","line":16,"column":12,"nodeType":"681","messageId":"682","endLine":16,"endColumn":22},{"ruleId":"679","severity":1,"message":"711","line":17,"column":23,"nodeType":"681","messageId":"682","endLine":17,"endColumn":35},{"ruleId":"679","severity":1,"message":"712","line":24,"column":11,"nodeType":"681","messageId":"682","endLine":24,"endColumn":30},{"ruleId":"686","severity":1,"message":"701","line":35,"column":7,"nodeType":"688","endLine":35,"endColumn":14,"suggestions":"713"},{"ruleId":"686","severity":1,"message":"714","line":41,"column":7,"nodeType":"688","endLine":41,"endColumn":9,"suggestions":"715"},{"ruleId":"690","severity":1,"message":"716","line":86,"column":48,"nodeType":"692","messageId":"693","endLine":86,"endColumn":50},{"ruleId":"679","severity":1,"message":"683","line":21,"column":7,"nodeType":"681","messageId":"682","endLine":21,"endColumn":15},{"ruleId":"679","severity":1,"message":"717","line":62,"column":24,"nodeType":"681","messageId":"682","endLine":62,"endColumn":39},{"ruleId":"679","severity":1,"message":"718","line":63,"column":26,"nodeType":"681","messageId":"682","endLine":63,"endColumn":43},{"ruleId":"679","severity":1,"message":"719","line":64,"column":25,"nodeType":"681","messageId":"682","endLine":64,"endColumn":41},{"ruleId":"679","severity":1,"message":"720","line":65,"column":25,"nodeType":"681","messageId":"682","endLine":65,"endColumn":41},{"ruleId":"679","severity":1,"message":"721","line":66,"column":23,"nodeType":"681","messageId":"682","endLine":66,"endColumn":37},{"ruleId":"686","severity":1,"message":"701","line":88,"column":7,"nodeType":"688","endLine":88,"endColumn":14,"suggestions":"722"},{"ruleId":"686","severity":1,"message":"701","line":20,"column":7,"nodeType":"688","endLine":20,"endColumn":14,"suggestions":"723"},{"ruleId":"686","severity":1,"message":"714","line":28,"column":7,"nodeType":"688","endLine":28,"endColumn":9,"suggestions":"724"},{"ruleId":"690","severity":1,"message":"691","line":98,"column":14,"nodeType":"692","messageId":"693","endLine":98,"endColumn":16},{"ruleId":"690","severity":1,"message":"716","line":159,"column":46,"nodeType":"692","messageId":"693","endLine":159,"endColumn":48},{"ruleId":"725","severity":1,"message":"726","line":6,"column":17,"nodeType":"727","messageId":"693","endLine":7,"endColumn":2},{"ruleId":"679","severity":1,"message":"728","line":2,"column":8,"nodeType":"681","messageId":"682","endLine":2,"endColumn":24},{"ruleId":"679","severity":1,"message":"696","line":3,"column":8,"nodeType":"681","messageId":"682","endLine":3,"endColumn":14},{"ruleId":"679","severity":1,"message":"729","line":2,"column":8,"nodeType":"681","messageId":"682","endLine":2,"endColumn":27},{"ruleId":"679","severity":1,"message":"694","line":2,"column":8,"nodeType":"681","messageId":"682","endLine":2,"endColumn":27},{"ruleId":"679","severity":1,"message":"730","line":6,"column":8,"nodeType":"681","messageId":"682","endLine":6,"endColumn":23},{"ruleId":"679","severity":1,"message":"696","line":8,"column":8,"nodeType":"681","messageId":"682","endLine":8,"endColumn":14},{"ruleId":"679","severity":1,"message":"731","line":17,"column":12,"nodeType":"681","messageId":"682","endLine":17,"endColumn":28},{"ruleId":"686","severity":1,"message":"732","line":27,"column":8,"nodeType":"688","endLine":27,"endColumn":10,"suggestions":"733"},{"ruleId":"679","severity":1,"message":"697","line":38,"column":12,"nodeType":"681","messageId":"682","endLine":38,"endColumn":28},{"ruleId":"679","severity":1,"message":"734","line":39,"column":11,"nodeType":"681","messageId":"682","endLine":39,"endColumn":26},{"ruleId":"679","severity":1,"message":"735","line":64,"column":12,"nodeType":"681","messageId":"682","endLine":64,"endColumn":25},{"ruleId":"736","severity":1,"message":"737","line":66,"column":35,"nodeType":"738","messageId":"739","endLine":66,"endColumn":37},{"ruleId":"679","severity":1,"message":"740","line":84,"column":11,"nodeType":"681","messageId":"682","endLine":84,"endColumn":25},{"ruleId":"686","severity":1,"message":"732","line":95,"column":8,"nodeType":"688","endLine":95,"endColumn":20,"suggestions":"741"},{"ruleId":"690","severity":1,"message":"691","line":150,"column":61,"nodeType":"692","messageId":"693","endLine":150,"endColumn":63},{"ruleId":"690","severity":1,"message":"691","line":151,"column":61,"nodeType":"692","messageId":"693","endLine":151,"endColumn":63},{"ruleId":"690","severity":1,"message":"691","line":153,"column":50,"nodeType":"692","messageId":"693","endLine":153,"endColumn":52},{"ruleId":"679","severity":1,"message":"694","line":2,"column":8,"nodeType":"681","messageId":"682","endLine":2,"endColumn":27},{"ruleId":"686","severity":1,"message":"742","line":29,"column":7,"nodeType":"688","endLine":29,"endColumn":9,"suggestions":"743"},{"ruleId":"690","severity":1,"message":"691","line":47,"column":44,"nodeType":"692","messageId":"693","endLine":47,"endColumn":46},{"ruleId":"686","severity":1,"message":"742","line":58,"column":8,"nodeType":"688","endLine":58,"endColumn":20,"suggestions":"744"},{"ruleId":"679","severity":1,"message":"740","line":69,"column":11,"nodeType":"681","messageId":"682","endLine":69,"endColumn":25},{"ruleId":"679","severity":1,"message":"694","line":2,"column":8,"nodeType":"681","messageId":"682","endLine":2,"endColumn":27},{"ruleId":"686","severity":1,"message":"745","line":31,"column":8,"nodeType":"688","endLine":31,"endColumn":39,"suggestions":"746"},{"ruleId":"686","severity":1,"message":"747","line":36,"column":7,"nodeType":"688","endLine":36,"endColumn":22,"suggestions":"748"},{"ruleId":"686","severity":1,"message":"749","line":41,"column":7,"nodeType":"688","endLine":41,"endColumn":23,"suggestions":"750"},{"ruleId":"679","severity":1,"message":"751","line":109,"column":11,"nodeType":"681","messageId":"682","endLine":109,"endColumn":23},{"ruleId":"679","severity":1,"message":"740","line":123,"column":11,"nodeType":"681","messageId":"682","endLine":123,"endColumn":25},{"ruleId":"686","severity":1,"message":"752","line":137,"column":8,"nodeType":"688","endLine":137,"endColumn":21,"suggestions":"753"},{"ruleId":"690","severity":1,"message":"691","line":206,"column":61,"nodeType":"692","messageId":"693","endLine":206,"endColumn":63},{"ruleId":"690","severity":1,"message":"691","line":207,"column":61,"nodeType":"692","messageId":"693","endLine":207,"endColumn":63},{"ruleId":"679","severity":1,"message":"694","line":2,"column":8,"nodeType":"681","messageId":"682","endLine":2,"endColumn":27},{"ruleId":"679","severity":1,"message":"754","line":4,"column":8,"nodeType":"681","messageId":"682","endLine":4,"endColumn":23},{"ruleId":"686","severity":1,"message":"755","line":32,"column":7,"nodeType":"688","endLine":32,"endColumn":22,"suggestions":"756"},{"ruleId":"686","severity":1,"message":"757","line":66,"column":7,"nodeType":"688","endLine":66,"endColumn":20,"suggestions":"758"},{"ruleId":"679","severity":1,"message":"751","line":77,"column":9,"nodeType":"681","messageId":"682","endLine":77,"endColumn":21},{"ruleId":"679","severity":1,"message":"740","line":90,"column":9,"nodeType":"681","messageId":"682","endLine":90,"endColumn":23},{"ruleId":"679","severity":1,"message":"694","line":4,"column":8,"nodeType":"681","messageId":"682","endLine":4,"endColumn":27},{"ruleId":"679","severity":1,"message":"759","line":16,"column":12,"nodeType":"681","messageId":"682","endLine":16,"endColumn":19},{"ruleId":"679","severity":1,"message":"697","line":19,"column":12,"nodeType":"681","messageId":"682","endLine":19,"endColumn":28},{"ruleId":"679","severity":1,"message":"760","line":27,"column":12,"nodeType":"681","messageId":"682","endLine":27,"endColumn":24},{"ruleId":"686","severity":1,"message":"761","line":44,"column":8,"nodeType":"688","endLine":44,"endColumn":23,"suggestions":"762"},{"ruleId":"679","severity":1,"message":"734","line":45,"column":11,"nodeType":"681","messageId":"682","endLine":45,"endColumn":26},{"ruleId":"679","severity":1,"message":"763","line":73,"column":11,"nodeType":"681","messageId":"682","endLine":73,"endColumn":20},{"ruleId":"690","severity":1,"message":"691","line":92,"column":14,"nodeType":"692","messageId":"693","endLine":92,"endColumn":16},{"ruleId":"679","severity":1,"message":"751","line":104,"column":11,"nodeType":"681","messageId":"682","endLine":104,"endColumn":23},{"ruleId":"679","severity":1,"message":"740","line":118,"column":11,"nodeType":"681","messageId":"682","endLine":118,"endColumn":25},{"ruleId":"679","severity":1,"message":"764","line":3,"column":8,"nodeType":"681","messageId":"682","endLine":3,"endColumn":26},{"ruleId":"679","severity":1,"message":"765","line":6,"column":8,"nodeType":"681","messageId":"682","endLine":6,"endColumn":14},{"ruleId":"766","severity":1,"message":"767","line":44,"column":16,"nodeType":"768","messageId":"769","endLine":44,"endColumn":24,"fix":"770"},{"ruleId":"766","severity":1,"message":"767","line":83,"column":16,"nodeType":"768","messageId":"769","endLine":83,"endColumn":24,"fix":"771"},{"ruleId":"772","severity":1,"message":"773","line":89,"column":57,"nodeType":"692","messageId":"774","endLine":89,"endColumn":58},{"ruleId":"766","severity":1,"message":"767","line":117,"column":16,"nodeType":"768","messageId":"769","endLine":117,"endColumn":24,"fix":"775"},{"ruleId":"772","severity":1,"message":"773","line":123,"column":34,"nodeType":"692","messageId":"774","endLine":123,"endColumn":35},{"ruleId":"772","severity":1,"message":"773","line":123,"column":39,"nodeType":"692","messageId":"774","endLine":123,"endColumn":40},{"ruleId":"772","severity":1,"message":"773","line":123,"column":43,"nodeType":"692","messageId":"774","endLine":123,"endColumn":44},{"ruleId":"766","severity":1,"message":"767","line":150,"column":16,"nodeType":"768","messageId":"769","endLine":150,"endColumn":24,"fix":"776"},{"ruleId":"777","severity":1,"message":"778","line":178,"column":13,"nodeType":"779","endLine":178,"endColumn":56},{"ruleId":"777","severity":1,"message":"778","line":181,"column":13,"nodeType":"779","endLine":181,"endColumn":57},{"ruleId":"777","severity":1,"message":"778","line":184,"column":13,"nodeType":"779","endLine":184,"endColumn":56},{"ruleId":"777","severity":1,"message":"778","line":187,"column":13,"nodeType":"779","endLine":187,"endColumn":55},{"ruleId":"679","severity":1,"message":"694","line":2,"column":8,"nodeType":"681","messageId":"682","endLine":2,"endColumn":27},{"ruleId":"679","severity":1,"message":"697","line":18,"column":12,"nodeType":"681","messageId":"682","endLine":18,"endColumn":28},{"ruleId":"686","severity":1,"message":"780","line":32,"column":8,"nodeType":"688","endLine":32,"endColumn":23,"suggestions":"781"},{"ruleId":"686","severity":1,"message":"782","line":47,"column":8,"nodeType":"688","endLine":47,"endColumn":21,"suggestions":"783"},{"ruleId":"679","severity":1,"message":"751","line":58,"column":11,"nodeType":"681","messageId":"682","endLine":58,"endColumn":23},{"ruleId":"679","severity":1,"message":"734","line":61,"column":11,"nodeType":"681","messageId":"682","endLine":61,"endColumn":26},{"ruleId":"679","severity":1,"message":"740","line":75,"column":11,"nodeType":"681","messageId":"682","endLine":75,"endColumn":25},{"ruleId":"690","severity":1,"message":"691","line":86,"column":14,"nodeType":"692","messageId":"693","endLine":86,"endColumn":16},{"ruleId":"766","severity":1,"message":"767","line":44,"column":16,"nodeType":"768","messageId":"769","endLine":44,"endColumn":24,"fix":"784"},{"ruleId":"766","severity":1,"message":"767","line":84,"column":16,"nodeType":"768","messageId":"769","endLine":84,"endColumn":24,"fix":"785"},{"ruleId":"772","severity":1,"message":"773","line":90,"column":57,"nodeType":"692","messageId":"774","endLine":90,"endColumn":58},{"ruleId":"766","severity":1,"message":"767","line":117,"column":16,"nodeType":"768","messageId":"769","endLine":117,"endColumn":24,"fix":"786"},{"ruleId":"772","severity":1,"message":"773","line":123,"column":34,"nodeType":"692","messageId":"774","endLine":123,"endColumn":35},{"ruleId":"772","severity":1,"message":"773","line":123,"column":39,"nodeType":"692","messageId":"774","endLine":123,"endColumn":40},{"ruleId":"772","severity":1,"message":"773","line":123,"column":43,"nodeType":"692","messageId":"774","endLine":123,"endColumn":44},{"ruleId":"777","severity":1,"message":"778","line":152,"column":13,"nodeType":"779","endLine":152,"endColumn":56},{"ruleId":"777","severity":1,"message":"778","line":155,"column":13,"nodeType":"779","endLine":155,"endColumn":57},{"ruleId":"777","severity":1,"message":"778","line":158,"column":13,"nodeType":"779","endLine":158,"endColumn":56},{"ruleId":"787","severity":1,"message":"788","line":10,"column":13,"nodeType":"779","endLine":10,"endColumn":49},{"ruleId":"679","severity":1,"message":"789","line":3,"column":10,"nodeType":"681","messageId":"682","endLine":3,"endColumn":28},{"ruleId":"679","severity":1,"message":"790","line":7,"column":8,"nodeType":"681","messageId":"682","endLine":7,"endColumn":34},{"ruleId":"679","severity":1,"message":"791","line":8,"column":8,"nodeType":"681","messageId":"682","endLine":8,"endColumn":41},{"ruleId":"679","severity":1,"message":"792","line":9,"column":8,"nodeType":"681","messageId":"682","endLine":9,"endColumn":34},{"ruleId":"679","severity":1,"message":"793","line":10,"column":8,"nodeType":"681","messageId":"682","endLine":10,"endColumn":41},{"ruleId":"679","severity":1,"message":"794","line":23,"column":12,"nodeType":"681","messageId":"682","endLine":23,"endColumn":25},{"ruleId":"679","severity":1,"message":"719","line":23,"column":27,"nodeType":"681","messageId":"682","endLine":23,"endColumn":43},{"ruleId":"679","severity":1,"message":"795","line":24,"column":12,"nodeType":"681","messageId":"682","endLine":24,"endColumn":22},{"ruleId":"679","severity":1,"message":"796","line":25,"column":12,"nodeType":"681","messageId":"682","endLine":25,"endColumn":23},{"ruleId":"679","severity":1,"message":"797","line":28,"column":12,"nodeType":"681","messageId":"682","endLine":28,"endColumn":25},{"ruleId":"736","severity":1,"message":"737","line":31,"column":41,"nodeType":"738","messageId":"739","endLine":31,"endColumn":43},{"ruleId":"679","severity":1,"message":"798","line":58,"column":12,"nodeType":"681","messageId":"682","endLine":58,"endColumn":24},{"ruleId":"679","severity":1,"message":"799","line":59,"column":12,"nodeType":"681","messageId":"682","endLine":59,"endColumn":17},{"ruleId":"679","severity":1,"message":"800","line":59,"column":19,"nodeType":"681","messageId":"682","endLine":59,"endColumn":27},{"ruleId":"679","severity":1,"message":"801","line":68,"column":11,"nodeType":"681","messageId":"682","endLine":68,"endColumn":30},{"ruleId":"736","severity":1,"message":"802","line":71,"column":41,"nodeType":"738","messageId":"739","endLine":71,"endColumn":43},{"ruleId":"679","severity":1,"message":"803","line":81,"column":12,"nodeType":"681","messageId":"682","endLine":81,"endColumn":17},{"ruleId":"686","severity":1,"message":"714","line":87,"column":8,"nodeType":"688","endLine":87,"endColumn":10,"suggestions":"804"},{"ruleId":"679","severity":1,"message":"805","line":112,"column":11,"nodeType":"681","messageId":"682","endLine":112,"endColumn":22},{"ruleId":"736","severity":1,"message":"802","line":114,"column":41,"nodeType":"738","messageId":"739","endLine":114,"endColumn":43},{"ruleId":"686","severity":1,"message":"806","line":135,"column":8,"nodeType":"688","endLine":135,"endColumn":10,"suggestions":"807"},{"ruleId":"686","severity":1,"message":"714","line":160,"column":8,"nodeType":"688","endLine":160,"endColumn":23,"suggestions":"808"},{"ruleId":"690","severity":1,"message":"691","line":199,"column":80,"nodeType":"692","messageId":"693","endLine":199,"endColumn":82},{"ruleId":"690","severity":1,"message":"691","line":200,"column":80,"nodeType":"692","messageId":"693","endLine":200,"endColumn":82},{"ruleId":"736","severity":1,"message":"802","line":272,"column":41,"nodeType":"738","messageId":"739","endLine":272,"endColumn":43},{"ruleId":"679","severity":1,"message":"809","line":279,"column":11,"nodeType":"681","messageId":"682","endLine":279,"endColumn":30},{"ruleId":"810","severity":1,"message":"811","line":359,"column":74,"nodeType":"812","messageId":"813","endLine":359,"endColumn":90},{"ruleId":"810","severity":1,"message":"811","line":360,"column":74,"nodeType":"812","messageId":"813","endLine":360,"endColumn":90},{"ruleId":"810","severity":1,"message":"814","line":378,"column":86,"nodeType":"812","messageId":"813","endLine":378,"endColumn":114},{"ruleId":"810","severity":1,"message":"814","line":379,"column":86,"nodeType":"812","messageId":"813","endLine":379,"endColumn":114},{"ruleId":"690","severity":1,"message":"691","line":681,"column":37,"nodeType":"692","messageId":"693","endLine":681,"endColumn":39},{"ruleId":"690","severity":1,"message":"691","line":683,"column":42,"nodeType":"692","messageId":"693","endLine":683,"endColumn":44},{"ruleId":"686","severity":1,"message":"806","line":10,"column":8,"nodeType":"688","endLine":10,"endColumn":10,"suggestions":"815"},{"ruleId":"679","severity":1,"message":"816","line":45,"column":10,"nodeType":"681","messageId":"682","endLine":45,"endColumn":21},{"ruleId":"679","severity":1,"message":"800","line":48,"column":17,"nodeType":"681","messageId":"682","endLine":48,"endColumn":25},{"ruleId":"679","severity":1,"message":"817","line":55,"column":10,"nodeType":"681","messageId":"682","endLine":55,"endColumn":19},{"ruleId":"686","severity":1,"message":"714","line":64,"column":6,"nodeType":"688","endLine":64,"endColumn":8,"suggestions":"818"},{"ruleId":"679","severity":1,"message":"819","line":74,"column":7,"nodeType":"681","messageId":"682","endLine":74,"endColumn":24},{"ruleId":"686","severity":1,"message":"820","line":97,"column":6,"nodeType":"688","endLine":97,"endColumn":8,"suggestions":"821"},{"ruleId":"690","severity":1,"message":"716","line":102,"column":33,"nodeType":"692","messageId":"693","endLine":102,"endColumn":35},{"ruleId":"686","severity":1,"message":"714","line":112,"column":6,"nodeType":"688","endLine":112,"endColumn":20,"suggestions":"822"},{"ruleId":"679","severity":1,"message":"823","line":114,"column":9,"nodeType":"681","messageId":"682","endLine":114,"endColumn":18},{"ruleId":"679","severity":1,"message":"824","line":115,"column":9,"nodeType":"681","messageId":"682","endLine":115,"endColumn":21},{"ruleId":"679","severity":1,"message":"825","line":116,"column":9,"nodeType":"681","messageId":"682","endLine":116,"endColumn":19},{"ruleId":"679","severity":1,"message":"826","line":117,"column":9,"nodeType":"681","messageId":"682","endLine":117,"endColumn":21},{"ruleId":"690","severity":1,"message":"691","line":120,"column":53,"nodeType":"692","messageId":"693","endLine":120,"endColumn":55},{"ruleId":"827","severity":1,"message":"828","line":138,"column":29,"nodeType":"829","messageId":"830","endLine":138,"endColumn":47,"fix":"831"},{"ruleId":"679","severity":1,"message":"805","line":194,"column":9,"nodeType":"681","messageId":"682","endLine":194,"endColumn":20},{"ruleId":"736","severity":1,"message":"737","line":241,"column":27,"nodeType":"738","messageId":"739","endLine":241,"endColumn":29},{"ruleId":"686","severity":1,"message":"714","line":257,"column":6,"nodeType":"688","endLine":257,"endColumn":16,"suggestions":"832"},{"ruleId":"736","severity":1,"message":"737","line":261,"column":29,"nodeType":"738","messageId":"739","endLine":261,"endColumn":31},{"ruleId":"736","severity":1,"message":"737","line":274,"column":29,"nodeType":"738","messageId":"739","endLine":274,"endColumn":31},{"ruleId":"690","severity":1,"message":"691","line":277,"column":41,"nodeType":"692","messageId":"693","endLine":277,"endColumn":43},{"ruleId":"690","severity":1,"message":"691","line":294,"column":31,"nodeType":"692","messageId":"693","endLine":294,"endColumn":33},{"ruleId":"736","severity":1,"message":"737","line":16,"column":33,"nodeType":"738","messageId":"739","endLine":16,"endColumn":35},{"ruleId":"686","severity":1,"message":"833","line":27,"column":8,"nodeType":"688","endLine":27,"endColumn":25,"suggestions":"834"},{"ruleId":"679","severity":1,"message":"835","line":14,"column":12,"nodeType":"681","messageId":"682","endLine":14,"endColumn":30},{"ruleId":"679","severity":1,"message":"836","line":15,"column":12,"nodeType":"681","messageId":"682","endLine":15,"endColumn":25},{"ruleId":"679","severity":1,"message":"837","line":15,"column":27,"nodeType":"681","messageId":"682","endLine":15,"endColumn":43},{"ruleId":"679","severity":1,"message":"838","line":17,"column":12,"nodeType":"681","messageId":"682","endLine":17,"endColumn":33},{"ruleId":"679","severity":1,"message":"839","line":18,"column":20,"nodeType":"681","messageId":"682","endLine":18,"endColumn":29},{"ruleId":"686","severity":1,"message":"714","line":29,"column":8,"nodeType":"688","endLine":29,"endColumn":10,"suggestions":"840"},{"ruleId":"686","severity":1,"message":"806","line":32,"column":8,"nodeType":"688","endLine":32,"endColumn":10,"suggestions":"841"},{"ruleId":"772","severity":1,"message":"773","line":49,"column":45,"nodeType":"692","messageId":"774","endLine":49,"endColumn":46},{"ruleId":"772","severity":1,"message":"773","line":52,"column":45,"nodeType":"692","messageId":"774","endLine":52,"endColumn":46},{"ruleId":"772","severity":1,"message":"773","line":52,"column":51,"nodeType":"692","messageId":"774","endLine":52,"endColumn":52},{"ruleId":"772","severity":1,"message":"773","line":55,"column":45,"nodeType":"692","messageId":"774","endLine":55,"endColumn":46},{"ruleId":"772","severity":1,"message":"773","line":55,"column":51,"nodeType":"692","messageId":"774","endLine":55,"endColumn":52},{"ruleId":"772","severity":1,"message":"773","line":58,"column":45,"nodeType":"692","messageId":"774","endLine":58,"endColumn":46},{"ruleId":"772","severity":1,"message":"773","line":58,"column":51,"nodeType":"692","messageId":"774","endLine":58,"endColumn":52},{"ruleId":"842","severity":1,"message":"843","line":112,"column":21,"nodeType":"681","messageId":"844","endLine":112,"endColumn":23},{"ruleId":"842","severity":1,"message":"845","line":113,"column":21,"nodeType":"681","messageId":"844","endLine":113,"endColumn":23},{"ruleId":"736","severity":1,"message":"802","line":182,"column":41,"nodeType":"738","messageId":"739","endLine":182,"endColumn":43},{"ruleId":"679","severity":1,"message":"800","line":35,"column":17,"nodeType":"681","messageId":"682","endLine":35,"endColumn":25},{"ruleId":"679","severity":1,"message":"846","line":47,"column":25,"nodeType":"681","messageId":"682","endLine":47,"endColumn":41},{"ruleId":"686","severity":1,"message":"714","line":92,"column":6,"nodeType":"688","endLine":92,"endColumn":8,"suggestions":"847"},{"ruleId":"690","severity":1,"message":"691","line":96,"column":17,"nodeType":"692","messageId":"693","endLine":96,"endColumn":19},{"ruleId":"690","severity":1,"message":"691","line":99,"column":22,"nodeType":"692","messageId":"693","endLine":99,"endColumn":24},{"ruleId":"690","severity":1,"message":"691","line":109,"column":25,"nodeType":"692","messageId":"693","endLine":109,"endColumn":27},{"ruleId":"827","severity":1,"message":"828","line":126,"column":29,"nodeType":"829","messageId":"830","endLine":126,"endColumn":47,"fix":"848"},{"ruleId":"690","severity":1,"message":"691","line":146,"column":54,"nodeType":"692","messageId":"693","endLine":146,"endColumn":56},{"ruleId":"736","severity":1,"message":"737","line":150,"column":25,"nodeType":"738","messageId":"739","endLine":150,"endColumn":27},{"ruleId":"690","severity":1,"message":"691","line":197,"column":31,"nodeType":"692","messageId":"693","endLine":197,"endColumn":33},{"ruleId":"690","severity":1,"message":"691","line":206,"column":31,"nodeType":"692","messageId":"693","endLine":206,"endColumn":33},{"ruleId":"686","severity":1,"message":"820","line":228,"column":6,"nodeType":"688","endLine":228,"endColumn":8,"suggestions":"849"},{"ruleId":"679","severity":1,"message":"836","line":17,"column":10,"nodeType":"681","messageId":"682","endLine":17,"endColumn":23},{"ruleId":"686","severity":1,"message":"806","line":27,"column":6,"nodeType":"688","endLine":27,"endColumn":8,"suggestions":"850"},{"ruleId":"679","severity":1,"message":"851","line":49,"column":10,"nodeType":"681","messageId":"682","endLine":49,"endColumn":29},{"ruleId":"736","severity":1,"message":"737","line":53,"column":27,"nodeType":"738","messageId":"739","endLine":53,"endColumn":29},{"ruleId":"736","severity":1,"message":"737","line":64,"column":33,"nodeType":"738","messageId":"739","endLine":64,"endColumn":35},{"ruleId":"690","severity":1,"message":"691","line":99,"column":30,"nodeType":"692","messageId":"693","endLine":99,"endColumn":32},{"ruleId":"690","severity":1,"message":"691","line":100,"column":30,"nodeType":"692","messageId":"693","endLine":100,"endColumn":32},{"ruleId":"736","severity":1,"message":"802","line":187,"column":37,"nodeType":"738","messageId":"739","endLine":187,"endColumn":39},{"ruleId":"690","severity":1,"message":"691","line":578,"column":33,"nodeType":"692","messageId":"693","endLine":578,"endColumn":35},{"ruleId":"679","severity":1,"message":"852","line":11,"column":25,"nodeType":"681","messageId":"682","endLine":11,"endColumn":41},{"ruleId":"686","severity":1,"message":"853","line":14,"column":6,"nodeType":"688","endLine":14,"endColumn":8,"suggestions":"854"},{"ruleId":"679","severity":1,"message":"800","line":15,"column":17,"nodeType":"681","messageId":"682","endLine":15,"endColumn":25},{"ruleId":"827","severity":1,"message":"855","line":43,"column":42,"nodeType":"829","messageId":"830","endLine":43,"endColumn":73,"fix":"856"},{"ruleId":"679","severity":1,"message":"857","line":17,"column":23,"nodeType":"681","messageId":"682","endLine":17,"endColumn":37},{"ruleId":"686","severity":1,"message":"853","line":20,"column":6,"nodeType":"688","endLine":20,"endColumn":8,"suggestions":"858"},{"ruleId":"679","severity":1,"message":"805","line":44,"column":9,"nodeType":"681","messageId":"682","endLine":44,"endColumn":20},{"ruleId":"810","severity":1,"message":"859","line":251,"column":52,"nodeType":"812","messageId":"813","endLine":251,"endColumn":74},{"ruleId":"810","severity":1,"message":"859","line":252,"column":52,"nodeType":"812","messageId":"813","endLine":252,"endColumn":74},{"ruleId":"679","severity":1,"message":"852","line":11,"column":25,"nodeType":"681","messageId":"682","endLine":11,"endColumn":41},{"ruleId":"679","severity":1,"message":"800","line":15,"column":17,"nodeType":"681","messageId":"682","endLine":15,"endColumn":25},{"ruleId":"679","severity":1,"message":"705","line":21,"column":7,"nodeType":"681","messageId":"682","endLine":21,"endColumn":25},{"ruleId":"679","severity":1,"message":"706","line":30,"column":7,"nodeType":"681","messageId":"682","endLine":30,"endColumn":23},{"ruleId":"827","severity":1,"message":"828","line":47,"column":29,"nodeType":"829","messageId":"830","endLine":47,"endColumn":47,"fix":"860"},{"ruleId":"679","severity":1,"message":"861","line":5,"column":8,"nodeType":"681","messageId":"682","endLine":5,"endColumn":32},{"ruleId":"679","severity":1,"message":"862","line":11,"column":21,"nodeType":"681","messageId":"682","endLine":11,"endColumn":33},{"ruleId":"679","severity":1,"message":"705","line":15,"column":7,"nodeType":"681","messageId":"682","endLine":15,"endColumn":25},{"ruleId":"679","severity":1,"message":"863","line":24,"column":7,"nodeType":"681","messageId":"682","endLine":24,"endColumn":17},{"ruleId":"679","severity":1,"message":"706","line":25,"column":7,"nodeType":"681","messageId":"682","endLine":25,"endColumn":23},{"ruleId":"827","severity":1,"message":"828","line":39,"column":29,"nodeType":"829","messageId":"830","endLine":39,"endColumn":47,"fix":"864"},{"ruleId":"679","severity":1,"message":"865","line":2,"column":10,"nodeType":"681","messageId":"682","endLine":2,"endColumn":25},{"ruleId":"679","severity":1,"message":"754","line":3,"column":8,"nodeType":"681","messageId":"682","endLine":3,"endColumn":23},{"ruleId":"679","severity":1,"message":"764","line":4,"column":8,"nodeType":"681","messageId":"682","endLine":4,"endColumn":26},{"ruleId":"679","severity":1,"message":"866","line":5,"column":10,"nodeType":"681","messageId":"682","endLine":5,"endColumn":17},{"ruleId":"679","severity":1,"message":"867","line":18,"column":12,"nodeType":"681","messageId":"682","endLine":18,"endColumn":26},{"ruleId":"736","severity":1,"message":"737","line":31,"column":33,"nodeType":"738","messageId":"739","endLine":31,"endColumn":35},{"ruleId":"686","severity":1,"message":"833","line":42,"column":8,"nodeType":"688","endLine":42,"endColumn":34,"suggestions":"868"},{"ruleId":"686","severity":1,"message":"869","line":59,"column":8,"nodeType":"688","endLine":59,"endColumn":10,"suggestions":"870"},{"ruleId":"679","severity":1,"message":"871","line":84,"column":11,"nodeType":"681","messageId":"682","endLine":84,"endColumn":20},{"ruleId":"679","severity":1,"message":"872","line":9,"column":26,"nodeType":"681","messageId":"682","endLine":9,"endColumn":41},{"ruleId":"686","severity":1,"message":"853","line":12,"column":8,"nodeType":"688","endLine":12,"endColumn":10,"suggestions":"873"},{"ruleId":"679","severity":1,"message":"680","line":1,"column":17,"nodeType":"681","messageId":"682","endLine":1,"endColumn":26},{"ruleId":"679","severity":1,"message":"874","line":4,"column":8,"nodeType":"681","messageId":"682","endLine":4,"endColumn":26},{"ruleId":"679","severity":1,"message":"696","line":6,"column":8,"nodeType":"681","messageId":"682","endLine":6,"endColumn":14},{"ruleId":"690","severity":1,"message":"691","line":47,"column":64,"nodeType":"692","messageId":"693","endLine":47,"endColumn":66},{"ruleId":"690","severity":1,"message":"691","line":48,"column":64,"nodeType":"692","messageId":"693","endLine":48,"endColumn":66},{"ruleId":"679","severity":1,"message":"875","line":120,"column":11,"nodeType":"681","messageId":"682","endLine":120,"endColumn":37},{"ruleId":"690","severity":1,"message":"691","line":168,"column":66,"nodeType":"692","messageId":"693","endLine":168,"endColumn":68},{"ruleId":"679","severity":1,"message":"794","line":12,"column":10,"nodeType":"681","messageId":"682","endLine":12,"endColumn":23},{"ruleId":"679","severity":1,"message":"719","line":12,"column":25,"nodeType":"681","messageId":"682","endLine":12,"endColumn":41},{"ruleId":"679","severity":1,"message":"876","line":13,"column":25,"nodeType":"681","messageId":"682","endLine":13,"endColumn":41},{"ruleId":"686","severity":1,"message":"853","line":16,"column":6,"nodeType":"688","endLine":16,"endColumn":8,"suggestions":"877"},{"ruleId":"679","severity":1,"message":"798","line":17,"column":10,"nodeType":"681","messageId":"682","endLine":17,"endColumn":22},{"ruleId":"736","severity":1,"message":"737","line":23,"column":22,"nodeType":"738","messageId":"739","endLine":23,"endColumn":24},{"ruleId":"679","severity":1,"message":"878","line":29,"column":10,"nodeType":"681","messageId":"682","endLine":29,"endColumn":30},{"ruleId":"679","severity":1,"message":"879","line":30,"column":10,"nodeType":"681","messageId":"682","endLine":30,"endColumn":31},{"ruleId":"679","severity":1,"message":"880","line":31,"column":9,"nodeType":"681","messageId":"682","endLine":31,"endColumn":27},{"ruleId":"679","severity":1,"message":"881","line":34,"column":9,"nodeType":"681","messageId":"682","endLine":34,"endColumn":28},{"ruleId":"686","severity":1,"message":"882","line":17,"column":5,"nodeType":"688","endLine":17,"endColumn":18,"suggestions":"883"},{"ruleId":"679","severity":1,"message":"884","line":9,"column":12,"nodeType":"681","messageId":"682","endLine":9,"endColumn":16},{"ruleId":"686","severity":1,"message":"885","line":13,"column":7,"nodeType":"688","endLine":13,"endColumn":9,"suggestions":"886"},{"ruleId":"679","severity":1,"message":"884","line":11,"column":12,"nodeType":"681","messageId":"682","endLine":11,"endColumn":16},{"ruleId":"679","severity":1,"message":"887","line":11,"column":18,"nodeType":"681","messageId":"682","endLine":11,"endColumn":25},{"ruleId":"679","severity":1,"message":"888","line":2,"column":8,"nodeType":"681","messageId":"682","endLine":2,"endColumn":17},{"ruleId":"679","severity":1,"message":"889","line":3,"column":8,"nodeType":"681","messageId":"682","endLine":3,"endColumn":20},{"ruleId":"679","severity":1,"message":"890","line":4,"column":8,"nodeType":"681","messageId":"682","endLine":4,"endColumn":13},{"ruleId":"679","severity":1,"message":"891","line":5,"column":8,"nodeType":"681","messageId":"682","endLine":5,"endColumn":13},{"ruleId":"690","severity":1,"message":"691","line":28,"column":18,"nodeType":"692","messageId":"693","endLine":28,"endColumn":20},{"ruleId":"690","severity":1,"message":"691","line":31,"column":27,"nodeType":"692","messageId":"693","endLine":31,"endColumn":29},{"ruleId":"679","severity":1,"message":"888","line":2,"column":8,"nodeType":"681","messageId":"682","endLine":2,"endColumn":17},{"ruleId":"679","severity":1,"message":"889","line":3,"column":8,"nodeType":"681","messageId":"682","endLine":3,"endColumn":20},{"ruleId":"679","severity":1,"message":"890","line":4,"column":8,"nodeType":"681","messageId":"682","endLine":4,"endColumn":13},{"ruleId":"679","severity":1,"message":"891","line":5,"column":8,"nodeType":"681","messageId":"682","endLine":5,"endColumn":13},{"ruleId":"679","severity":1,"message":"888","line":2,"column":8,"nodeType":"681","messageId":"682","endLine":2,"endColumn":17},{"ruleId":"679","severity":1,"message":"889","line":3,"column":8,"nodeType":"681","messageId":"682","endLine":3,"endColumn":20},{"ruleId":"679","severity":1,"message":"890","line":4,"column":8,"nodeType":"681","messageId":"682","endLine":4,"endColumn":13},{"ruleId":"679","severity":1,"message":"891","line":5,"column":8,"nodeType":"681","messageId":"682","endLine":5,"endColumn":13},{"ruleId":"679","severity":1,"message":"892","line":4,"column":8,"nodeType":"681","messageId":"682","endLine":4,"endColumn":18},{"ruleId":"679","severity":1,"message":"888","line":2,"column":8,"nodeType":"681","messageId":"682","endLine":2,"endColumn":17},{"ruleId":"679","severity":1,"message":"889","line":3,"column":8,"nodeType":"681","messageId":"682","endLine":3,"endColumn":20},{"ruleId":"679","severity":1,"message":"890","line":4,"column":8,"nodeType":"681","messageId":"682","endLine":4,"endColumn":13},{"ruleId":"679","severity":1,"message":"891","line":5,"column":8,"nodeType":"681","messageId":"682","endLine":5,"endColumn":13},{"ruleId":"679","severity":1,"message":"888","line":2,"column":8,"nodeType":"681","messageId":"682","endLine":2,"endColumn":17},{"ruleId":"679","severity":1,"message":"889","line":4,"column":8,"nodeType":"681","messageId":"682","endLine":4,"endColumn":20},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","'user' is assigned a value but never used.","'base64_decode' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logindataalter'. Either include it or remove the dependency array. You can also do a functional update 'setlogindataalter(l => ...)' if you only need 'logindataalter' in the 'setlogindataalter' call.","ArrayExpression",["893"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CustomizedSearchBar' is defined but never used.","'FullScreenModalOne' is defined but never used.","'Button' is defined but never used.","'changedmodalview' is assigned a value but never used.","'setChangedmodalview' is assigned a value but never used.","'rowdataonbooking' is assigned a value but never used.","'setSearchData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["894"],"React Hook useEffect has a missing dependency: 'displaycustomerfollowupevent'. Either include it or remove the dependency array.",["895"],"'finalCustomerRefNo' is assigned a value but never used.","'finalcurrentdate' is assigned a value but never used.",["896"],"'goEventClicked' is assigned a value but never used.",["897"],"'searchData' is assigned a value but never used.","'setModalview' is assigned a value but never used.","'onHandleChangeEvent' is assigned a value but never used.",["898"],"React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.",["899"],"Expected '!==' and instead saw '!='.","'setstatusselect' is assigned a value but never used.","'setDeliverystatus' is assigned a value but never used.","'setpaymentstatus' is assigned a value but never used.","'setProductstatus' is assigned a value but never used.","'setGstinstatus' is assigned a value but never used.",["900"],["901"],["902"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'AddCustomersForm' is defined but never used.","'AddFewCustomersForm' is defined but never used.","'FullScreenModal' is defined but never used.","'currentinvoiceno' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'displayBookedCustomeerDataEvent'. Either include it or remove the dependency array.",["903"],"'modalviewchange' is assigned a value but never used.","'customerrefno' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleKeypress' is assigned a value but never used.",["904"],"React Hook useEffect has a missing dependency: 'displayDealersDetailsDatawithstatusactiveevent'. Either include it or remove the dependency array.",["905"],["906"],"React Hook useEffect has missing dependencies: 'displayDeliveryReportsData', 'filterflag', and 'statusfilterdeliveryreport'. Either include them or remove the dependency array.",["907"],"React Hook useEffect has a missing dependency: 'paymentstatusfilteronly'. Either include it or remove the dependency array.",["908"],"React Hook useEffect has a missing dependency: 'deliverystatusfilteronly'. Either include it or remove the dependency array.",["909"],"'searchHandle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'displayDeliveryReportsData'. Either include it or remove the dependency array.",["910"],"'CustomizedPrint' is defined but never used.","React Hook useEffect has missing dependencies: 'displayCustomerFollowUpData', 'filterflag', and 'statusfiltercustomerdata'. Either include them or remove the dependency array.",["911"],"React Hook useEffect has a missing dependency: 'displayCustomerFollowUpData'. Either include it or remove the dependency array.",["912"],"'editRow' is assigned a value but never used.","'editFormData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filterflag' and 'productstatusfilter'. Either include them or remove the dependency array.",["913"],"'editevent' is assigned a value but never used.","'CustomizedDownload' is defined but never used.","'moment' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"914","text":"915"},{"range":"916","text":"915"},"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",{"range":"917","text":"915"},{"range":"918","text":"915"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'displayDealersDetailsData', 'filterflag', and 'gstinstatusfilterdealersdata'. Either include them or remove the dependency array.",["919"],"React Hook useEffect has a missing dependency: 'displayDealersDetailsData'. Either include it or remove the dependency array.",["920"],{"range":"921","text":"915"},{"range":"922","text":"915"},{"range":"923","text":"915"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'purchasesuccessmsg' is defined but never used.","'CustomizedComboboxForOwner' is defined but never used.","'CustomizedComboboxForOwnerDefault' is defined but never used.","'CustomizedComboboxForState' is defined but never used.","'CustomizedComboboxForStateDefault' is defined but never used.","'paymentstatus' is assigned a value but never used.","'bookeddate' is assigned a value but never used.","'productdata' is assigned a value but never used.","'selectedowner' is assigned a value but never used.","'comboboxdata' is assigned a value but never used.","'owner' is assigned a value but never used.","'setowner' is assigned a value but never used.","'selecteventforstate' is assigned a value but never used.","Array.prototype.find() expects a return value from arrow function.","'state' is assigned a value but never used.",["924"],"'selectevent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchalldatafromcust'. Either include it or remove the dependency array.",["925"],["926"],"'selecteventforowner' is assigned a value but never used.","no-self-assign","'data.booked_date' is assigned to itself.","MemberExpression","selfAssignment","'data.requested_delivery_date' is assigned to itself.",["927"],"'productname' is assigned a value but never used.","'statecode' is assigned a value but never used.",["928"],"'finalpreInvoiceNo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'api' and 'selectedowner'. Either include them or remove the dependency array.",["929"],["930"],"'nameError' is assigned a value but never used.","'addressError' is assigned a value but never used.","'phoneError' is assigned a value but never used.","'productError' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"commonError\"] found.","Property","unnecessarilyComputedProperty",{"range":"931","text":"932"},["933"],"React Hook useEffect has a missing dependency: 'toWords'. Either include it or remove the dependency array.",["934"],"'finalinvoicenumber' is assigned a value but never used.","'updaterowdata' is assigned a value but never used.","'setUpdaterowdata' is assigned a value but never used.","'rowdatadisplayedalter' is assigned a value but never used.","'seterrors' is assigned a value but never used.",["935"],["936"],"no-redeclare","'y1' is already defined.","redeclared","'y2' is already defined.","'setselectedstate' is assigned a value but never used.",["937"],{"range":"938","text":"932"},["939"],["940"],"'constantinvoicedata' is assigned a value but never used.","'setproductstatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'rowdata'. Either include it or remove the dependency array. If 'setUpdaterowdata' needs the current value of 'rowdata', you can also switch to useReducer instead of useState and read 'rowdata' in the reducer.",["941"],"Unnecessarily computed property [\"product_status\"] found.",{"range":"942","text":"943"},"'setfinalstatus' is assigned a value but never used.",["944"],"'rowdata.follow_up_call' is assigned to itself.",{"range":"945","text":"932"},"'CustomizedComboboxForAll' is defined but never used.","'setgststatus' is assigned a value but never used.","'updatedate' is assigned a value but never used.",{"range":"946","text":"932"},"'useReactToPrint' is defined but never used.","'CSVLink' is defined but never used.","'listofinvoices' is assigned a value but never used.",["947"],"React Hook useEffect has missing dependencies: 'custrefno' and 'invoiceno'. Either include them or remove the dependency array.",["948"],"'csvReport' is assigned a value but never used.","'setdealerstatus' is assigned a value but never used.",["949"],"'FullScreenModalTwo' is defined but never used.","'updatedownloadinvoiceevent' is assigned a value but never used.","'setdeliverstatus' is assigned a value but never used.",["950"],"'updatedPaymentstatus' is assigned a value but never used.","'updatedDeliverystatus' is assigned a value but never used.","'paymentstatusevent' is assigned a value but never used.","'deliverystatusevent' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'currentStatusEvent'. Either include it or remove the dependency array. If 'currentStatusEvent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["951"],"'date' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'resultDate'. Either include it or remove the dependency array.",["952"],"'setDate' is assigned a value but never used.","'TextField' is defined but never used.","'Autocomplete' is defined but never used.","'parse' is defined but never used.","'match' is defined but never used.","'InputLabel' is defined but never used.",{"desc":"953","fix":"954"},{"desc":"955","fix":"956"},{"desc":"957","fix":"958"},{"desc":"959","fix":"960"},{"desc":"955","fix":"961"},{"desc":"955","fix":"962"},{"desc":"963","fix":"964"},{"desc":"955","fix":"965"},{"desc":"955","fix":"966"},{"desc":"963","fix":"967"},{"desc":"968","fix":"969"},{"desc":"970","fix":"971"},{"desc":"972","fix":"973"},{"desc":"974","fix":"975"},{"desc":"976","fix":"977"},{"desc":"978","fix":"979"},{"desc":"980","fix":"981"},{"desc":"982","fix":"983"},{"desc":"984","fix":"985"},{"desc":"986","fix":"987"},{"desc":"988","fix":"989"},[1289,1289],"()",[2273,2273],[3118,3118],[3947,3947],{"desc":"990","fix":"991"},{"desc":"992","fix":"993"},[1212,1212],[2197,2197],[3041,3041],{"desc":"963","fix":"994"},{"desc":"995","fix":"996"},{"desc":"997","fix":"998"},{"desc":"995","fix":"999"},{"desc":"963","fix":"1000"},{"desc":"1001","fix":"1002"},{"desc":"1003","fix":"1004"},[4530,4545],"\"commonError\"",{"desc":"1005","fix":"1006"},{"desc":"1007","fix":"1008"},{"desc":"963","fix":"1009"},{"desc":"995","fix":"1010"},{"desc":"963","fix":"1011"},[4187,4202],{"desc":"1001","fix":"1012"},{"desc":"995","fix":"1013"},{"desc":"1014","fix":"1015"},[1604,1622],"\"product_status\"",{"desc":"1014","fix":"1016"},[2062,2077],[1577,1592],{"desc":"1017","fix":"1018"},{"desc":"1019","fix":"1020"},{"desc":"1014","fix":"1021"},{"desc":"1014","fix":"1022"},{"desc":"1023","fix":"1024"},{"desc":"1025","fix":"1026"},"Update the dependencies array to be: [logindata, logindataalter]",{"range":"1027","text":"1028"},"Update the dependencies array to be: [check, navigate]",{"range":"1029","text":"1030"},"Update the dependencies array to be: [displaycustomerfollowupevent]",{"range":"1031","text":"1032"},"Update the dependencies array to be: [displaycustomerfollowupevent, searchData]",{"range":"1033","text":"1034"},{"range":"1035","text":"1030"},{"range":"1036","text":"1030"},"Update the dependencies array to be: [api]",{"range":"1037","text":"1038"},{"range":"1039","text":"1030"},{"range":"1040","text":"1030"},{"range":"1041","text":"1038"},"Update the dependencies array to be: [displayBookedCustomeerDataEvent]",{"range":"1042","text":"1043"},"Update the dependencies array to be: [displayBookedCustomeerDataEvent, searchData]",{"range":"1044","text":"1045"},"Update the dependencies array to be: [displayDealersDetailsDatawithstatusactiveevent]",{"range":"1046","text":"1047"},"Update the dependencies array to be: [displayDealersDetailsDatawithstatusactiveevent, searchData]",{"range":"1048","text":"1049"},"Update the dependencies array to be: [deliverystatus, displayDeliveryReportsData, filterflag, paymentstatus, statusfilterdeliveryreport]",{"range":"1050","text":"1051"},"Update the dependencies array to be: [paymentstatus, paymentstatusfilteronly]",{"range":"1052","text":"1053"},"Update the dependencies array to be: [deliverystatus, deliverystatusfilteronly]",{"range":"1054","text":"1055"},"Update the dependencies array to be: [displayDeliveryReportsData, searchvalue]",{"range":"1056","text":"1057"},"Update the dependencies array to be: [currentstatus, displayCustomerFollowUpData, filterflag, statusfiltercustomerdata]",{"range":"1058","text":"1059"},"Update the dependencies array to be: [displayCustomerFollowUpData, searchvalue]",{"range":"1060","text":"1061"},"Update the dependencies array to be: [currentstatus, filterflag, productstatusfilter]",{"range":"1062","text":"1063"},"Update the dependencies array to be: [currentstatus, displayDealersDetailsData, filterflag, gstinstatusfilterdealersdata]",{"range":"1064","text":"1065"},"Update the dependencies array to be: [displayDealersDetailsData, searchvalue]",{"range":"1066","text":"1067"},{"range":"1068","text":"1038"},"Update the dependencies array to be: [fetchalldatafromcust]",{"range":"1069","text":"1070"},"Update the dependencies array to be: [api, updaterowdata]",{"range":"1071","text":"1072"},{"range":"1073","text":"1070"},{"range":"1074","text":"1038"},"Update the dependencies array to be: [api, selectedowner]",{"range":"1075","text":"1076"},"Update the dependencies array to be: [api, customerdata]",{"range":"1077","text":"1078"},"Update the dependencies array to be: [api, products]",{"range":"1079","text":"1080"},"Update the dependencies array to be: [invoiceFormData, toWords]",{"range":"1081","text":"1082"},{"range":"1083","text":"1038"},{"range":"1084","text":"1070"},{"range":"1085","text":"1038"},{"range":"1086","text":"1076"},{"range":"1087","text":"1070"},"Update the dependencies array to be: [rowdata]",{"range":"1088","text":"1089"},{"range":"1090","text":"1089"},"Update the dependencies array to be: [fetchdealersdatatoverify, toWords]",{"range":"1091","text":"1092"},"Update the dependencies array to be: [custrefno, invoiceno]",{"range":"1093","text":"1094"},{"range":"1095","text":"1089"},{"range":"1096","text":"1089"},"Update the dependencies array to be: [currentStatusEvent, finalstatus]",{"range":"1097","text":"1098"},"Update the dependencies array to be: [resultDate]",{"range":"1099","text":"1100"},[643,654],"[logindata, logindataalter]",[1587,1594],"[check, navigate]",[2355,2357],"[displaycustomerfollowupevent]",[7517,7529],"[displaycustomerfollowupevent, searchData]",[1945,1952],[1266,1273],[1416,1418],"[api]",[3243,3250],[865,872],[1097,1099],[1108,1110],"[displayBookedCustomeerDataEvent]",[3202,3214],"[displayBookedCustomeerDataEvent, searchData]",[1108,1110],"[displayDealersDetailsDatawithstatusactiveevent]",[1925,1937],"[displayDealersDetailsDatawithstatusactiveevent, searchData]",[1114,1145],"[deliverystatus, displayDeliveryReportsData, filterflag, paymentstatus, statusfilterdeliveryreport]",[1250,1265],"[paymentstatus, paymentstatusfilteronly]",[1371,1387],"[deliverystatus, deliverystatusfilteronly]",[4571,4584],"[displayDeliveryReportsData, searchvalue]",[1154,1169],"[currentstatus, displayCustomerFollowUpData, filterflag, statusfiltercustomerdata]",[2341,2354],"[displayCustomerFollowUpData, searchvalue]",[1644,1659],"[currentstatus, filterflag, productstatusfilter]",[1291,1306],"[currentstatus, displayDealersDetailsData, filterflag, gstinstatusfilterdealersdata]",[1720,1733],"[displayDealersDetailsData, searchvalue]",[3408,3410],[5018,5020],"[fetchalldatafromcust]",[5826,5841],"[api, updaterowdata]",[255,257],[2341,2343],[3250,3252],"[api, selectedowner]",[3636,3650],"[api, customerdata]",[8392,8402],"[api, products]",[1132,1149],"[invoiceFormData, toWords]",[1147,1149],[1212,1214],[2999,3001],[7214,7216],[1047,1049],[707,709],"[rowdata]",[764,766],[1791,1817],"[fetchdealersdatatoverify, toWords]",[2367,2369],"[custrefno, invoiceno]",[610,612],[793,795],[623,636],"[currentStatusEvent, finalstatus]",[331,333],"[resultDate]"]