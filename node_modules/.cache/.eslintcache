[{"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/index.js":"1","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/App.js":"2","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/reportWebVitals.js":"3","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/NavigationTiles/NavigationTiles.js":"4","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/ViewInvoicePage/ViewInvoicePage.js":"5","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/LoginPage/LoginPage.js":"6","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/AddCustomerPage/AddCustomerPage.js":"7","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/GenerateInvoice/GenerateInvoice.js":"8","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/GenerateReport/GenerateReport.js":"9","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/Header/Header.js":"10","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedLogOutIcon/CustomizedLogOutIcon.js":"11","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedLogo/CustomizedLogo.js":"12","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/Footer/Footer.js":"13","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/TextAndTextInput/TextAndTextInput.js":"14","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedText/CustomizedText.js":"15","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedTextInput/CustomizedTextInput.js":"16","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCard/CustomizedCard.js":"17","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedSearchBar/CustomizedSearchBar.js":"18","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedBtn/CustomizedBtn.js":"19","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/OpenModal/OpenModal.js":"20","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/InvoiceFormat/InvoiceFormat.js":"21","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedPrint/CustomizedPrint.js":"22","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddCustomersForm/AddCustomersForm.js":"23","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/organisms/SuccessMsg/SuccessMsg.js":"24","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDatepicker/SelectDate.js":"25","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCombobox/CustomizedComboboxAll.js":"26","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddFewCustomersForm/AddFewCustomersForm.js":"27","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCombobox/CustomizedComboboxForState.js":"28","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect.js":"29","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/organisms/CustomerInvoice/CustomerInvoice.js":"30","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/organisms/DealersInvoice/DealersInvoice.js":"31","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/CustomerInvoiceForm/CustomerInvoiceForm.js":"32","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersInvoiceForm/DealersInvoiceForm.js":"33","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedReadOnlyTextInput/CustomizedReadOnlyTextInput.js":"34","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate.js":"35","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDownload/CustomizedDownload.js":"36","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/TextAndSelect/TextAndSelect.js":"37","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedSelect/CustomizedSelect.js":"38","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayCustomerTable/DisplayCustomerTable.js":"39","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedEditIcon/CustomizedEditIcon.js":"40","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable.js":"41","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable.js":"42","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDeleteIcon/CustomizedDeleteIcon.js":"43","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable.js":"44","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/Download/DownloadCustomer.js":"45","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/Download/DownloadDelivery.js":"46","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDatepicker/CustomizedDatepicker.js":"47","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersInvoicesListForm/DealersInvoicesListForm.js":"48","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersDetailsForm/DealersDetailsForm.js":"49","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DeliveryDetailsForm/DeliveryDetailsForm.js":"50","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCombobox/CustomizedComboboxForAll.js":"51","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/CustomerFollowUpForm/CustomerFollowUpForm.js":"52","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/ProductsDetailsForm/ProductsDetailsForm.js":"53","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedComboboxwithdefaultvalue/CustomizedComboboxwithdefaultvalue.js":"54","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/EditDealersReportForm/EditDealersReportForm.js":"55","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddDealersForm/AddDealersForm.js":"56","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddProductForm/AddProductForm.js":"57","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/Header/HeaderWithLogout.js":"58","/Users/rashmishrees/Desktop/sdd/src/index.js":"59","/Users/rashmishrees/Desktop/sdd/src/App.js":"60","/Users/rashmishrees/Desktop/sdd/src/reportWebVitals.js":"61","/Users/rashmishrees/Desktop/sdd/src/pages/AddCustomerPage/AddCustomerPage.js":"62","/Users/rashmishrees/Desktop/sdd/src/pages/ViewInvoicePage/ViewInvoicePage.js":"63","/Users/rashmishrees/Desktop/sdd/src/pages/LoginPage/LoginPage.js":"64","/Users/rashmishrees/Desktop/sdd/src/pages/NavigationTiles/NavigationTiles.js":"65","/Users/rashmishrees/Desktop/sdd/src/pages/GenerateInvoice/GenerateInvoice.js":"66","/Users/rashmishrees/Desktop/sdd/src/pages/Footer/Footer.js":"67","/Users/rashmishrees/Desktop/sdd/src/pages/GenerateReport/GenerateReport.js":"68","/Users/rashmishrees/Desktop/sdd/src/pages/Header/HeaderWithLogout.js":"69","/Users/rashmishrees/Desktop/sdd/src/pages/Header/Header.js":"70","/Users/rashmishrees/Desktop/sdd/src/components/molecules/OpenModal/OpenModal.js":"71","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCard/CustomizedCard.js":"72","/Users/rashmishrees/Desktop/sdd/src/components/molecules/TextAndTextInput/TextAndTextInput.js":"73","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedBtn/CustomizedBtn.js":"74","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedSearchBar/CustomizedSearchBar.js":"75","/Users/rashmishrees/Desktop/sdd/src/components/organisms/DealersInvoice/DealersInvoice.js":"76","/Users/rashmishrees/Desktop/sdd/src/components/organisms/CustomerInvoice/CustomerInvoice.js":"77","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayCustomerTable/DisplayCustomerTable.js":"78","/Users/rashmishrees/Desktop/sdd/src/components/molecules/Download/DownloadCustomer.js":"79","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable.js":"80","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable.js":"81","/Users/rashmishrees/Desktop/sdd/src/components/molecules/Download/DownloadDelivery.js":"82","/Users/rashmishrees/Desktop/sdd/src/components/molecules/TextAndSelect/TextAndSelect.js":"83","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable.js":"84","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedLogOutIcon/CustomizedLogOutIcon.js":"85","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedLogo/CustomizedLogo.js":"86","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersDetailsForm/DealersDetailsForm.js":"87","/Users/rashmishrees/Desktop/sdd/src/components/molecules/InvoiceFormat/InvoiceFormat.js":"88","/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddFewCustomersForm/AddFewCustomersForm.js":"89","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersInvoiceForm/DealersInvoiceForm.js":"90","/Users/rashmishrees/Desktop/sdd/src/components/molecules/CustomerInvoiceForm/CustomerInvoiceForm.js":"91","/Users/rashmishrees/Desktop/sdd/src/components/molecules/ProductsDetailsForm/ProductsDetailsForm.js":"92","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DeliveryDetailsForm/DeliveryDetailsForm.js":"93","/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddProductForm/AddProductForm.js":"94","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate.js":"95","/Users/rashmishrees/Desktop/sdd/src/components/molecules/CustomerFollowUpForm/CustomerFollowUpForm.js":"96","/Users/rashmishrees/Desktop/sdd/src/components/molecules/EditDealersReportForm/EditDealersReportForm.js":"97","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersInvoicesListForm/DealersInvoicesListForm.js":"98","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedText/CustomizedText.js":"99","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedTextInput/CustomizedTextInput.js":"100","/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddCustomersForm/AddCustomersForm.js":"101","/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddDealersForm/AddDealersForm.js":"102","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedEditIcon/CustomizedEditIcon.js":"103","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedDownload/CustomizedDownload.js":"104","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedPrint/CustomizedPrint.js":"105","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedDatepicker/CustomizedDatepicker.js":"106","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedSelect/CustomizedSelect.js":"107","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedDatepicker/SelectDate.js":"108","/Users/rashmishrees/Desktop/sdd/src/components/organisms/SuccessMsg/SuccessMsg.js":"109","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect.js":"110","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForState.js":"111","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxAll.js":"112","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForAll.js":"113","/Users/rashmishrees/Desktop/sdd/src/components/molecules/FullScreenModal/FullScreenModal.js":"114","/Users/rashmishrees/Desktop/sdd/src/components/molecules/FullScreenModalOne/FullScreenModalOne.js":"115","/Users/rashmishrees/Desktop/sdd/src/components/molecules/FullScreenModalTwo/FullScreenModalTwo.js":"116"},{"size":322,"mtime":1656828163816,"results":"117","hashOfConfig":"118"},{"size":1935,"mtime":1656394595739,"results":"119","hashOfConfig":"118"},{"size":362,"mtime":1655205578447,"results":"120","hashOfConfig":"118"},{"size":1969,"mtime":1656496539715,"results":"121","hashOfConfig":"118"},{"size":5314,"mtime":1656930242665,"results":"122","hashOfConfig":"118"},{"size":1547,"mtime":1656495174476,"results":"123","hashOfConfig":"118"},{"size":13642,"mtime":1658489977400,"results":"124","hashOfConfig":"118"},{"size":3120,"mtime":1656930523475,"results":"125","hashOfConfig":"118"},{"size":6653,"mtime":1658147625339,"results":"126","hashOfConfig":"118"},{"size":644,"mtime":1656394852130,"results":"127","hashOfConfig":"118"},{"size":340,"mtime":1655215070802,"results":"128","hashOfConfig":"118"},{"size":311,"mtime":1656394355955,"results":"129","hashOfConfig":"118"},{"size":828,"mtime":1655216101363,"results":"130","hashOfConfig":"118"},{"size":649,"mtime":1655216828234,"results":"131","hashOfConfig":"118"},{"size":276,"mtime":1655216910136,"results":"132","hashOfConfig":"118"},{"size":675,"mtime":1656395675632,"results":"133","hashOfConfig":"118"},{"size":358,"mtime":1655277388434,"results":"134","hashOfConfig":"118"},{"size":741,"mtime":1656395635772,"results":"135","hashOfConfig":"118"},{"size":457,"mtime":1656395694732,"results":"136","hashOfConfig":"118"},{"size":7514,"mtime":1658489854940,"results":"137","hashOfConfig":"118"},{"size":10167,"mtime":1658062163478,"results":"138","hashOfConfig":"118"},{"size":243,"mtime":1647601435902,"results":"139","hashOfConfig":"118"},{"size":25529,"mtime":1658489676243,"results":"140","hashOfConfig":"118"},{"size":1134,"mtime":1654409279732,"results":"141","hashOfConfig":"118"},{"size":1080,"mtime":1658151251176,"results":"142","hashOfConfig":"118"},{"size":1013,"mtime":1658160365352,"results":"143","hashOfConfig":"118"},{"size":11026,"mtime":1658488826034,"results":"144","hashOfConfig":"118"},{"size":2043,"mtime":1658234790527,"results":"145","hashOfConfig":"118"},{"size":1893,"mtime":1658234108705,"results":"146","hashOfConfig":"118"},{"size":8001,"mtime":1658067234698,"results":"147","hashOfConfig":"118"},{"size":6392,"mtime":1657713528950,"results":"148","hashOfConfig":"118"},{"size":21105,"mtime":1658155756694,"results":"149","hashOfConfig":"118"},{"size":10867,"mtime":1658155809037,"results":"150","hashOfConfig":"118"},{"size":741,"mtime":1651760457266,"results":"151","hashOfConfig":"152"},{"size":12157,"mtime":1658062223990,"results":"153","hashOfConfig":"118"},{"size":328,"mtime":1656159237794,"results":"154","hashOfConfig":"118"},{"size":659,"mtime":1656160971533,"results":"155","hashOfConfig":"118"},{"size":1451,"mtime":1656160952498,"results":"156","hashOfConfig":"118"},{"size":6918,"mtime":1658151527848,"results":"157","hashOfConfig":"118"},{"size":304,"mtime":1656161064737,"results":"158","hashOfConfig":"118"},{"size":10202,"mtime":1658139662025,"results":"159","hashOfConfig":"118"},{"size":7440,"mtime":1658151694649,"results":"160","hashOfConfig":"118"},{"size":396,"mtime":1656161178350,"results":"161","hashOfConfig":"118"},{"size":5892,"mtime":1656730801653,"results":"162","hashOfConfig":"118"},{"size":4686,"mtime":1656848944115,"results":"163","hashOfConfig":"118"},{"size":4644,"mtime":1656848610042,"results":"164","hashOfConfig":"118"},{"size":607,"mtime":1647604826716,"results":"165","hashOfConfig":"118"},{"size":7316,"mtime":1657717589774,"results":"166","hashOfConfig":"118"},{"size":18124,"mtime":1658488829673,"results":"167","hashOfConfig":"118"},{"size":14408,"mtime":1658146528648,"results":"168","hashOfConfig":"118"},{"size":1275,"mtime":1656828209928,"results":"169","hashOfConfig":"118"},{"size":7253,"mtime":1658160526004,"results":"170","hashOfConfig":"118"},{"size":5909,"mtime":1658160948476,"results":"171","hashOfConfig":"118"},{"size":1133,"mtime":1652341941653,"results":"172","hashOfConfig":"152"},{"size":6054,"mtime":1658161531470,"results":"173","hashOfConfig":"118"},{"size":4630,"mtime":1658161803193,"results":"174","hashOfConfig":"118"},{"size":5798,"mtime":1658161723742,"results":"175","hashOfConfig":"118"},{"size":866,"mtime":1656398545731,"results":"176","hashOfConfig":"118"},{"size":322,"mtime":1656828163816,"results":"177","hashOfConfig":"178"},{"size":1938,"mtime":1659344186033,"results":"179","hashOfConfig":"178"},{"size":362,"mtime":1655205578447,"results":"180","hashOfConfig":"178"},{"size":15662,"mtime":1661073269000,"results":"181","hashOfConfig":"178"},{"size":8423,"mtime":1661064418989,"results":"182","hashOfConfig":"178"},{"size":1633,"mtime":1660731702298,"results":"183","hashOfConfig":"178"},{"size":1969,"mtime":1656496539715,"results":"184","hashOfConfig":"178"},{"size":3120,"mtime":1656930523475,"results":"185","hashOfConfig":"178"},{"size":828,"mtime":1655216101363,"results":"186","hashOfConfig":"178"},{"size":6674,"mtime":1659773860429,"results":"187","hashOfConfig":"178"},{"size":866,"mtime":1656398545731,"results":"188","hashOfConfig":"178"},{"size":644,"mtime":1656394852130,"results":"189","hashOfConfig":"178"},{"size":7676,"mtime":1661067642596,"results":"190","hashOfConfig":"178"},{"size":358,"mtime":1655277388434,"results":"191","hashOfConfig":"178"},{"size":727,"mtime":1660365829565,"results":"192","hashOfConfig":"178"},{"size":457,"mtime":1656395694732,"results":"193","hashOfConfig":"178"},{"size":797,"mtime":1660962925669,"results":"194","hashOfConfig":"178"},{"size":7330,"mtime":1660978713574,"results":"195","hashOfConfig":"178"},{"size":10374,"mtime":1661072331144,"results":"196","hashOfConfig":"178"},{"size":7629,"mtime":1660976369485,"results":"197","hashOfConfig":"178"},{"size":4698,"mtime":1659344186172,"results":"198","hashOfConfig":"178"},{"size":11353,"mtime":1660978769271,"results":"199","hashOfConfig":"178"},{"size":11252,"mtime":1660978815783,"results":"200","hashOfConfig":"178"},{"size":4656,"mtime":1659344186172,"results":"201","hashOfConfig":"178"},{"size":659,"mtime":1656160971533,"results":"202","hashOfConfig":"178"},{"size":9658,"mtime":1660976587887,"results":"203","hashOfConfig":"178"},{"size":340,"mtime":1655215070802,"results":"204","hashOfConfig":"178"},{"size":311,"mtime":1656394355955,"results":"205","hashOfConfig":"178"},{"size":19746,"mtime":1661075655188,"results":"206","hashOfConfig":"178"},{"size":9998,"mtime":1661074615625,"results":"207","hashOfConfig":"178"},{"size":12209,"mtime":1661312565242,"results":"208","hashOfConfig":"178"},{"size":10810,"mtime":1660980221386,"results":"209","hashOfConfig":"178"},{"size":23479,"mtime":1661073783542,"results":"210","hashOfConfig":"178"},{"size":6157,"mtime":1660980320964,"results":"211","hashOfConfig":"178"},{"size":14804,"mtime":1660990409810,"results":"212","hashOfConfig":"178"},{"size":5801,"mtime":1659344186171,"results":"213","hashOfConfig":"178"},{"size":13443,"mtime":1660151422667,"results":"214","hashOfConfig":"178"},{"size":7609,"mtime":1660980078881,"results":"215","hashOfConfig":"178"},{"size":6122,"mtime":1660980290451,"results":"216","hashOfConfig":"178"},{"size":10690,"mtime":1661075454155,"results":"217","hashOfConfig":"178"},{"size":276,"mtime":1655216910136,"results":"218","hashOfConfig":"178"},{"size":763,"mtime":1660962913872,"results":"219","hashOfConfig":"178"},{"size":28312,"mtime":1661067747682,"results":"220","hashOfConfig":"178"},{"size":4682,"mtime":1660980026486,"results":"221","hashOfConfig":"178"},{"size":304,"mtime":1656161064737,"results":"222","hashOfConfig":"178"},{"size":328,"mtime":1656159237794,"results":"223","hashOfConfig":"178"},{"size":243,"mtime":1647601435902,"results":"224","hashOfConfig":"178"},{"size":607,"mtime":1647604826716,"results":"225","hashOfConfig":"178"},{"size":1451,"mtime":1656160952498,"results":"226","hashOfConfig":"178"},{"size":1080,"mtime":1658151251176,"results":"227","hashOfConfig":"178"},{"size":1131,"mtime":1661066384418,"results":"228","hashOfConfig":"178"},{"size":1893,"mtime":1658234108705,"results":"229","hashOfConfig":"178"},{"size":2043,"mtime":1658234790527,"results":"230","hashOfConfig":"178"},{"size":1013,"mtime":1658160365352,"results":"231","hashOfConfig":"178"},{"size":1275,"mtime":1656828209928,"results":"232","hashOfConfig":"178"},{"size":1928,"mtime":1660542576481,"results":"233","hashOfConfig":"178"},{"size":1296,"mtime":1660145756508,"results":"234","hashOfConfig":"178"},{"size":1807,"mtime":1660542576480,"results":"235","hashOfConfig":"178"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"le1inw",{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322"},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"327"},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335"},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343"},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"348"},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352"},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},"5eio7m",{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"327"},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374"},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378"},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385"},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","suppressedMessages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396"},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":3,"source":"400"},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":3,"source":"404"},{"filePath":"405","messages":"406","suppressedMessages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408"},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"348"},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416"},{"filePath":"417","messages":"418","suppressedMessages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"327"},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"327"},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"431"},{"filePath":"432","messages":"433","suppressedMessages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"435","messages":"436","suppressedMessages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438"},{"filePath":"439","messages":"440","suppressedMessages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442"},{"filePath":"443","messages":"444","suppressedMessages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446"},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","suppressedMessages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"208a7n",{"filePath":"453","messages":"454","suppressedMessages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456"},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","suppressedMessages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463"},{"filePath":"464","messages":"465","suppressedMessages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467"},{"filePath":"468","messages":"469","suppressedMessages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471"},{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"478","messages":"479","suppressedMessages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","suppressedMessages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484"},{"filePath":"485","messages":"486","suppressedMessages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","suppressedMessages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","suppressedMessages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494"},{"filePath":"495","messages":"496","suppressedMessages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","suppressedMessages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","suppressedMessages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","suppressedMessages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"507","messages":"508","suppressedMessages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510"},{"filePath":"511","messages":"512","suppressedMessages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514"},{"filePath":"515","messages":"516","suppressedMessages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518"},{"filePath":"519","messages":"520","suppressedMessages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":3,"source":"522"},{"filePath":"523","messages":"524","suppressedMessages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526"},{"filePath":"527","messages":"528","suppressedMessages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530"},{"filePath":"531","messages":"532","suppressedMessages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":3,"source":"534"},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","suppressedMessages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541"},{"filePath":"542","messages":"543","suppressedMessages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","suppressedMessages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"548","messages":"549","suppressedMessages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551"},{"filePath":"552","messages":"553","suppressedMessages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555"},{"filePath":"556","messages":"557","suppressedMessages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"559","messages":"560","suppressedMessages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562"},{"filePath":"563","messages":"564","suppressedMessages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566"},{"filePath":"567","messages":"568","suppressedMessages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"570"},{"filePath":"571","messages":"572","suppressedMessages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574"},{"filePath":"575","messages":"576","suppressedMessages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578"},{"filePath":"579","messages":"580","suppressedMessages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582"},{"filePath":"583","messages":"584","suppressedMessages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586"},{"filePath":"587","messages":"588","suppressedMessages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590"},{"filePath":"591","messages":"592","suppressedMessages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594"},{"filePath":"595","messages":"596","suppressedMessages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","suppressedMessages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"601","messages":"602","suppressedMessages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604"},{"filePath":"605","messages":"606","suppressedMessages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608"},{"filePath":"609","messages":"610","suppressedMessages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","suppressedMessages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","suppressedMessages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","suppressedMessages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408"},{"filePath":"621","messages":"622","suppressedMessages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374"},{"filePath":"624","messages":"625","suppressedMessages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322"},{"filePath":"627","messages":"628","suppressedMessages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"630","messages":"631","suppressedMessages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"633","messages":"634","suppressedMessages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335"},{"filePath":"636","messages":"637","suppressedMessages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"639","messages":"640","suppressedMessages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"642","messages":"643","suppressedMessages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645"},{"filePath":"646","messages":"647","suppressedMessages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"649","messages":"650","suppressedMessages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/index.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/App.js",["652"],[],"import LoginPage from './pages/LoginPage/LoginPage';\nimport NavigationTiles from './pages/NavigationTiles/NavigationTiles';\nimport ViewInvoicePage from './pages/ViewInvoicePage/ViewInvoicePage';\nimport AddCustomerPage from './pages/AddCustomerPage/AddCustomerPage';\nimport GenerateInvoice from './pages/GenerateInvoice/GenerateInvoice';\nimport GenerateReport from './pages/GenerateReport/GenerateReport';\nimport Footer from './pages/Footer/Footer';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from 'react-router-dom';\nimport axios from 'axios';\nimport { useState } from 'react';\nconst api = axios.create({\n  baseURL: `http://localhost:3000/`\n})\nfunction App() {\n  const [logoutbtn, setlogoutbtn] = useState(false);\n  const logoutbuttonevent = (e) => {\n    setlogoutbtn(e);\n  }\n  return (\n    <Router>\n        <Routes>\n          <Route path=\"/\" element={<LoginPage \n                                      api={api} \n                                      logoutbuttonevent={logoutbuttonevent}\n                                    />\n                                  }\n          />\n          <Route path=\"/main\" element={<NavigationTiles/>}/>\n          <Route path=\"/viewinvoice\" element={<ViewInvoicePage\n                                        api={api}\n                                      />}\n          />\n          <Route path=\"/addcustomerpage\" element={<AddCustomerPage\n                                          api={api}\n                                        />}\n          />\n          <Route path=\"/generateinvoice\" element={<GenerateInvoice\n                                          api={api}\n                                        />}/>\n          <Route path=\"/generatereport\" element={<GenerateReport\n                                          api={api}\n                                        />}/>\n        </Routes>\n        <div>\n          <Footer />\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/reportWebVitals.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/NavigationTiles/NavigationTiles.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/ViewInvoicePage/ViewInvoicePage.js",["653"],[],"import React, { useState } from \"react\";\nimport CustomizedSearchBar from '../../components/atoms/CustomizedSearchBar/CustomizedSearchBar';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport OpenModal from '../../components/molecules/OpenModal/OpenModal';\nimport { useNavigate } from 'react-router-dom';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport CustomizedBtn from \"../../components/atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport '../../style/style.css';\n\nconst ViewInvoicePage = ({\n    api\n}) => {\n    const [invoiceData, setInvoiceData] = useState([]);\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [searchData, setSearchData] = useState('');\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    let navigate = useNavigate();\n    const onHandleChangeEvent = (event) => {\n        setSearchData(event.target.value);\n    }\n    const goEventClicked = () => {\n        api.post('/delivery/getInvoices', {\n            params: {\n                searchData\n            }\n        }\n        )\n        .then((res) => {\n            setInvoiceData(res.data);\n        })\n    }\n    const openinvoiceevent = (invoiceNo) => {\n        api.post('/delivery/getDeliveryReportData', {\n            params: {\n                invoiceNo\n            }\n        }\n        )\n            .then((res) => {\n                setInvoiceFormData(res.data);\n            })\n    }\n    return (\n        <div>\n            <div>\n                <HeaderWithLogout />\n            </div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                invoiceFormData={invoiceFormData}\n            />\n            <div className=\"viewInvoicePageContainer\">\n                <div className=\"pageheading\">\n                    View Your Invoices\n                </div>\n                <CustomizedSearchBar\n                    onHandleChangeEvent={onHandleChangeEvent}\n                    type=\"search\"\n                    goEventClicked={goEventClicked}\n                    labelname=\"phone number / Invoice Number\"\n                    Btnname=\"search\"\n                />\n                <div className=\"displayContainer\">\n                    <div className=\"backarrow\">\n                        <p\n                            onClick={() => {\n                                navigate(\"/main\");\n                            }}\n                        ><ArrowBackIcon /></p>\n                    </div>\n                    <div className=\"table-responsive\">\n                        {\n                            invoiceData.length != 0 &&\n                            <table className=\"table table-striped table-bordered\">\n                                <thead className=\"theadalter\">\n                                    <tr>\n                                        <th>Invoice date</th>\n                                        <th>Invoice no</th>\n                                        <th>Customer name</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        invoiceData.map((data, i) => (\n                                            <tr key={i}>\n                                                <td>\n                                                    {\n                                                        data.delivery_date != null ?\n                                                        moment(data.delivery_date).format('YYYY-MM-DD'):\n                                                        data.delivery_date\n                                                    }\n                                                </td>\n                                                <td>{data.invoice_no}</td>\n                                                <td>{data.customer_name}</td>\n                                                <td>\n                                                <CustomizedBtn \n                                                    BtnName=\"View Invoice\"\n                                                    onClick={()=>{\n                                                        openinvoiceevent(data.invoice_no);\n                                                        setModalview(\"invoiceformat\");\n                                                        openevent(true);\n                                                    }}\n                                                />\n                                                </td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                        }\n                    </div>\n                    {\n                        invoiceData.length === 0 &&\n                        <p> no data found! </p>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default ViewInvoicePage;",[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/LoginPage/LoginPage.js",["654"],[],"import React, { useState } from \"react\";\nimport TextAndTextInput from \"../../components/molecules/TextAndTextInput/TextAndTextInput\";\nimport { useNavigate } from 'react-router-dom';\nimport Header from \"../Header/Header\";\nimport '../../style/style.css';\n\nconst LoginPage = ({ \n  api,\n  logoutbuttonevent\n }) => {\n  let navigate = useNavigate();\n  const [logindata, setlogindata] = useState();\n  const onChangeEvent = (event) => {\n    setlogindata({ ...logindata, [event.target.name]: event.target.value });\n  }\n  const onSubmitLogin = () => {\n    api.post('/users/login', {\n      params: {\n        logindata\n      }\n    }\n    )\n      .then((res) => {\n        if (res) {\n          logoutbuttonevent(true);\n          navigate('/main');\n        }\n      })\n  }\n  return (\n    <div>\n      <div>\n        <Header />\n      </div>\n      <div className=\"loginPageContainer\">\n        <div className=\"loginPageContainerChild\">\n          <div className=\"usernameandpass\">\n            <TextAndTextInput\n              onChangeEvent={onChangeEvent}\n              type=\"username\"\n              textname=\"USER NAME:-\" />\n            <TextAndTextInput\n              onChangeEvent={onChangeEvent}\n              type=\"password\"\n              textname=\"PASSWORD:-\" />\n          </div>\n          <div className=\"loginPageBtnContainer\">\n            <a\n              onClick={() => {\n                onSubmitLogin();\n              }}\n            >\n              Login\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default LoginPage;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/AddCustomerPage/AddCustomerPage.js",["655","656","657","658","659","660","661","662","663"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedSearchBar from \"../../components/atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport moment from 'moment';\nimport OpenModal from \"../../components/molecules/OpenModal/OpenModal\";\nimport '../../style/style.css';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport CustomizedBtn from \"../../components/atoms/CustomizedBtn/CustomizedBtn\";\nimport {useNavigate} from 'react-router-dom';\nconst AddCustomerPage = ({\n    api\n}) => {\n    let navigate = useNavigate();\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [customertable, setCustomertable] = useState([]);\n    const [currentCustomerReferenceNo, setCurrentCustomerReferenceNo] = useState('');\n    const [rowdataonbooking, setrowdataonbooking] = useState();\n    const [temprowdataonbooking, settemprowdataonbooking] = useState();\n    const [purchasestatus, setpurchasestatus] = useState();\n    const [searchData, setSearchData] = useState('');\n    const [modalview, setModalview] = useState('');\n    const [purchasemsg, setpurchasemsg] = useState();\n    const setpurchasemsgevent = (e) =>{\n      setpurchasemsg(e)\n    }\n    const fetchpurchasestatusevent = (e) => {\n      api.post('/delivery/getpurchasestatus', {\n        params: {\n          e\n        }\n      })\n      .then((res) => {\n        setpurchasestatus(res.data);\n      })\n    }\n    const currentCustomerRefNo = (e) => {\n        setCurrentCustomerReferenceNo(e)\n    }\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(()=>{\n        if(temprowdataonbooking){\n          api.put('/jointables/updaterateofdeliverytableonbook', {\n            params: {\n              data:temprowdataonbooking\n            }\n          })\n          .then((res) => {\n          })\n          api.post('/delivery/getstatecodefromdeliverytableonbook', {\n            params: {\n              data:temprowdataonbooking\n            }\n          })\n          .then((res) => {\n            const data = res.data;\n            for (var i =0; i< data.length; i++){\n              if (data[i].state_code === 29){\n                api.put('/jointables/updatekarnatakagstratesdeliverytableonbook', {\n                  params: {\n                    data:temprowdataonbooking\n                  }\n                })\n                api.put('/jointables/updatefinalamountdeliverytableonbook', {\n                  params: {\n                    data:temprowdataonbooking\n                  }\n                })\n                api.put('/jointables/updatebalanceamountdeliverytableonbook',{\n                  params:{\n                    data:temprowdataonbooking\n                  }\n                })\n                api.put('/jointables/updatepaymentstatusdeliverytableonbook',{\n                  params:{\n                    data:temprowdataonbooking\n                  }\n                })\n            }\n            else {\n              api.put('/jointables/updateotherstatesgstratesdeliverytableonbook', {\n                params: {\n                  data:temprowdataonbooking\n                }\n              })\n              api.put('/jointables/updatefinalamountdeliverytableonbook', {\n                params: {\n                  data:temprowdataonbooking\n                }\n              })\n              api.put('/jointables/updatebalanceamountdeliverytableonbook',{\n                params:{\n                  data:temprowdataonbooking\n                }\n              })\n              api.put('/jointables/updatepaymentstatusdeliverytableonbook',{\n                params:{\n                  data:temprowdataonbooking\n                }\n              })\n          }\n            }\n          })\n        }\n    },[temprowdataonbooking])\n    useEffect(() => {\n        displaycustomerfollowupevent();\n    }, [])\n    const fetchalldatafromcust = (currentCustomerReferenceNo) => {\n      api.post('/delivery/getalldataofcustomer', {\n        params: {\n          currentCustomerReferenceNo\n        }\n      })\n      .then((res) => {\n        settemprowdataonbooking(res.data);\n      })\n    }\n    const fetchupdateddatafromcust = (currentCustomerReferenceNo) => {\n      api.post('/delivery/getalldataofcustomer', {\n        params: {\n          currentCustomerReferenceNo\n        }\n      })\n      .then((res) => {\n        setrowdataonbooking(res.data);\n      })\n    }\n    const displaycustomerfollowupevent = () => {\n      api.get('/customer/displayCustomerFollowUpData', {})\n        .then((res) => {\n          const data = res.data;\n          const tempdata = [...new Set(data.map((e) => e.customer_reference_no))];\n          const tabledata = tempdata.map((temp) => {\n              let filterByTempData = data.filter(dataObject => dataObject.customer_reference_no === temp)\n              var fixedstrings = filterByTempData[0];\n              let displayString = filterByTempData.map((x) => {\n                  return x.product + '-' + x.quantity + '(Nos)'\n              })\n              return {\n                  ...fixedstrings,\n                  displayDetails: displayString\n              }\n          })\n          setCustomertable(tabledata);\n        })\n    }\n    const modalviewchange = () => {\n        setChangedmodalview(\"addcustomerform\");\n    }\n    let finalCustomerRefNo = '';\n    const generateCustomerReferenceNo = () => {\n        let s1 = \"CUST2022\";\n        let min = 0;\n        let max = 1000;\n        let random = Math.floor(Math.random() * (max - min + 1)) + min;\n        finalCustomerRefNo = s1 + random;\n    }\n    generateCustomerReferenceNo();\n    let finalcurrentdate = \"\";\n    const currentDate = () => {\n        let date = new Date();\n        finalcurrentdate = moment(date).format('YYYY-MM-DD');\n    }\n    currentDate();\n    useEffect(() => {\n        if (searchData === \"\") {\n            displaycustomerfollowupevent();\n        }\n    }, [searchData])\n    const goEventClicked = () => {\n      api.post('/customer/getCustomerFollowUpData', {\n        params: {\n          searchData\n        }\n      }\n      )\n        .then((res) => {\n          const custdata = res.data;\n          const tempdata = [...new Set(custdata.map((e) => e.customer_reference_no))];\n          const tabledata = tempdata.map((temp) => {\n              let filterByTempData = custdata.filter(dataObject => dataObject.customer_reference_no === temp)\n              var fixedstrings = filterByTempData[0];\n              let displayString = filterByTempData.map((x) => {\n                  return x.product + '-' + x.quantity + '(Nos)'\n              })\n              return {\n                  ...fixedstrings,\n                  displayDetails: displayString\n              }\n          })\n          setCustomertable(tabledata)\n        })\n    }\n    const onHandleChangeEvent = (event) => {\n        setSearchData(event.target.value);\n    }\n    return (\n      <div>\n        <div>\n          <HeaderWithLogout/>\n        </div>\n        <div className=\"addcustpagecontainer\">\n          <div className=\"addcustpagesubcontainer\">\n            <div className=\"pageheading\">\n                Manage Customer Data\n            </div>\n            <CustomizedSearchBar\n                onHandleChangeEvent={onHandleChangeEvent}\n                goEventClicked={goEventClicked}\n                labelname=\"phone number/ customer name\"\n                Btnname=\"search\"\n            />\n            <div className=\"modalandback\">\n              <CustomizedBtn \n              BtnName=\"Add Customer\"\n              onClick={()=>{\n                setModalview(\"addcustomerform\");\n                openevent(true);\n              }}\n              />\n                  <OpenModal\n                    api={api}\n                    modalview={modalview}\n                    displaycustomerfollowupevent={displaycustomerfollowupevent}\n                    open={open}\n                    openevent={openevent}\n                    purchasestatus={purchasestatus}\n                    currentCustomerReferenceNo={currentCustomerReferenceNo}\n                    setpurchasemsgevent={setpurchasemsgevent}\n                />\n                  <p onClick={() => { navigate('/main') }}><ArrowBackIcon /></p>\n            </div>\n            <div className='table-responsive tableContainer'>\n              <p>\n                  {purchasemsg\n                      ? <p>{purchasemsg}</p>\n                      : <></>\n                  }\n              </p>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Enquiry Date</th>\n                            <th>Customer Name</th>\n                            <th>Customer Address</th>\n                            <th>Phone Number</th>\n                            <th>Phone Number Alter one</th>\n                            <th>Phone Number Alter two</th>\n                            <th>Enquired Product And Details</th>\n                            <th>Comments</th>\n                            <th>Follow Up Call </th>\n                            <th>Final Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            customertable && customertable.length\n                                ? customertable.map((data, i) => (\n                                    <tr key={i}>\n                                        <td>{data.customer_reference_no}</td>\n                                        <td>\n                                            {\n                                                data.booked_date != null ?\n                                                moment(data.booked_date).format('YYYY-MM-DD'):\n                                                data.booked_date\n                                            }\n                                        </td>\n                                        <td>{data.customer_name}</td>\n                                        <td>{data.customer_address}</td>\n                                        <td>{data.phone_number}</td>\n                                        <td>{data.phone_number_alter_one}</td>\n                                        <td>{data.phone_number_alter_two}</td>\n                                        <td>\n                                            <ul>\n                                                {\n                                                    data.displayDetails\n                                                        ?\n                                                        data.displayDetails.map((d) => (\n                                                            <li>{d}</li>\n                                                        ))\n                                                        : <></>\n                                                }\n                                            </ul>\n                                        </td>\n                                        <td>{data.comments}</td>\n                                        <td>{\n                                            data.follow_up_call != null ?\n                                            moment(data.follow_up_call).format('YYYY-MM-DD'):\n                                                data.follow_up_call\n                                        }\n                                        </td>\n                                        <td>{data.final_status}</td>\n                                        <td>\n                                          {data.final_status == \"Booked\"\n                                          ? <CustomizedBtn \n                                          BtnName=\"View\"\n                                          onClick={()=>{\n                                            setModalview(\"customerdetailsform\");\n                                            currentCustomerRefNo(data.customer_reference_no);\n                                            fetchpurchasestatusevent(data.customer_reference_no);\n                                            openevent(true);\n                                          }}\n                                          />\n                                          :\n                                          <CustomizedBtn \n                                            BtnName=\"Book Order\"\n                                            onClick={()=>{\n                                              currentCustomerRefNo(data.customer_reference_no);\n                                              fetchalldatafromcust(data.customer_reference_no);\n                                              fetchupdateddatafromcust(data.customer_reference_no);\n                                              setModalview(\"customerdetailsform\");\n                                              openevent(true);\n                                            }}\n                                            />\n                                          }\n                                        </td>\n                                    </tr>\n                                ))\n                                : <tr>\n                                    <td colSpan={12}>No Record!</td>\n                                  </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n            </div>\n        </div>\n        </div>\n    );\n}\nexport default AddCustomerPage;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/GenerateInvoice/GenerateInvoice.js",["664"],[],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport CustomerInvoice from '../../components/organisms/CustomerInvoice/CustomerInvoice';\nimport DealersInvoice from '../../components/organisms/DealersInvoice/DealersInvoice';\nimport { useNavigate } from 'react-router-dom';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport '../../style/style.css';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  let navigate = useNavigate();\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\nconst GenerateInvoice = ({\n  modalview,\n  api\n}) => {\n  const [value, setValue] = React.useState(0);\n  const [searchData, setSearchData] = useState('');\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const style = {\n    color: 'black'\n  }\n  const onHandleChangeEvent = (event) => {\n    setSearchData(event.target.value);\n  }\n  let navigate = useNavigate();\n  return (\n    <div>\n      <div>\n        <HeaderWithLogout />\n      </div>\n      <div className=\"reportcontainer\">\n        <div className=\"pageheading\">\n          Generate Invoices\n        </div>\n        <div className=\"backarrow generateinvoicebackarrow\">\n          <p onClick={() => { navigate('/main') }}><ArrowBackIcon /></p>\n        </div>\n        <Box sx={{ width: '100%', color: 'white' }}>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n              <Tab style={style} label=\"Customer Invoice\" {...a11yProps(0)} />\n              <Tab style={style} label=\"Dealers Invoice\" {...a11yProps(1)} />\n            </Tabs>\n          </Box>\n          <TabPanel value={value} index={0}>\n            <div>\n              <CustomerInvoice\n                api={api}\n                onHandleChangeEvent={onHandleChangeEvent}\n                searchData={searchData}\n                modalview={modalview}\n              />\n            </div>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <div>\n              <DealersInvoice\n                api={api}\n                onHandleChangeEvent={onHandleChangeEvent}\n                searchData={searchData}\n              />\n            </div>\n          </TabPanel>\n        </Box>\n      </div>\n    </div>\n  );\n}\nexport default GenerateInvoice;\n\n","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/GenerateReport/GenerateReport.js",["665","666","667","668","669","670"],[],"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport TextAndSelect from '../../components/molecules/TextAndSelect/TextAndSelect';\nimport DisplayCustomerTable from '../../components/molecules/DisplayCustomerTable/DisplayCustomerTable';\nimport DisplayDeliveryReportsTable from '../../components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable';\nimport DisplayProductDetailsTable from '../../components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable';\nimport DisplayDealersDetailsTable from '../../components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable';\nimport DownloadCustomer from '../../components/molecules/Download/DownloadCustomer';\nimport DownloadDelivery from '../../components/molecules/Download/DownloadDelivery';\nimport { useNavigate } from 'react-router-dom';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport '../../style/style.css';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  let navigate = useNavigate();\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\nconst GenerateReport = ({\n  modalview,\n  api\n}) => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const style = {\n    color: 'black'\n  }\n\n  const [statusselect, setstatusselect] = React.useState(['Booked', 'Cancelled', 'Follow Up In Progress']);\n  const [deliverystatus, setDeliverystatus] = React.useState(['Delivered', 'Not Delivered', 'Cancelled']);\n  const [paymentstatus, setpaymentstatus] = React.useState(['Paid', 'Pending']);\n  const [productstatus, setProductstatus] = React.useState(['Available', 'Not Available'])\n  const [gstinstatus, setGstinstatus] = React.useState(['Active', 'In Active']);\n  const [currentstatus, setCurrentstatus] = React.useState('');\n  const [currentstatusAlter, setCurrentstatusAlter] = React.useState('');\n  const [tabledata, setTabledata] = React.useState({});\n  const setTableDataEvent = (e) => {\n    setTabledata(e);\n  }\n  const currentStatusEvent = (e) => {\n    setCurrentstatus(e);\n  }\n  const currentPaymentStatusEvent = (e) => {\n    setCurrentstatusAlter(e)\n  }\n  let navigate = useNavigate();\n  return (\n    <div>\n      <div>\n        <HeaderWithLogout />\n      </div>\n      <div className=\"reportcontainer\">\n        <div className=\"pageheading\">\n          Generate Report\n        </div>\n        <div className=\"backarrow generatereportbackarrow\">\n          <p onClick={() => { navigate('/main') }}><ArrowBackIcon /></p>\n        </div>\n        <Box sx={{ width: '100%', color: 'white' }}>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n              <Tab style={style} label=\"Delivery Reports\" {...a11yProps(0)} />\n              <Tab style={style} label=\"Customer Follow Up Report\" {...a11yProps(1)} />\n              <Tab style={style} label=\"Product Details Report\" {...a11yProps(2)} />\n              <Tab style={style} label=\"Dealers Details Report\" {...a11yProps(3)} />\n            </Tabs>\n          </Box>\n          <TabPanel value={value} index={0}>\n            <div className='tabpanelheader'>\n              <DownloadDelivery\n                setTableDataEvent={setTableDataEvent}\n              />\n              <div classname=\"paymentdeliveryfiltercontainer\">\n                <TextAndSelect\n                  currentStatusEvent={currentPaymentStatusEvent}\n                  statusselect={paymentstatus}\n                  selectlabelname=\"Payment status\"\n                />\n                <TextAndSelect\n                  currentStatusEvent={currentStatusEvent}\n                  statusselect={deliverystatus}\n                  selectlabelname=\"Delivery status\"\n                />\n              </div>\n            </div>\n            <DisplayDeliveryReportsTable\n              api={api}\n              setTableDataEvent={setTableDataEvent}\n              tabledata={tabledata}\n              modalview={modalview}\n              deliverystatus={currentstatus}\n              paymentstatus={currentstatusAlter}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <div className='tabpanelheader'>\n              <DownloadCustomer\n                setTableDataEvent={setTableDataEvent}\n              />\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={statusselect}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayCustomerTable\n              api={api}\n              setTableDataEvent={setTableDataEvent}\n              modalview={modalview}\n              tabledata={tabledata}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <div className='tabpanelheader'>\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={productstatus}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayProductDetailsTable\n              api={api}\n              modalview={modalview}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={3}>\n            <div className='tabpanelheader'>\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={gstinstatus}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayDealersDetailsTable\n              api={api}\n              modalview={modalview}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n        </Box>\n      </div>\n    </div>\n  );\n}\nexport default GenerateReport;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/Header/Header.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedLogOutIcon/CustomizedLogOutIcon.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedLogo/CustomizedLogo.js",["671"],[],"import React from 'react';\nimport logo from '../../../images/logo.png';\nimport '../../../style/style.css';\n\nconst CustomizedLogo = ({\n    onClick\n}) => {\n    return(\n        <div className='imagecontainer'>\n            <img src={logo} onClick={onClick} />\n        </div>\n    );\n}\nexport default CustomizedLogo;\n","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/Footer/Footer.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/TextAndTextInput/TextAndTextInput.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedText/CustomizedText.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedTextInput/CustomizedTextInput.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCard/CustomizedCard.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedSearchBar/CustomizedSearchBar.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedBtn/CustomizedBtn.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/OpenModal/OpenModal.js",["672"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport InvoiceFormat from '../InvoiceFormat/InvoiceFormat';\nimport AddCustomersForm from '../AddCustomersForm/AddCustomersForm';\nimport AddFewCustomersForm from '../AddFewCustomersForm/AddFewCustomersForm';\nimport CustomerInvoiceForm from '../CustomerInvoiceForm/CustomerInvoiceForm';\nimport DealersInvoiceForm from '../DealersInvoiceForm/DealersInvoiceForm';\nimport DealersDetailsForm from '../DealersDetailsForm/DealersDetailsForm';\nimport ProductsDetailsForm from '../ProductsDetailsForm/ProductsDetailsForm';\nimport DeliveryDetailsForm from '../DeliveryDetailsForm/DeliveryDetailsForm';\nimport AddProductForm from '../AddProductForm/AddProductForm';\nimport AddDealersForm from '../AddDealersForm/AddDealersForm';\nimport CustomerFollowUpForm from '../CustomerFollowUpForm/CustomerFollowUpForm';\nimport DealersInvoiceFormGenerate from '../../molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate';\nimport DealersInvoicesListForm from '../../molecules/DealersInvoicesListForm/DealersInvoicesListForm';\nimport EditDealersReportForm from '../../molecules/EditDealersReportForm/EditDealersReportForm';\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 900,\n  height: 700,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  overflow: \"scroll\"\n};\nconst OpenModal = ({\n  api,\n  displayDealersDetailsData,\n  displayProductDetailsData,\n  displayDeliveryReportsData,\n  invoiceFormData,\n  modalbuttonname,\n  modalview,\n  rowdata,\n  currentCustomerReferenceNo,\n  displayCustomerFollowUpData,\n  displaycustomerfollowupevent,\n  custrefno,\n  openinvoiceevent,\n  invoiceno,\n  formdisplaydata,\n  dealersdata,\n  deliveryinvoices,\n  fetchdealersdatatoverify,\n  changeevent,\n  verificationstatus,\n  currentInvoiceno,\n  purchasestatus,\n  open,\n  openevent,\n  currentCustomerReferenceNoCustomerInvoice,\n  setpurchasemsgevent\n}) => {\n  const handleClose = () => {\n    openevent(false);\n    if (modalview === 'productdetailsform') {\n      displayProductDetailsData();\n    }\n    else if (modalview === 'deliverydetailsform') {\n      displayDeliveryReportsData();\n    }\n    else if (modalview === 'editdealersreport') {\n      displayDealersDetailsData();\n    }\n    else if (modalview === 'addproductform') {\n      displayProductDetailsData();\n    }\n    else if (modalview === 'adddealersform') {\n      displayDealersDetailsData();\n    }\n    else if (modalview === 'customerfollowupform') {\n      displayCustomerFollowUpData();\n    }\n    else if (modalview === 'customerdetailsform') {\n      displaycustomerfollowupevent();\n    }\n    else if (modalview === 'addcustomerform') {\n      displaycustomerfollowupevent();\n    }\n  };\n  return (\n    <div>\n      <div className='modalbutton'>\n      </div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {\n              modalview === 'invoiceformat' &&\n              <InvoiceFormat\n                api={api}\n                invoiceFormData={invoiceFormData}\n                invoiceno={invoiceno}\n              />\n            }\n            {\n              modalview === 'customerdetailsform' &&\n              <AddCustomersForm\n                setpurchasemsgevent={setpurchasemsgevent}\n                api={api}\n                purchasestatus={purchasestatus}\n                handleClose={handleClose}\n                displayCustomerFollowUpData={displayCustomerFollowUpData}\n                currentCustomerReferenceNo={currentCustomerReferenceNo}\n                displaycustomerfollowupevent={displaycustomerfollowupevent}\n              />\n            }\n            {\n              modalview === 'addcustomerform' &&\n              <AddFewCustomersForm\n                api={api}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'customerInvoiceForm' &&\n              <CustomerInvoiceForm\n                api={api}\n                invoiceFormData={invoiceFormData}\n                custrefno={custrefno}\n                currentCustomerReferenceNoCustomerInvoice={currentCustomerReferenceNoCustomerInvoice}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'DealersInvoiceForm' &&\n              <DealersInvoiceForm\n                api={api}\n                dealersdata={dealersdata}\n                invoiceFormData={invoiceFormData}\n                handleClose={handleClose}\n                formdisplaydata={formdisplaydata}\n              />\n            }\n            {\n              modalview === 'generatecustomerinvoiceform' &&\n              <InvoiceFormat\n                api={api}\n                invoiceFormData={invoiceFormData}\n                custrefno={custrefno}\n                openinvoiceevent={openinvoiceevent}\n              />\n            }\n\n            {\n              modalview === 'DealersInvoiceFormGenerateFormat' &&\n              <DealersInvoiceFormGenerate\n                api={api}\n                modalview={modalview}\n                invoiceFormData={invoiceFormData}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n              />\n            }\n            {\n              modalview === \"DealersInvoicesListForm\" &&\n              <DealersInvoicesListForm\n                api={api}\n                deliveryinvoices={deliveryinvoices}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === \"dealersdetailsform\" &&\n              <DealersDetailsForm\n                api={api}\n                currentInvoiceno={currentInvoiceno}\n                verificationstatus={verificationstatus}\n                changeevent={changeevent}\n                handleClose={handleClose}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n              />\n            }\n            {\n              modalview === 'deliverydetailsform' &&\n              <DeliveryDetailsForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'customerfollowupform' &&\n              <CustomerFollowUpForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'productdetailsform' &&\n              <ProductsDetailsForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'editdealersreport' &&\n              <EditDealersReportForm\n                rowdata={rowdata}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'adddealersform' &&\n              <AddDealersForm\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'addproductform' &&\n              <AddProductForm\n                handleClose={handleClose}\n              />\n            }\n          </Typography>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\nexport default OpenModal;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/InvoiceFormat/InvoiceFormat.js",["673","674"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from \"../../atoms/CustomizedPrint/CustomizedPrint\";\nimport { ToWords } from 'to-words';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst InvoiceFormat = ({\n    invoiceFormData\n}) => {\n    const [constantinvoicedata, setconstantinvoicedata] = useState();\n    const [totalamount, settotalamount] = useState();\n    const [totalinwords, settotalinwords] = useState();\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n    const toWords = new ToWords();\n    useEffect(() => {\n        if (invoiceFormData) {\n            const tempdata = [...new Set(invoiceFormData.map((e) => e.customer_reference_no))];\n            tempdata.map((temp) => {\n                let filterByTempData = invoiceFormData.filter(dataObject => dataObject.customer_reference_no === temp)\n                var fixedstrings = filterByTempData[0];\n                setconstantinvoicedata(fixedstrings);\n                let temptotal = 0;\n                invoiceFormData.map((data) => temptotal = temptotal + data.final_amount);\n                settotalamount(temptotal);\n                let words = toWords.convert(temptotal);\n                settotalinwords(words);\n            })\n        }\n    }, [invoiceFormData])\n    return (\n        <div className=\"invoiceformatcontainer\">\n            <div className=\"invoiceheader\">\n                <div><CustomizedPrint\n                    onClick={handlePrint}\n                />\n                </div>\n            </div>\n            <div className=\"table-responsive\" id=\"tableprint\" >\n                {\n                    constantinvoicedata\n                        ?\n                        <div ref={componentRef}>\n                            <table className=\"tbl\">\n                                <thead>\n                                    <tr>\n                                        <th colspan=\"6\" scope=\"col\">\n                                            <div className=\"theaddiv\">\n                                                <h6>TAX INVOICE</h6>\n                                                <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n                                                <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,Opp Anna Building,Hosur Main Road Bangalore-560099,Mobile: 9035757145/9902880851/9141070705</p>\n                                                <p>Email ID:shreeparamananda@gmail.com</p>\n                                                <p>GSTIN/UIN:29AYSPB6397D1ZX,{constantinvoicedata.state} State Code:{constantinvoicedata.state_code}</p>\n                                            </div>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td rowSpan=\"3\">Buyer:</td>\n                                        <td rowSpan=\"3\">{constantinvoicedata.customer_address}\n                                        </td>\n                                        <td colspan=\"3\">Invoice No:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.invoice_no}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\">Date of supply:-</td>\n                                        <td colspan=\"7\">\n                                            {constantinvoicedata.delivery_date != null ?\n                                             moment(constantinvoicedata.delivery_date).format('YYYY-MM-DD'):\n                                             constantinvoicedata.delivery_date\n                                            }\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\">PO no:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.po_number}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>GSTIN/UIN:</td>\n                                        <td>{constantinvoicedata.gst}</td>\n                                        <td colspan=\"3\">Vehicle No:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.vehicle_number}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>State Code:</td>\n                                        <td>{constantinvoicedata.state_code}</td>\n                                        <td colspan=\"3\">Pan Number:</td>\n                                        <td colspan=\"7\">pan 567jkhasdfkj67rt8</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Place of supply : </td>\n                                        <td colspan=\"11\">{constantinvoicedata.state}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Contact NO :</td>\n                                        <td colspan=\"2\">{constantinvoicedata.phone_number} </td>\n                                        <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                        <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Sl</td>\n                                        <td>Discription of Product</td>\n                                        <td>HSN CODE</td>\n                                        <td>Qty</td>\n                                        <td>Rate</td>\n                                        <td>Amount</td>\n                                        <td>CGST</td>\n                                        <td>SGST</td>\n                                        <td>IGST</td>\n                                        <td>Discount</td>\n                                    </tr>\n                                    {\n                                        invoiceFormData && invoiceFormData.length &&\n                                        invoiceFormData.map((d, index) => (\n                                            <tr>\n                                                <td >{index + 1}</td>\n                                                <td >{d.product}</td>\n                                                <td >{d.product_hsn_code}</td>\n                                                <td >{d.quantity}</td>\n                                                <td >{d.rate/d.quantity}</td>\n                                                <td >{d.rate}</td>\n                                                <td >{d.cgst}</td>\n                                                <td >{d.sgst}</td>\n                                                <td >{d.igst}</td>\n                                                <td >{d.discount}</td>\n                                            </tr>\n                                        ))\n                                    }\n                                    <tr>\n                                        <td colspan=\"3\">Total</td>\n                                        <td colspan=\"7\">{totalamount}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\" rowSpan=\"5\">\n                                            Terms &Conditions :\n                                            <ol>\n                                                <li>Payment only by DD/CHQ,In faver of Shree Paramananda Enterprises</li>\n                                                <li>In Case of Cash payment contact the above phone number Before Making Payment</li>\n                                                <li>Goods once sold Cannot return Back</li>\n                                            </ol>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">Round off:</td>\n                                        <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">TOTAL:</td>\n                                        <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">Final Payble Amount :- </td>\n                                        <td colSpan=\"3\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"1\">Amount in Words: </td>\n                                        <td colSpan=\"6\">Rupees {totalinwords} Only</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"3\">Received The goods in good condition </td>\n                                        <td colSpan=\"7\">certified that the particulars given above are true and correct For Shree Paramananda Enterprises</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"3\">Receivers Signature: </td>\n                                        <td colSpan=\"7\">Authorised Signatory:</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        : <></>\n                }\n            </div>\n        </div>\n    );\n}\nexport default InvoiceFormat;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedPrint/CustomizedPrint.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddCustomersForm/AddCustomersForm.js",["675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport CustomizedBtn from '../../atoms/CustomizedBtn/CustomizedBtn';\nimport { purchasesuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from \"../../atoms/CustomizedPrint/CustomizedPrint\";\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport '../../../style/style.css';\n\nconst AddCustomersForm = ({\n    currentCustomerReferenceNo,\n    handleClose,\n    displaycustomerfollowupevent,\n    purchasestatus,\n    api,\n    setpurchasemsgevent\n}) => {\n    const [rowdatadisplayed, setRowdatadisplayed] = useState();\n    const [paymentstatus, setpaymentstatus] = useState([\"paid\", \"pending\"]);\n    const [bookeddate, setbookeddate] = useState('');\n    const [productdata, setproductdata] = useState({});\n    const [finalpurchasestatus, setfinalpurchasestatus] = useState();\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n    useEffect(() => {\n        if (purchasestatus) {\n            setfinalpurchasestatus(purchasestatus[0].purchase_status);\n        }\n    }, [purchasestatus])\n    const selectevent = (event, index) => {\n        let updateRowDataByIndex = [...rowdatadisplayed];\n        rowdatadisplayed.find((item, i) => {\n            if (item.delivery_id === index) {\n                updateRowDataByIndex[i][\"payment_status\"] = event.target.innerHTML;\n                setRowdatadisplayed(() => [...updateRowDataByIndex]);\n            }\n        })\n    }\n    const bookeddateevent = () => {\n        let newDate = new Date()\n        let date = newDate.getDate();\n        let month = newDate.getMonth() + 1;\n        let year = newDate.getFullYear();\n        let finaldate = year + \"-\" + month + \"-\" + date;\n        setbookeddate(finaldate);\n    }\n    const [updaterowdata, setUpdaterowdata] = useState();\n    useEffect(() => {\n        bookeddateevent();\n    }, [])\n    useEffect(() => {\n        fetchalldatafromcust();\n    }, [])\n    const fetchalldatafromcust = () => {\n        api.post('/delivery/getalldataofcustomer', {\n            params: {\n                currentCustomerReferenceNo\n            }\n        })\n            .then((res) => {\n                const data = res.data;\n                setRowdatadisplayed(data);\n                setUpdaterowdata(data[0]);\n            })\n    }\n    useEffect(() => {\n        if (updaterowdata && updaterowdata.product_hsn_code) {\n            api.post('/product/displayProductDetailsDatabasedonproducthsn', {\n                params: {\n                    product_hsn_code: updaterowdata.product_hsn_code\n                }\n            })\n                .then((res) => {\n                    const data = res.data;\n                    setproductdata(data);\n                })\n        }\n    }, [updaterowdata]);\n    const submiteventclicked = () => {\n        api.put('/customer/updatefinalstatuscustomertable', {\n            params: {\n                final_status: \"Booked\",\n                customer_reference_no: currentCustomerReferenceNo\n            }\n        })\n            .then((res) => {\n                displaycustomerfollowupevent();\n            })\n        api.put('/delivery/updatepurchasestatusofdeliverytable', {\n            params: {\n                customer_reference_no: currentCustomerReferenceNo\n            }\n        })\n            .then((res) => {\n                displaycustomerfollowupevent();\n            })\n        api.put('/delivery/updateDeliveryData', {\n            params: {\n                rowdatadisplayed: rowdatadisplayed\n            }\n        })\n            .then((res) => {\n            })\n        api.put('/delivery/updaterateofdelivery', {\n            params: {\n                rowdatadisplayed: rowdatadisplayed\n            }\n        })\n            .then((res) => {\n            })\n        api.post('/delivery/getstatecodefromdelivery', {\n            params: {\n                rowdatadisplayed: rowdatadisplayed\n            }\n        })\n            .then((res) => {\n                const data = res.data;\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i].state_code === 29) {\n                        api.put('/jointables/updatekarnatakagstrates', {\n                            params: {\n                                customer_reference_no: data[i].customer_reference_no,\n                                product_hsn_code: data[i].product_hsn_code\n                            }\n                        })\n                            .then((res) => {\n                            })\n                        api.put('/jointables/updatefinalamountdelivery', {\n                            params: {\n                                rowdatadisplayed: rowdatadisplayed\n                            }\n                        })\n                            .then((res) => {\n                            })\n                        api.put('/delivery/updatebalanceamountdelivery', {\n                            params: {\n                                rowdatadisplayed: rowdatadisplayed\n                            }\n                        })\n                            .then((res) => {\n                                if (res) {\n                                    setpurchasemsgevent(\"Order Placed Successfully\");\n                                    // alert(res.msg);\n                                    // const res = purchasesuccessmsg({});\n                                    handleClose();\n                                }\n                            })\n                    }\n                    else {\n                        api.put('/delivery/updateotherstatesgstrates', {\n                            params: {\n                                customer_reference_no: data[i].customer_reference_no,\n                                product_hsn_code: data[i].product_hsn_code\n                            }\n                        })\n                            .then((res) => {\n                            })\n                        api.put('/jointables/updatefinalamountdelivery', {\n                            params: {\n                                rowdatadisplayed: rowdatadisplayed\n                            }\n                        })\n                            .then((res) => {\n                            })\n                        api.put('/delivery/updatebalanceamountdelivery', {\n                            params: {\n                                rowdatadisplayed: rowdatadisplayed\n                            }\n                        })\n                            .then((res) => {\n                                if (res) {\n                                    setpurchasemsgevent(\"Order Placed Successfully\");\n                                    // const res = purchasesuccessmsg({});\n                                    // alert(res.msg);\n                                    handleClose();\n                                }\n                            })\n                    }\n                }\n            })\n    }\n    const changeevent = (event, index) => {\n        let updateRowDataByIndex = [...rowdatadisplayed];\n        rowdatadisplayed.find((item, i) => {\n            if (item.delivery_id === index) {\n                updateRowDataByIndex[i][event.target.name] = event.target.value;\n                setRowdatadisplayed(() => [...updateRowDataByIndex]);\n            }\n        })\n    }\n    return (\n        <div>\n            <div>\n                <CustomizedPrint\n                    onClick={handlePrint}\n                />\n            </div>\n            <div ref={componentRef}>\n                <div className=\"formheading\">\n                    <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n                    <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,\n                        Opp Anna\n                        Building,Hosur Main Road Bangalore-560099,\n                        <br></br>Mobile: 9035757145/9902880851/9141070705</p>\n                </div>\n                <div className=\"pageheading\">\n                    Purchase Order\n                </div>\n                {\n                    rowdatadisplayed && rowdatadisplayed.length &&\n                    rowdatadisplayed.map((data, i) => (\n                        <form className=\"formcontainer\">\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Customer Reference Number:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={currentCustomerReferenceNo}\n                                            type=\"text\"\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Booked date:\n                                    </div>\n                                    <div>\n                                        <SelectDate\n                                            type=\"booked_date\"\n                                            typeOne=\"booked_date\"\n                                            incomingdate={\n                                                data.booked_date != null\n                                                    ? data.booked_date = data.booked_date\n                                                    : data.booked_date = data.booked_date\n                                            }\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Requested delivery date:\n                                    </div>\n                                    <div>\n                                        <SelectDate\n                                            typeOne=\"requested_delivery_date\"\n                                            onHandleChangeEvent={(event) => changeevent(event, data.delivery_id)}\n                                            incomingdate={\n                                                data.requested_delivery_date != null\n                                                    ? data.requested_delivery_date = data.requested_delivery_date\n                                                    : data.requested_delivery_date = data.requested_delivery_date\n                                            }\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Customer Address:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={data.customer_address}\n                                            name=\"customer_address\"\n                                            type=\"text\"\n                                            onChange={(event) => changeevent(event, data.delivery_id)}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        State:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={data.state}\n                                            type=\"text\"\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Phone number:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"phone_number\"\n                                            defaultValue={data.phone_number}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product hsn code:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            defaultValue={data.product_hsn_code}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.product}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Quantity:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"quantity\"\n                                            defaultValue={data.quantity}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product Rate:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.rate}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Discount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.discount}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                      Rate After Extended Discount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"extended_discount\"\n                                            onChange={(event) => changeevent(event, data.delivery_id)}\n                                            defaultValue={data.extended_discount}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        CGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.cgst}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        SGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.sgst}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        IGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.igst}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Rate:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.rate}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Final amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.final_amount}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Balance amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            defaultValue={data.balance_amount}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Payment status:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.payment_status}\n                                            readOnly\n                                        />\n                                    </div> \n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Booking advance amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"booking_advance_amount\"\n                                            defaultValue={data.booking_advance_amount}\n                                            onChange={(event) => changeevent(event, data.delivery_id)}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"divider\"></div>\n                        </form>\n                    ))\n                }\n            </div>\n            {\n                finalpurchasestatus == 1\n                    ? <p className=\"verificationstyle\">Purchase completed!</p>\n                    : <div className=\"submitcontainee\">\n                        <CustomizedBtn\n                            BtnName=\"submit\"\n                            onClick={submiteventclicked}\n                        />\n                    </div>\n            }\n        </div>\n    )\n}\nexport default AddCustomersForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/organisms/SuccessMsg/SuccessMsg.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDatepicker/SelectDate.js",["691","692"],[],"import React, {useState, useEffect } from 'react';\nimport moment from 'moment';\n\nconst SelectDate = ({\n    incomingdate,\n    typeOne,\n    onHandleChangeEvent,\n    disable,\n    selectevent\n}) => {\n    const [date, setDate] = useState();\n    const [defaultvalue, setdefaultvalue] = useState();\n    useEffect(()=>{\n        const resultDate=moment(incomingdate).format('YYYY-MM-DD');\n        setdefaultvalue(resultDate);\n      },[incomingdate]);\n    const handleChange = (e) =>{\n        setdefaultvalue(e.target.value);\n        selectevent(e.target.value);\n    }\n    return(\n        <div>\n            {\n                disable ?\n                    <input \n                        value={defaultvalue}\n                        type=\"date\" \n                        disabled\n                    />\n                    :\n                    <input \n                        value={defaultvalue}\n                        type=\"date\"\n                        onChange={(e)=>{handleChange(e)}}\n                    />\n            }\n            \n        </div>\n    );\n}\nexport default SelectDate;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCombobox/CustomizedComboboxAll.js",["693","694"],[],"import React, {useEffect, useState} from 'react';\nimport TextField from '@mui/material/TextField';\nimport Select from 'react-select';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport '../../../style/style.css';\n\nconst CustomizedComboboxAll = ({\n  comboboxdata,\n  onChange,\n  dvalue,\n  selectevent\n}) => {\n  const [status, setstatus] = useState();\n  const [defaultvalue, setdefaultvalue] = useState();\n  useEffect(()=>{\n    setdefaultvalue({value:dvalue, label:dvalue})\n  },[dvalue])\n  useEffect(()=>{\n    let ds = comboboxdata.map((data)=>{\n      return {value:data, label:data}\n    })\n    setstatus(ds);\n  },[comboboxdata, dvalue])\n  const handleChange = e => {\n    setdefaultvalue(e);\n    selectevent(e);\n  }\n  return (\n    <div className='comboboxselectstyle'>\n    <Select\n      placeholder=\"Select Option\"\n      value={defaultvalue}\n      options={status} // set list of the data\n      onChange={handleChange} // assign onChange function\n  />\n  </div>\n  );\n}\nexport default CustomizedComboboxAll;",[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddFewCustomersForm/AddFewCustomersForm.js",["695","696","697","698","699","700","701","702","703","704","705","706","707","708"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport { customeraddedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxForState from '../../atoms/CustomizedCombobox/CustomizedComboboxForState';\nimport CustomizedComboboxMultipleSelect from '../../atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect';\nimport '../../../style/style.css';\n\nconst AddFewCustomersForm = ({\n  handleClose,\n  api\n}) => {\n  const [customerdata, setcustomerdata] = useState(\n    {\n      customerReferenceNo: \"\",\n      enquiryDate: \"\",\n      customerName: \"\",\n      customerAddress: \"\",\n      statename: { value: 29, label: 'Karnataka' },\n      phoneno: \"\",\n      phonenoalterone: \"\",\n      phonenoaltertwo: \"\",\n      finalStatus: \"\",\n\n\n\n      \n      phone_number: \"\",\n      phone_number_alter_one: \"\",\n      phone_number_alter_two: \"\",\n      product_hsn_code: \"\",\n      product: \"\",\n      quantity: \"\",\n      customer_name: \"\"\n    }\n  );\n  const [comboboxdata, setComboboxdata] = useState([]);\n  const [productname, setProductname] = useState(\"\");\n  const [producthsn, setProducthsn] = useState();\n  const [state, setstate] = useState([]);\n  const [products, setproducts] = useState([]);\n  const [statecode, setstatecode] = useState(\"\");\n  const [producthsncodeonly, setproducthsncodeonly] = useState();\n  const [productnameonly, setproductnameonly] = useState();\n  const [productquantityonly, setproductquantityonly] = useState();\n  useEffect(() => {\n    api.get('/stateandstatecodes/getstateandstatecodes', {})\n      .then((res) => {\n        setstate(res.data);\n      })\n  }, [])\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let finalpreInvoiceNo = '';\n  const generatePreInvoiceNo = () => {\n    let s1 = 'p';\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalpreInvoiceNo = s1 + \"2022\" + random;\n  }\n  generatePreInvoiceNo();\n  let finalcurrentdate = \"\";\n  const currentDate = () => {\n    let date = new Date();\n    finalcurrentdate = moment(date).format('YYYY-MM-DD');\n  }\n  useEffect(() => {\n    api.get('product/displayProductDetailsDataforcombobox', {})\n      .then((res) => {\n        setComboboxdata(res.data);\n      })\n  }, [])\n  currentDate();\n  useEffect(() => {\n    api.post('stateandstatecodes/fetchstatecode', {\n      params:{\n        statename: customerdata != undefined ? customerdata.statename : null\n      }\n\n      // params: {\n      //   statename: customerdata != undefined ? customerdata.statename.value : null\n      // }\n    })\n      .then((res) => {\n        setstatecode(res.data);\n      })\n  }, [customerdata])\n  const submiteventclicked = () => {\n    api.post('/customer/addCustomerFollowUpData',\n      {\n        params: {\n          customerReferenceNo: finalCustomerRefNo,\n          enquiryDate: finalcurrentdate,\n          customerName: customerdata.customer_name,\n          customerAddress: customerdata.customer_address,\n          statename: customerdata.statename,\n          phoneno: customerdata.phone_number,\n          phonenoalterone: customerdata.phone_number_alter_one,\n          phonenoaltertwo: customerdata.phone_number_alter_two,\n          finalStatus: 'Follow up in progress'\n        }\n      })\n      .then((res) => {\n      })\n    api.post('delivery/addDeliveryData', {\n      params: {\n        customerReferenceNo: finalCustomerRefNo,\n        customerAddress: customerdata.customer_address,\n        statename: customerdata.statename,\n        phone_number: customerdata.phone_number,\n        phone_number_alter_one: customerdata.phone_number_alter_one,\n        phone_number_alter_two: customerdata.phone_number_alter_two,\n        product_hsn_code: producthsncodeonly,\n        product: productnameonly,\n        quantity: productquantityonly,\n        customer_name: customerdata.customer_name\n      }\n    })\n      .then((res) => {\n        if (res) {\n          const res = customeraddedsuccessmsg({})\n          alert(res.msg);\n          handleClose();\n        }\n      })\n      api.put('product/updateProductsDetailsProductData',{\n        params:products\n      })\n  }\n  const selectevent = (e) => {\n    setProductname(e.target.outerText);\n  }\n  const selecteventforstate = (e) => {\n    setcustomerdata({ ...customerdata, \"statename\": e })\n  }\n  const selectedproducts = (e) => {\n    let selectedproducts = e.map((data) => {\n      return { productname: data, quantity: 1 }\n    })\n    setproducts(selectedproducts);\n  }\n  useEffect(() => {\n    if (products != null) {\n      let s = \"\";\n      let tempproductname = [];\n      let tempproductquantity = [];\n      products.map((data) => {\n        tempproductname.push(data.productname);\n        tempproductquantity.push(data.quantity);\n        s += data.productname + \",\";\n      })\n      setproductnameonly(tempproductname);\n      setproductquantityonly(tempproductquantity);\n      api.post('product/fetchproducthsnfromproductdetails', {\n        params: {\n          product_name: s\n        }\n      })\n        .then((res) => {\n          setProducthsn(res.data);\n        })\n    }\n  }, [products])\n  useEffect(() => {\n    let temparray = [];\n    if (producthsn != null) {\n      producthsn.map((data) => {\n        temparray.push(data.product_hsn_code)\n      })\n    }\n    setproducthsncodeonly(temparray);\n  }, [producthsn])\n  const incrementclicked = (data) => {\n    var productstock;\n    api.post('product/getquantitybasedonproductname',{\n        params:data\n    })\n    .then((res)=>{\n        productstock = res.data\n        productstock.map((d)=>{\n            var stock = d.stock;\n            let selectedproductdetails = products.map((product) => {\n                if (product.productname == data.productname) {\n                    if (stock >product.quantity){\n                        product.quantity += 1;\n                    }\n                    else{\n                        alert(`only ${stock} stocks available`);\n                    }\n                }\n                return product;\n              });\n              setproducts(selectedproductdetails);\n        })\n    })\n\n  }\n  const decrementclicked = (data) => {\n    let selectedproductdetails = products.map((product) => {\n      if (product.productname == data.productname) {\n        if (product.quantity >= 2) {\n          product.quantity -= 1;\n        }\n      }\n      return product;\n    });\n    setproducts(selectedproductdetails);\n  }\n  const changeevent = (event) => {\n    setcustomerdata({ ...customerdata, [event.target.name]: event.target.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Add New Customer\n      </div>\n      <React.Fragment>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_address\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              State:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxForState\n                comboboxdata={state}\n                // type=\"state\"\n                selectevent={selecteventforstate}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Ph no:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Ph no (Alter - 1):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Ph no (Alter - 2):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxMultipleSelect\n                comboboxdata={comboboxdata}\n                selectedproducts={selectedproducts}\n              />\n            </div>\n          </label>\n        </div>\n        <div>\n          <div className=\"selectedproductheading\">Selected products:-\n            <ul>\n              {products && products.length &&\n                products.map((data, i) => (\n                  <li key={i} className=\"productnamedesign\">\n                    <div>{data.productname}</div>\n                    <div className=\"incrementdecrement\">\n                      <CustomizedBtn BtnName=\"+\" onClick={() => { incrementclicked(data) }} />\n                      {data.quantity}\n                      <CustomizedBtn BtnName=\"-\" onClick={() => { decrementclicked(data) }} />\n                    </div>\n                  </li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </React.Fragment>\n    </div>\n  )\n}\nexport default AddFewCustomersForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCombobox/CustomizedComboboxForState.js",["709","710","711","712"],[],"import React, {useEffect, useState} from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport Select from 'react-select';\n\nconst CustomizedCombobox = ({\n  comboboxdata,\n  selectevent\n}) => {\n  const [statedata, setstatedata] = useState();\n  const [defaultvalue, setdefaultvalue] = useState();\n  useEffect(()=>{\n    let temp = comboboxdata.map((d)=>{\n      return {value:d.statecode, label:d.statename}\n    })\n    setstatedata(temp);\n  },[comboboxdata])\n  useEffect(()=>{\n    setdefaultvalue({label: 'Karnataka', value: 29})\n  },[comboboxdata])\n  const handleChange = e => {\n    setdefaultvalue(e);\n    selectevent(e);\n  }\n  return (\n    <div className='comboboxselectstyle'>\n      <Select\n        placeholder=\"Select Option\"\n        value={defaultvalue}\n        options={statedata} // set list of the data\n        onChange={handleChange} // assign onChange function\n    />\n  </div>\n    // <Autocomplete\n    //   onChange={selectevent}\n    //   id=\"highlights-demo\"\n    //   sx={{ width: 300 }}\n    //   options={comboboxdata}\n    //   getOptionLabel={(option) => option.statename}\n    //   renderInput={(params) => (\n    //     <TextField {...params} margin=\"normal\" />\n    //   )}\n    //   renderOption={(props, option, { inputValue }) => {\n    //     const matches = match(option.statename, inputValue);\n    //     const parts = parse(option.statename, matches);\n\n    //     return (\n    //       <li {...props}>\n    //         <div>\n    //           {parts.map((part, index) => (\n    //             <span\n    //               key={index}\n    //               style={{\n    //                 fontWeight: part.highlight ? 700 : 400,\n    //               }}\n    //             >\n    //               {part.text}\n    //             </span>\n    //           ))}\n    //         </div>\n    //       </li>\n    //     );\n    //   }}\n    // />\n  );\n}\nexport default CustomizedCombobox;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect.js",["713"],[],"import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(name, productName, theme) {\n  return {\n    fontWeight:\n      productName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nconst CustomizedComboboxMultipleSelect = ({\n  comboboxdata,\n  selectedproducts\n}) => {\n  const theme = useTheme();\n  const [productName, setProductName] = React.useState([]);\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setProductName(\n      typeof value === 'string' ? value.split(',') : value,\n    );\n    selectedproducts(\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <Select\n          labelId=\"demo-multiple-name-label\"\n          id=\"demo-multiple-name\"\n          multiple\n          value={productName}\n          onChange={handleChange}\n          input={<OutlinedInput />}\n          MenuProps={MenuProps}\n        >\n          {comboboxdata.map((name) => (\n            <MenuItem\n              key={name.product_name}\n              value={name.product_name}\n              style={getStyles(name, productName, theme)}\n            >\n              {name.product_name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default CustomizedComboboxMultipleSelect;\n","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/organisms/CustomerInvoice/CustomerInvoice.js",["714","715","716","717","718","719","720","721"],[],"import React, { useState, useEffect } from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst CustomerInvoice = ({\n    searchData,\n    onHandleChangeEvent,\n    api\n}) => {\n    const [customertable, setCustomertable] = useState([]);\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [currentinvoiceno, setcurrentinvoiceno] = useState();\n    const [currentCustomerReferenceNoCustomerInvoice, setcurrentCustomerReferenceNoCustomerInvoice] = useState();\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(() => {\n        displayBookedCustomeerDataEvent();\n    }, [])\n    const displayBookedCustomeerDataEvent = () => {\n        api.post('customer/displayBookedCustomeerData', {\n            params:{\n                final_status: 'Booked'\n            }\n        })\n        .then((res)=>{\n            setCustomertable(res.data);\n        })\n    }\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const modalviewchange = () => {\n        setChangedmodalview(\"generatecustomerinvoiceform\");\n    }\n    const openCustomerInvoiceEvent = (customer_reference_no, product_hsn_code) => {\n        api.post('delivery/getDeliveryDataForVerification', {\n            params:{\n                customer_reference_no: customer_reference_no,\n                    product_hsn_code:product_hsn_code\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n        }\n    const openinvoiceevent = (customer_reference_no) => {\n        api.post('delivery/getDeliveryReportData',{\n            params:{\n                customer_reference_no\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n        }\n    \n    const [customerrefno, setcustomerrefno] = useState();\n    useEffect(()=>{\n        invoiceFormData.map((data)=>{\n            setcustomerrefno(data.customer_reference_no);\n            setcurrentinvoiceno(data.invoice_no);\n        })\n    },[invoiceFormData])\n    const goEventClicked = () => {\n        api.post('jointables/getCustomerFollowUpDataBooked', {\n            params:{\n                phoneno: searchData,\n                customer_name: searchData,\n                phone_number_alter_one:searchData,\n                phone_number_alter_two:searchData\n            }\n        })\n        .then((res)=>{\n            setCustomertable(res.data);\n        })\n    }\n    useEffect(() => {\n        if (searchData === \"\") {\n            displayBookedCustomeerDataEvent();\n        }\n    }, [searchData])\n    return (\n        <div className=\"generateinvoicecontainer\">\n            <CustomizedSearchBar\n                onHandleChangeEvent={onHandleChangeEvent}\n                goEventClicked={goEventClicked}\n                labelname=\"phone number/ customer name\"\n                Btnname=\"search\"\n            />\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                invoiceFormData={invoiceFormData}\n                openinvoiceevent={openinvoiceevent}\n                currentCustomerReferenceNoCustomerInvoice={currentCustomerReferenceNoCustomerInvoice}\n            />\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Enquiry Date</th>\n                            <th>Customer Name</th>\n                            <th>Customer Address</th>\n                            <th>Phone Number</th>\n                            <th>Phone Number Alter - 1</th>\n                            <th>Phone Number Alter - 2</th>\n                            <th>Enquired Product Hsn Code</th>\n                            <th>Enquired Product</th>\n                            <th>Quantity</th>\n                            <th>Comments</th>\n                            <th>Follow Up Call </th>\n                            <th>Final Status</th>\n                            <th>Action</th>\n                            <th>Generate</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            customertable && customertable.length \n                            ? \n                            customertable.map((data, i) => (\n                                data.from_dealer == 1 \n                                ? <></>\n                                :  <tr key={i}>\n                                <td>{data.customer_reference_no}</td>\n                                <td>{\n                                    data.enquiry_date != null ?\n                                    moment(data.enquiry_date).format('YYYY-MM-DD'):\n                                    data.enquiry_date\n                                }\n                                </td>\n                                <td>{data.customer_name}</td>\n                                <td>{data.customer_address}</td>\n                                <td>{data.phone_number}</td>\n                                <td>{data.phone_number_alter_one}</td>\n                                <td>{data.phone_number_alter_two}</td>\n                                <td>{data.product_hsn_code}</td>\n                                <td>{data.product}</td>\n                                <td>{data.quantity}</td>\n                                <td>{data.comments}</td>\n                                <td>{\n                                    data.follow_up_call != null ?\n                                    moment(data.follow_up_call).format('YYYY-MM-DD'):\n                                    data.follow_up_call \n                                }\n                                </td>\n                                <td>{data.final_status}</td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"Verify Invoice\"\n                                        onClick={()=>{\n                                            setcurrentCustomerReferenceNoCustomerInvoice(data.customer_reference_no);\n                                            openCustomerInvoiceEvent(data.customer_reference_no, data.product_hsn_code);\n                                            setModalview(\"customerInvoiceForm\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                </td>\n                                <td>\n                                <CustomizedBtn \n                                        BtnName=\"Generate Invoice\"\n                                        onClick={()=>{\n                                            openinvoiceevent(data.customer_reference_no);\n                                            setModalview(\"generatecustomerinvoiceform\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                \n                                    \n                                </td>\n                                </tr>\n                              ))\n                              : <tr>\n                                <td colspan=\"15\">No Record!</td>\n                              </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default CustomerInvoice;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/organisms/DealersInvoice/DealersInvoice.js",["722","723","724"],[],"import React,{useState, useEffect} from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport '../../../style/style.css';\n\nconst DealersInvoice = ({\n    searchData,\n    onHandleChangeEvent,\n    api\n}) => {\n    const [dealersDetails, setdealersDetails] = useState({});\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    const displayDealersDetailsDatawithstatusactiveevent = () =>{\n        api.get('dealers/displayDealersDetailsDatawithstatusactive')\n        .then((res)=>{\n            setdealersDetails(res.data);\n        })\n    }\n    useEffect(()=>{\n        displayDealersDetailsDatawithstatusactiveevent();\n    },[])\n    const openinvoiceevent = (gstin_number) => {\n        api.post('dealers/getdealersfromgst',{\n            params:{\n                gstin_Number:gstin_number\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n    }\n    const fetchdeliverydatamatchinggstevent = (gstin_number) => {\n        api.post('delivery/fetchdeliverymatchinggstno',{\n            params:{\n                gst:gstin_number\n            }\n        })\n        .then((res)=>{\n            if(res.data && res.data.length == 0){\n                res.data.push(\n                    {'state':''})\n            }\n            setInvoiceFormData(res.data);\n        })\n    }\n    useEffect(() => {\n        if (searchData === \"\") {\n            displayDealersDetailsDatawithstatusactiveevent();\n        }\n    }, [searchData])\n    const goEventClicked = () => {\n        api.post('dealers/getDealersDetailsData',{\n            params:{\n                searchData\n            }\n        })\n        .then((res)=>{\n            setdealersDetails(res.data);\n        })\n    }\n    const [dealersdata,setdealersdata] = useState();\n    const dealersdataevent = (e) => {\n        setdealersdata(e)\n    };\n    const [deliveryinvoices, setdeliveryinvoices] = useState();\n    const fetchinvoicesfromdelivery = (e) => {\n        api.post('delivery/fetchinvoicesfromdelivery', {\n            params:{\n                gst:e\n            }\n        })\n        .then((res)=>{\n            setdeliveryinvoices(res.data);\n        })\n    }\n    return(\n        <div className=\"generateinvoicecontainer\">\n            <OpenModal \n                api={api}\n                open={open}\n                openevent={openevent}\n                dealersdata={dealersdata}\n                modalview={modalview}\n                invoiceFormData={invoiceFormData} \n                deliveryinvoices={deliveryinvoices}\n            />\n            <CustomizedSearchBar \n                onHandleChangeEvent={onHandleChangeEvent}\n                goEventClicked={goEventClicked}\n                labelname=\"phone number/ name\" \n                Btnname=\"Search\"\n            />\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>GSTIN Number</th>\n                            <th>Enterprise Name</th>\n                            <th>Enterprise Address</th>\n                            <th>Enterprise State</th>\n                            <th>Proprietor Name</th>\n                            <th>Proprietor Phone Number</th>\n                            <th>GST Status</th>\n                            <th>Action</th>\n                            <th>Generate</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        dealersDetails && dealersDetails.length \n                        ? dealersDetails.map((data, i)=>(\n                            <tr key={i}>\n                                <td>{data.gstin_number}</td>\n                                <td>{data.enterprise_name}</td>\n                                <td>{data.enterprise_address}</td>\n                                <td>{data.enterprise_state}</td>\n                                <td>{data.proprietor_name}</td>\n                                <td>{data.proprietor_phone_number}</td>\n                                <td>{data.gstin_status}</td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"Generate Invoice\"\n                                        onClick={()=>{\n                                            dealersdataevent(data);\n                                            openinvoiceevent(data.gstin_number);\n                                            fetchdeliverydatamatchinggstevent(data.gstin_number);\n                                            setModalview(\"DealersInvoiceForm\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                </td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"View Invoice\"\n                                        onClick={()=>{\n                                            dealersdataevent(data);\n                                            openinvoiceevent(data.gstin_number);\n                                            fetchdeliverydatamatchinggstevent(data.gstin_number);\n                                            setModalview(\"DealersInvoicesListForm\");\n                                            fetchinvoicesfromdelivery(data.gstin_number);\n                                            openevent(true);\n                                        }}\n                                    />\n                                </td>\n                            </tr>\n                        ))\n                        : \n                            <tr>\n                                <td colspan=\"15\">No Record!</td>\n                            </tr>\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoice;",[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/CustomerInvoiceForm/CustomerInvoiceForm.js",["725","726","727","728","729","730","731","732","733","734","735","736","737","738","739"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { invoicedataverificationsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport '../../../style/style.css';\n\nconst CustomerInvoiceForm = ({\n    handleClose,\n    invoiceFormData,\n    api,\n    currentCustomerReferenceNoCustomerInvoice\n}) => {\n    const [listofinvoices, setlistofinvoices] = useState([]);\n    const [finalinvoicenumber, setfinalinvoicenumber] = useState('');\n    const [updaterowdata, setUpdaterowdata] = useState();\n    const [rowdatadisplayed, setRowdatadisplayed] = useState();\n    useEffect(() => {\n        api.get('delivery/fetchinvoicesfromdeliverytable')\n            .then((res) => {\n                setlistofinvoices(res.data);\n            })\n    }, [])\n    useEffect(() => {\n        fetchalldatafromcust();\n    }, [])\n    const fetchalldatafromcust = () => {\n        api.post('/delivery/getalldataofcustomer', {\n            params: {\n                currentCustomerReferenceNoCustomerInvoice\n            }\n        })\n            .then((res) => {\n                const data = res.data;\n                setRowdatadisplayed(data);\n            })\n    }\n    useEffect(() => {\n        var numbers = [];\n        var maximum = Math.max(...numbers);\n        var newmaximum = maximum + 1;\n        if (newmaximum.toString().length === 4) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + newmaximum);\n        }\n        else if (newmaximum.toString().length === 3) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + \"0\" + newmaximum);\n        }\n        else if (newmaximum.toString().length === 2) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + \"00\" + newmaximum);\n        }\n        else if (newmaximum.toString().length === 1) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + \"000\" + newmaximum);\n        }\n    }, [listofinvoices])\n    const submiteventclicked = (customer_reference_no) => {\n        let date = new Date();\n        var date1 = date.toISOString();\n        var date2 = date1.split(\"-\");\n        var month = Number(date2[1]);\n        var year = Number(date2[0]);\n        var yearstring = \"\";\n        if(month >= 4 && month <= 12){\n            var y1 = year;\n            var y2 =year+1; \n            yearstring = y1+\"-\"+y2;\n        }\n        if(month>=1 && month <= 3){\n            var y1 = year;\n            var y2 = year-1;\n            yearstring = y2+\"-\"+y1;\n        }\n        let finalInvoiceNo = '';\n        let s1 = \"In\"+yearstring+\"/\";\n        let min = 0;\n        let max = 1000;\n        let random = Math.floor(Math.random() * (max - min + 1)) + min;\n        let notostring = random.toString();\n        let size = notostring.length;\n        if (size === 4) {\n            finalInvoiceNo = s1 + random;\n        }\n        else if (size === 3) {\n            finalInvoiceNo = s1 + \"0\" + random;\n        }\n        else if (size === 2) {\n            finalInvoiceNo = s1 + \"00\" + random;\n        }\n        else if (size === 1) {\n            finalInvoiceNo = s1 + \"000\" + random;\n        }\n        api.put('delivery/updateDeliveryDataafterverify', {\n            params: {\n                invoice_no: finalInvoiceNo,\n                customer_reference_no: customer_reference_no,\n                po_number: rowdatadisplayed[0].po_number,\n                vehicle_no: rowdatadisplayed[0].vehicle_number,\n                pan_number: rowdatadisplayed[0].pan_number,\n                place_of_supply: rowdatadisplayed[0].place_of_supply\n            }\n        })\n            .then((res) => {\n                if (res) {\n                    const res = invoicedataverificationsuccessmsg({});\n                    alert(res.msg);\n                    handleClose();\n                }\n            })\n    }\n    const changeevent = (event, index) => {\n        let updateRowDataByIndex = [...rowdatadisplayed];\n        rowdatadisplayed.find((item, i) => {\n            if (item.delivery_id === index) {\n                updateRowDataByIndex[i][event.target.name] = event.target.value;\n                setRowdatadisplayed(() => [...updateRowDataByIndex]);\n            }\n        })\n    }\n    return (\n        <div>\n            <div className=\"pageheading\">\n                verify invoice and submit\n            </div>\n            {\n                invoiceFormData && invoiceFormData.length &&\n                invoiceFormData.map((data, i) => (\n                    <form className=\"formcontainer\">\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Buyer:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.customer_address}\n                                        type=\"text\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    State code:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.state}\n                                        type=\"text\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Place of supply:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.place_of_supply}\n                                        type=\"text\"\n                                        onChange={(event) => changeevent(event, data.delivery_id)}\n                                        index={i}\n                                        name=\"place_of_supply\"\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Invoice No:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.invoice_no}\n                                        type=\"text\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Date of supply:\n                                </div>\n                                <div>\n                                    <SelectDate\n                                        type=\"delivery_date\"\n                                        typeOne=\"delivery_date\"\n                                        onHandleChangeEvent={(event) => changeevent(event, data.delivery_id)}\n                                        incomingdate={\n                                            data.delivery_date != null\n                                                ? data.delivery_date \n                                                : data.delivery_date\n                                        }\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    PO no:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        onChange={(event) => changeevent(event, data.delivery_id)}\n                                        index={i}\n                                        defaultValue={data.po_number}\n                                        type=\"text\"\n                                        name=\"po_number\"\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Vehicle No:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        onChange={(event) => changeevent(event, data.delivery_id)}\n                                        index={i}\n                                        defaultValue={data.vehicle_number}\n                                        type=\"text\"\n                                        name=\"vehicle_number\"\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Contact Number - 1:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.phone_number}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Contact Number - 2:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.phone_number_alter_one}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Contact Number - 3:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.phone_number_alter_two}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Discription of Product:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.product}\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Product HSN Code:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.product_hsn_code}\n                                        type=\"text\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Quantity:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.quantity}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Rate:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.rate}\n                                        type=\"text\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Amount:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Total:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    CGST:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.cgst}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    SGST:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.sgst}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    IGST:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.igst}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Round off:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    TOTAL:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        {\n                            data.verification_status\n                                ? <p className=\"verificationstyle\">Invoice Data Verification Completed!</p>\n                                :\n                                <div className=\"submitcontainee\">\n                                    <CustomizedBtn\n                                        BtnName=\"submit\"\n                                        onClick={() => {\n                                            submiteventclicked(data.customer_reference_no)\n                                        }}\n                                    />\n                                </div>\n                        }\n                    </form>\n                ))\n            }\n\n        </div>\n    )\n}\nexport default CustomerInvoiceForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersInvoiceForm/DealersInvoiceForm.js",["740","741","742","743","744","745"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport CustomizedComboboxMultipleSelect from '../../atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect';\nimport CustomizedComboboxForState from '../../atoms/CustomizedCombobox/CustomizedComboboxForState';\nimport { generateinvoicesuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport '../../../style/style.css';\nconst DealersInvoiceForm = ({\n  dealersdata,\n  handleClose,\n  api\n}) => {\n  const [comboboxdata, setComboboxdata] = useState([]);\n  const [products, setproducts] = useState({\n    productname: '',\n    quantity: \"\",\n    product_status: \"\"\n  });\n  const [state, setstate] = useState([]);\n  const [selectedstate, setselectedstate] = useState();\n  const [changeddata, setchangeddata] = useState();\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let finalInvoiceNo = '';\n  const generateInvoiceNo = () => {\n    let s1 = \"In22-2023/\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    let notostring = random.toString();\n    let size = notostring.length;\n    if (size === 4) {\n      finalInvoiceNo = s1 + random;\n    }\n    else if (size === 3) {\n      finalInvoiceNo = s1 + \"0\" + random;\n    }\n    else if (size === 2) {\n      finalInvoiceNo = s1 + \"00\" + random;\n    }\n    else if (size === 1) {\n      finalInvoiceNo = s1 + \"000\" + random;\n    }\n  }\n  generateInvoiceNo();\n  useEffect(() => {\n    api.get('stateandstatecodes/getstateandstatecodes')\n      .then((res) => {\n        setstate(res.data);\n      })\n  }, [])\n  const submiteventclicked = () => {\n    api.post('product/fetchallproductdetails', {\n      params: {\n        productsdata: products\n      }\n    })\n      .then((res) => {\n        var data = res.data;\n        let prod = products.map((d) => {\n          let temp = data.find(a => a.product_name == d.productname)\n          return { ...d, ...temp }\n        })\n        let selectedstatecode = \"\";\n        state.map((d) => {\n          if (d.statename === selectedstate) {\n            selectedstatecode = d.statecode;\n          }\n        })\n        api.post('customer/insertdealerscustomertable', {\n          params: {\n            customer_reference_no: finalCustomerRefNo,\n            dealersdata: dealersdata,\n            state: selectedstate,\n            changed_data: changeddata\n          }\n        })\n          .then((res) => {\n          })\n        api.post('dealers/insertdealersdataintodeliverytable', {\n          params: {\n            customer_reference_no: finalCustomerRefNo,\n            invoice_no: finalInvoiceNo,\n            dealersdata: dealersdata,\n            productsdata: prod,\n            state: selectedstate,\n            state_code: selectedstatecode,\n            changed_data: changeddata\n          }\n        })\n          .then((res) => {\n            if (res) {\n              const res = generateinvoicesuccessmsg({})\n              alert(res.msg);\n              handleClose();\n            }\n          })\n      })\n      api.put('product/updateProductsDetailsProductData',{\n        params:products\n      })\n  }\n  const incrementclicked = (data) => {\n    let selectedproductdetails = products.map((product) => {\n      if (product.productname == data.productname) {\n        product.quantity += 1;\n      }\n      return product;\n    });\n    setproducts(selectedproductdetails);\n  }\n  const decrementclicked = (data) => {\n    let selectedproductdetails = products.map((product) => {\n      if (product.productname == data.productname) {\n        product.quantity -= 1;\n      }\n      return product;\n    });\n    setproducts(selectedproductdetails);\n  }\n  const selectedproducts = (e) => {\n    let selectedproducts = e.map((data) => {\n      return { productname: data, quantity: 1 }\n    })\n    setproducts(selectedproducts);\n  }\n  useEffect(() => {\n    api.get('product/displayProductDetailsDataforcombobox')\n      .then((res) => {\n        setComboboxdata(res.data);\n      })\n  }, [])\n  const selecteventforstate = (e) => {\n    setselectedstate(e.target.outerText);\n  }\n  const changeevent = (e) => {\n    setchangeddata({ ...changeddata, [e.target.name]: e.target.value });\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Generate Invoice\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              GSTIN Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.gstin_number}\n                readOnly\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.enterprise_name}\n                readOnly\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.enterprise_address}\n                readOnly\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Proprietor Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.proprietor_phone_number}\n                readOnly\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxMultipleSelect\n                comboboxdata={comboboxdata}\n                selectedproducts={selectedproducts}\n              />\n            </div>\n          </label>\n        </div>\n        <div>\n          <p>Selected products:-\n            <ul>\n              {products && products.length &&\n                products.map((data) => (\n                  <li className=\"productnamedesign\">\n                    <div>{data.productname}</div>\n                    <div className=\"incrementdecrement\">\n                      <CustomizedBtn BtnName=\"+\" onClick={() => { incrementclicked(data) }} />\n                      {data.quantity}\n                      <CustomizedBtn BtnName=\"-\" onClick={() => { decrementclicked(data) }} />\n                    </div>\n                  </li>\n                ))\n              }\n            </ul>\n          </p>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              PO Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"po_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        {/* <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Pan Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"pan_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div> */}\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Vehicle Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"vehicle_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Place of Supply:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"place_of_supply\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              State:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxForState\n                className=\"select\"\n                comboboxdata={state}\n                type=\"state\"\n                selectevent={selecteventforstate}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone number (Alter-1):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone number (Alter-2):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default DealersInvoiceForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedReadOnlyTextInput/CustomizedReadOnlyTextInput.js",[],[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate.js",["746","747","748","749"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from \"../../atoms/CustomizedPrint/CustomizedPrint\";\nimport CustomizedDownload from \"../../atoms/CustomizedDownload/CustomizedDownload\";\nimport { CSVLink } from \"react-csv\";\nimport { ToWords } from 'to-words';\nimport axios from 'axios';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst DealersInvoiceFormGenerate = ({\n    invoiceFormData,\n    modalview,\n    custrefno,\n    invoiceno,\n    fetchdealersdatatoverify\n}) => {\n    const [listofinvoices, setlistofinvoices] = useState([]);\n    const [tabledata, setTabledata] = React.useState({});\n    const componentRef = useRef();\n    const [constantinvoicedata, setconstantinvoicedata] = useState();\n    const [totalamount, settotalamount] = useState();\n    const [totalinwords, settotalinwords] = useState();\n    const toWords = new ToWords();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n    useEffect(() => {\n        if (fetchdealersdatatoverify) {\n            const tempdata = [...new Set(fetchdealersdatatoverify.map((e) => e.customer_reference_no))];\n            tempdata.map((temp) => {\n                let filterByTempData = fetchdealersdatatoverify.filter(dataObject => dataObject.customer_reference_no === temp)\n                var fixedstrings = filterByTempData[0];\n                setconstantinvoicedata(fixedstrings);\n                let temptotal = 0;\n                fetchdealersdatatoverify.map((data) => temptotal = temptotal + data.final_amount);\n                settotalamount(temptotal);\n                let words = toWords.convert(temptotal);\n                settotalinwords(words);\n            })\n        }\n    }, [fetchdealersdatatoverify])\n    useEffect(() => {\n        axios.get('http://localhost:3000/delivery/fetchinvoicesfromdeliverytable')\n            .then((res) => {\n                setlistofinvoices(res.data);\n            })\n    }, [])\n    useEffect(() => {\n        axios.post('http://localhost:3000/jointables/downloadinvoicedisplayedastable', {\n            params: {\n                invoice_no: invoiceno,\n                customer_reference_no: custrefno\n            }\n        })\n            .then((res) => {\n                setTabledata(res.data);\n            })\n    }, [])\n    const headers = [\n        { label: 'customer reference no', key: 'customer_reference_no' },\n        { label: 'booked date', key: 'booked_date' },\n        { label: 'requested delivery date', key: 'requested_delivery_date' },\n        { label: 'delivery date', key: 'delivery_date' },\n        { label: 'invoice no', key: 'invoice_no' },\n        { label: 'customer address', key: 'customer_address' },\n        { label: 'gst', key: 'gst' },\n        { label: 'phone number', key: 'phone_number' },\n        { label: 'product hsn code', key: 'product_hsn_code' },\n        { label: 'product', key: 'product' },\n        { label: 'quantity', key: 'quantity' },\n        { label: 'rate', key: 'rate' },\n        { label: 'discount', key: 'discount' },\n        { label: 'cgst', key: 'cgst' },\n        { label: 'sgst', key: 'sgst' },\n        { label: 'igst', key: 'igst' },\n        { label: 'final amount', key: 'final_amount' },\n        { label: 'balance amount', key: 'balance_amount' },\n        { label: 'payment status', key: 'payment_status' },\n        { label: 'booking advance amount', key: 'booking_advance_amount' },\n        { label: 'delivery status', key: 'delivery_status' },\n        { label: 'customer name', key: 'customer_name' },\n    ];\n    const csvReport = {\n        filename: 'DeliveryReports.csv',\n        headers: headers,\n        data: tabledata\n    }\n    return (\n        <div className=\"invoiceformatcontainer\">\n            <div className=\"invoiceheader\">\n                <div><CustomizedPrint\n                    onClick={handlePrint}\n                />\n                </div>\n                <div>\n                    {\n                        tabledata && tabledata.length ?\n                            <CSVLink {...csvReport}><CustomizedDownload /></CSVLink> : null\n                    }\n                </div>\n            </div>\n            <div className=\"table-responsive\" id=\"tableprint\">\n                {\n                    constantinvoicedata\n                        ?\n                        <table className=\"tbl\" ref={componentRef}>\n                            <thead>\n                                <tr>\n                                    <th colspan=\"6\" scope=\"col\">\n                                        <div className=\"theaddiv\">\n                                            <h6>TAX INVOICE</h6>\n                                            <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n                                            <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,Opp Anna Building,Hosur Main Road Bangalore-560099,Mobile: 9035757145/9902880851/9141070705</p>\n                                            <p>Email ID:shreeparamananda@gmail.com</p>\n                                            <p>GSTIN/UIN:29AYSPB6397D1ZX ,Karnataka State Code:29</p>\n                                        </div>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td rowSpan=\"3\">Buyer:</td>\n                                    <td rowSpan=\"3\">{constantinvoicedata.customer_address}\n                                    </td>\n                                    <td colspan=\"3\">Invoice No:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.invoice_no}</td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\">Date of supply:-</td>\n                                    <td colspan=\"7\">\n                                        {\n                                        constantinvoicedata.delivery_date != null ?\n                                        moment(constantinvoicedata.delivery_date).format('YYYY-MM-DD'):\n                                        constantinvoicedata.delivery_date\n                                        }\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\">PO no:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.po_number}</td>\n                                </tr>\n                                <tr>\n                                    <td>GSTIN/UIN:</td>\n                                    <td>{constantinvoicedata.gst}</td>\n                                    <td colspan=\"3\">Vehicle No:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.vehicle_number}</td>\n                                </tr>\n                                <tr>\n                                    <td>State Code:</td>\n                                    <td>{constantinvoicedata.state}</td>\n                                    <td colspan=\"3\">Pan Number:</td>\n                                    <td colspan=\"7\">pan 567jkhasdfkj67rt8</td>\n                                </tr>\n                                <tr>\n                                    <td>Place of supply : </td>\n                                    <td colspan=\"11\">{constantinvoicedata.state}</td>\n                                </tr>\n                                <tr>\n                                    <td>Contact NO :</td>\n                                    <td colspan=\"2\">{constantinvoicedata.phone_number} </td>\n                                    <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                    <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                </tr>\n                                <tr>\n                                    <td>Sl</td>\n                                    <td>Discription of Product</td>\n                                    <td>HSN CODE</td>\n                                    <td>Qty</td>\n                                    <td>Rate</td>\n                                    <td>Amount</td>\n                                    <td>CGST</td>\n                                    <td>SGST</td>\n                                    <td>IGST</td>\n                                    <td>Discount</td>\n                                </tr>\n                                {\n                                    fetchdealersdatatoverify && fetchdealersdatatoverify.length &&\n                                    fetchdealersdatatoverify.map((d) => (\n                                        <tr>\n                                            <td >1</td>\n                                            <td >{d.product}</td>\n                                            <td >{d.product_hsn_code}</td>\n                                            <td >{d.quantity}</td>\n                                            <td >{d.rate/d.quantity}</td>\n                                            <td >{d.rate}</td>\n                                            <td >{d.cgst}</td>\n                                            <td >{d.sgst}</td>\n                                            <td >{d.igst}</td>\n                                            <td >{d.discount}</td>\n                                        </tr>\n                                    ))\n                                }\n                                <tr>\n                                    <td colspan=\"3\">Total</td>\n                                    <td colspan=\"7\">{totalamount}</td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\" rowSpan=\"5\">\n                                        Terms &Conditions :\n                                        <ol>\n                                            <li>Payment only by DD/CHQ,In faver of Shree Paramananda Enterprises</li>\n                                            <li>In Case of Cash payment contact the above phone number Before Making Payment</li>\n                                            <li>Goods once sold Cannot return Back</li>\n                                        </ol>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">Round off:</td>\n                                    <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">TOTAL:</td>\n                                    <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">Final Payble Amount :- </td>\n                                    <td colSpan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"1\">Amount in Words: </td>\n                                    <td colSpan=\"6\">Rupees {totalinwords} Only</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"3\">Received The goods in good condition </td>\n                                    <td colSpan=\"7\">certified that the particulars given above are true and correct For Shree Paramananda Enterprises</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"3\">Receivers Signature: </td>\n                                    <td colSpan=\"7\">Authorised Signatory:</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        : <></>\n                }\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoiceFormGenerate;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDownload/CustomizedDownload.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/TextAndSelect/TextAndSelect.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedSelect/CustomizedSelect.js",["750"],[],"import * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport '../../../style/style.css';\n\nconst CustomizedSelect = ({statusselect,selectlabelname,currentStatusEvent})=> {\n  const [age, setAge] = React.useState('');\n  const [finalstatus, setFinalstatus] = React.useState();\n  const handleChange = (event) => {\n    setAge(event.target.value);\n    setFinalstatus(event.target.value);\n  };\n  React.useEffect(()=>{\n    currentStatusEvent(finalstatus);\n  },[finalstatus])\n  return (\n    <div className='customizedselectcontainer'>\n      <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"demo-simple-select-standard-label\">{selectlabelname}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-standard-label\"\n          id=\"demo-simple-select-standard\"\n          value={age}\n          onChange={handleChange}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {\n            statusselect && statusselect.length &&\n            statusselect.map((data)=>(\n            <MenuItem \n              value={data}  \n              onChange={handleChange}\n            >{data}</MenuItem>\n            ))\n          }\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\nexport default CustomizedSelect;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayCustomerTable/DisplayCustomerTable.js",["751","752","753"],[],"import React, { useEffect, useState } from 'react';\nimport CustomizedSearchBar from '../../atoms/CustomizedSearchBar/CustomizedSearchBar';\nimport CustomizedDownload from '../../atoms/CustomizedDownload/CustomizedDownload';\nimport CustomizedPrint from '../../atoms/CustomizedPrint/CustomizedPrint';\nimport {CSVLink} from \"react-csv\";\nimport OpenModal from '../../molecules/OpenModal/OpenModal';\nimport CustomizedEditIcon from '../../atoms/CustomizedEditIcon/CustomizedEditIcon';\nimport moment from 'moment';\n\n\nconst DisplayCustomerTable = ({\n    currentstatus,\n    setTableDataEvent,\n    tabledata,\n    api\n}) => {\n    const [filterflag, setfilterflag] = useState(false);\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [rowdata, setrowdata] = useState({});\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(()=>{\n        if (filterflag && currentstatus ){\n            statusfiltercustomerdata();\n        }else {\n            displayCustomerFollowUpData();   \n        }\n    },[currentstatus])\n\n    const headers =[\n        {label:'Comments', key:'comments'},\n        {label:'Customer address', key:'customer_address'},\n        {label:'Customer name', key:'customer_name'},\n        {label:'Customer reference No', key:'customer_reference_no'},\n        {label:'Enquired product', key:'enquired_product'},\n        {label:'Enquired product hsn code', key:'enquired_product_hsn_code'},\n        {label:'Enquired date', key:'enquiry_date'},\n        {label:'Final status', key:'final_status'},\n        {label:'Follow up call', key:'follow_up_call'},\n        {label:'Phone number', key:'phone_number'},\n        {label:'Quantity', key:'quantity'}\n      ];\n      const csvReport = {\n        filename:'CustomerReports.csv',\n        headers:headers,\n        data:tabledata\n      }\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    const displayCustomerFollowUpData = () => {\n        api.get('customer/displayCustomerFollowUpData')\n        .then((res)=>{\n            setTableDataEvent(res.data);\n              setfilterflag(true);\n        })\n    }\n    useEffect(()=>{\n        if (searchvalue === \"\"){\n            displayCustomerFollowUpData();\n        }\n    },[searchvalue])\n    const statusfiltercustomerdata = () => {\n        api.post('customer/statusfiltercustomerdata',{\n            params:{\n                status:currentstatus\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n  }\n  const searchHandle = (e) => {\n    setSearchvalue(e.target.value);\n  }\n  const searchclicked = () => {\n    api.post('customer/getCustomerFollowUpDataCustomer',{\n        params:{\n            searchvalue\n        }\n    })\n    .then((res)=>{\n        setTableDataEvent(res.data);\n    })\n  }\n    return(\n        <div>\n             <OpenModal \n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayCustomerFollowUpData={displayCustomerFollowUpData}\n                rowdata={rowdata} \n            />\n            <CustomizedSearchBar \n                labelname=\"customer :- phone number / name\"\n                Btnname=\"search\"\n                onHandleChangeEvent={searchHandle}\n                goEventClicked={searchclicked}\n            />\n            <div>\n                {\n                    tabledata && tabledata.length ? \n                    <CSVLink {...csvReport}><CustomizedDownload/></CSVLink> : null\n                }\n                {/* <CustomizedPrint /> */}\n            </div>\n            <div className='table-responsive'>\n                <table className='table table-striped table-bordered tablebackground'>\n                    <thead className='theadalter'>\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Enquiry Date</th>\n                            <th>Customer Name</th>\n                            <th>Customer Address</th>\n                            <th>Phone Number</th>\n                            <th>Enquired Product Hsn Code</th>\n                            <th>Enquired Product</th>\n                            <th>Quantity</th>\n                            <th>Comments</th>\n                            <th>Follow Up Call </th>\n                            <th>Final Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            tabledata && tabledata.length \n                            ? tabledata.map((data, i)=>(\n                                <tr key={i}>\n                                <td>{data.customer_reference_no} </td>\n                                <td>\n                                    {\n                                        data.enquiry_date != null ?\n                                        moment(data.enquiry_date).format('YYYY-MM-DD'):\n                                        data.enquiry_date\n                                    }\n                                </td>\n                                <td>{data.customer_name}</td>\n                                <td>{data.customer_address} </td>\n                                <td>{data.phone_number} </td>\n                                <td>{data.product_hsn_code} </td>\n                                <td>{data.product} </td>\n                                <td>{data.quantity} </td>\n                                <td>{data.comments} </td>\n                                <td>\n                                    {\n                                        data.follow_up_call != null ? \n                                        moment(data.follow_up_call).format('YYYY-MM-DD'):\n                                        data.follow_up_call\n                                    } \n                                </td>\n                                <td>{data.final_status} </td>\n                                <td>\n                                <CustomizedEditIcon \n                                    onClick={()=>{\n                                        rowdataevent(data);\n                                        setmodalview(\"customerfollowupform\");\n                                        openevent(true);\n                                    }}\n                                />\n                                </td>\n                            </tr>\n                            ))\n                            : \n                                <tr>\n                                    <td colSpan={12}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DisplayCustomerTable;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedEditIcon/CustomizedEditIcon.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable.js",["754","755","756","757"],[],"import React, { useState, useEffect } from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from '../OpenModal/OpenModal';\nimport CustomizedEditIcon from \"../../atoms/CustomizedEditIcon/CustomizedEditIcon\";\nimport { CSVLink } from \"react-csv\";\nimport CustomizedDownload from \"../../atoms/CustomizedDownload/CustomizedDownload\";\nimport moment from 'moment';\n\nconst DisplayDeliveryReportsTable = ({\n    deliverystatus,\n    paymentstatus,\n    setTableDataEvent,\n    tabledata,\n    api\n}) => {\n    const [filterflag, setfilterflag] = useState(false);\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [rowdata, setrowdata] = useState({});\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(() => {\n        if (filterflag && deliverystatus && paymentstatus) {\n            statusfilterdeliveryreport();\n        } else {\n            displayDeliveryReportsData();\n        }\n    }, [deliverystatus, paymentstatus])\n    useEffect(()=>{\n        if (paymentstatus){\n            paymentstatusfilteronly();\n        }\n    },[paymentstatus])\n    useEffect(()=>{\n        if(deliverystatus){\n            deliverystatusfilteronly();\n        }\n    },[deliverystatus])\n    const headers = [\n        { label: 'customer reference no', key: 'customer_reference_no' },\n        { label: 'booked date', key: 'booked_date' },\n        { label: 'requested delivery date', key: 'requested_delivery_date' },\n        { label: 'delivery date', key: 'delivery_date' },\n        { label: 'invoice no', key: 'invoice_no' },\n        { label: 'customer address', key: 'customer_address' },\n        { label: 'gst', key: 'gst' },\n        { label: 'phone number', key: 'phone_number' },\n        { label: 'product hsn code', key: 'product_hsn_code' },\n        { label: 'product', key: 'product' },\n        { label: 'quantity', key: 'quantity' },\n        { label: 'rate', key: 'rate' },\n        { label: 'discount', key: 'discount' },\n        { label: 'cgst', key: 'cgst' },\n        { label: 'sgst', key: 'sgst' },\n        { label: 'igst', key: 'igst' },\n        { label: 'final amount', key: 'final_amount' },\n        { label: 'balance amount', key: 'balance_amount' },\n        { label: 'payment status', key: 'payment_status' },\n        { label: 'booking advance amount', key: 'booking_advance_amount' },\n        { label: 'delivery status', key: 'delivery_status' },\n        { label: 'customer name', key: 'customer_name' },\n    ];\n    const csvReport = {\n        filename: 'DeliveryReports.csv',\n        headers: headers,\n        data: tabledata\n    }\n    const displayDeliveryReportsData = () => {\n        api.get('delivery/displayDeliveryReportsData')\n        .then((res)=>{\n            setTableDataEvent(res.data);\n            setfilterflag(true);\n        })\n    }\n    const statusfilterdeliveryreport = () => {\n        api.post('delivery/statusfilterdeliveryreport',{\n            params:{\n                deliverystatus: deliverystatus,\n                paymentstatus: paymentstatus\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const paymentstatusfilteronly = () => {\n        api.post('delivery/paymentstatusfilteronly',{\n            params:{\n                paymentstatus: paymentstatus\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const deliverystatusfilteronly = () => {\n        api.post('delivery/deliverystatusfilteronly',{\n            params:{\n                deliverystatus: deliverystatus,\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const searchHandle = (e) => {\n        setSearchvalue(e.target.value);\n    }\n    const searchclicked = () => {\n        api.post('delivery/getDeliveryReportData',{\n            params:{\n                phoneno: searchvalue,\n                customer_name: searchvalue\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    useEffect(() => {\n        if (searchvalue === \"\") {\n            displayDeliveryReportsData();\n        }\n    }, [searchvalue])\n    return (\n        <div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayDeliveryReportsData={displayDeliveryReportsData}\n                rowdata={rowdata}\n            />\n            <CustomizedSearchBar\n                labelname=\"customer :- phone number / name\"\n                Btnname=\"search\"\n                onHandleChangeEvent={searchHandle}\n                goEventClicked={searchclicked}\n            />\n            <div>\n                {\n                    tabledata && tabledata.length ?\n                        <CSVLink {...csvReport}><CustomizedDownload /></CSVLink> : null\n                }\n            </div>\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Product Sl Number</th>\n                            <th>Booked Date</th>\n                            <th>Requested Delivery Date</th>\n                            <th>Delivery Date</th>\n                            <th>Invoice Number</th>\n                            <th>Customer Name </th>\n                            <th>Customer Address</th>\n                            <th>GSTIN/UIN:</th>\n                            <th>Phone number</th>\n                            <th>Product HSN Code </th>\n                            <th>Product</th>\n                            <th>Quantity</th>\n                            <th>Rate</th>\n                            <th>Discount</th>\n                            <th>CGST</th>\n                            <th>SGST</th>\n                            <th>IGST</th>\n                            <th>Final Amount</th>\n                            <th>Balance Amount</th>\n                            <th>Payment status </th>\n                            <th>Booking Advance Amount</th>\n                            <th>Delivery Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            tabledata && tabledata.length \n                            ? tabledata.map((data, i) => (\n                                <tr key={i}>\n                                    <td>{data.customer_reference_no}</td>\n                                    <td>{data.product_sl_no}</td>\n                                    <td>\n                                        {\n                                            data.booked_date != null ?\n                                            moment(data.booked_date).format('YYYY-MM-DD'):\n                                            data.booked_date \n                                        }\n                                    </td>\n                                    <td>\n                                        {\n                                            data.requested_delivery_date != null ?\n                                            moment(data.requested_delivery_date).format('YYYY-MM-DD'):\n                                            data.requested_delivery_date \n                                        }\n                                    </td>\n                                    <td>\n                                        {\n                                            data.delivery_date != null ?\n                                            moment(data.delivery_date).format('YYYY-MM-DD'):\n                                            data.delivery_date\n                                        }\n                                    </td>\n                                    <td>{data.invoice_no}</td>\n                                    <td>{data.customer_name}</td>\n                                    <td>{data.customer_address}</td>\n                                    <td>{data.gst}</td>\n                                    <td>{data.phone_number}</td>\n                                    <td>{data.product_hsn_code}</td>\n                                    <td>{data.product}</td>\n                                    <td>{data.quantity}</td>\n                                    <td>{data.rate}</td>\n                                    <td>{data.discount}</td>\n                                    <td>{data.cgst}</td>\n                                    <td>{data.sgst}</td>\n                                    <td>{data.igst}</td>\n                                    <td>{data.final_amount}</td>\n                                    <td>{data.balance_amount}</td>\n                                    <td>{data.payment_status}</td>\n                                    <td>{data.booking_advance_amount}</td>\n                                    <td>{data.delivery_status}</td>\n                                    <td>\n                                    <CustomizedEditIcon\n                                        onClick={() => { \n                                            rowdataevent(data);\n                                            setmodalview(\"deliverydetailsform\");\n                                            openevent(true);\n                                            }}\n                                    />\n                                    </td>\n                                </tr>\n                            ))\n                            : \n                                <tr>\n                                    <td colSpan={23}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DisplayDeliveryReportsTable;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable.js",["758","759","760","761","762","763"],[],"import React,{useState, useEffect} from 'react';\nimport CustomizedEditIcon from '../../atoms/CustomizedEditIcon/CustomizedEditIcon';\nimport OpenModal from '../OpenModal/OpenModal';\nimport CustomizedSearchBar from '../../atoms/CustomizedSearchBar/CustomizedSearchBar';\nimport CustomizedDeleteIcon from '../../atoms/CustomizedDeleteIcon/CustomizedDeleteIcon';\nimport CustomizedBtn from '../../atoms/CustomizedBtn/CustomizedBtn';\nimport axios from 'axios';\nimport '../../../style/style.css';\n\nconst DisplayProductDetailsTable = ({\n    currentstatus,  \n}) => {\n    const [productsdetailsdata, setProductsdetailsdata] = useState({});\n    const [filterflag, setfilterflag] = useState(false);\n    const [editRow, setEditRow] = useState(null);\n    const [rowdata, setrowdata] = useState({});\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    const [editFormData, setEditFormData] = useState({\n        product_hsn_code:\"\",\n        product_name:\"\",\n        product_description:\"\",\n        unit_of_measure:\"\",\n        rate_per_unit:\"\",\n        gst_rate:\"\",\n        product_status:\"\",\n        stock:\"\"\n    })\n    useEffect(()=>{\n        if(filterflag && currentstatus){\n            productstatusfilter();\n        }\n        else {\n            displayProductDetailsData();\n        }\n    },[currentstatus])\n    const modalviewchange = () =>{\n        setChangedmodalview(\"addproductform\");\n    }\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    const displayProductDetailsData = () => {\n        axios.get(`http://localhost:3000/product/displayProductDetailsData`)\n        .then((res)=>{\n            setProductsdetailsdata(res.data);\n            setfilterflag(true);\n        })\n    }\n    useEffect(()=>{\n        if (searchvalue === \"\"){\n            displayProductDetailsData();\n        }\n    },[searchvalue])\n    const productstatusfilter = () => {\n        axios.post(`http://localhost:3000/product/productstatusfilter`,{\n            params:{\n                status:currentstatus\n            }\n        })\n        .then((res)=>{\n            setProductsdetailsdata(res.data);\n        })\n    }\n    const editevent = (event, data ) => {\n        setEditRow(data.product_hsn_code);\n        const formValues = {\n            product_hsn_code:data.product_hsn_code,\n            product_name:data.product_name,\n            product_description:data.product_description,\n            unit_of_measure:data.unit_of_measure,\n            rate_per_unit:data.rate_per_unit,\n            gst_rate:data.gst_rate,\n            product_status:data.product_status,\n            stock:data.stock\n        }\n        setEditFormData(formValues);\n    }\n    const deleteevent = (id) => {\n        axios.delete(`http://localhost:3000/product/deletefromproductdetailstable`, \n        { \n            data: { \n                id:id \n            }\n         })\n         .then((res)=>{\n                displayProductDetailsData();\n         })\n    }\n    const searchHandle = (e) => {\n        setSearchvalue(e.target.value);\n      }\n      const searchclicked = () => {\n        axios.post(`http://localhost:3000/product/getProductDetailsData`,{\n            params:{\n                product_name:searchvalue,\n                product_hsn:searchvalue\n            }\n        })\n        .then((res)=>{\n            setProductsdetailsdata(res.data);  \n        })\n      }\n    return(\n        <div>\n            <OpenModal \n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayProductDetailsData={displayProductDetailsData}\n                rowdata={rowdata}\n            />\n            <CustomizedSearchBar \n            labelname=\"product name / product hsn\"\n            Btnname=\"search\"\n            onHandleChangeEvent={searchHandle}\n            goEventClicked={searchclicked}\n            />\n            <div className='adddealersbtnstyle'>\n                <CustomizedBtn \n                    BtnName=\"Add Product\"\n                    onClick={()=>{\n                        setmodalview(\"addproductform\");\n                        openevent(true);\n                    }}\n                />\n            </div>\n            <div className='table-responsive'>\n                <form>\n                    <table className='table table-striped table-bordered tablebackground'>\n                        <thead className='theadalter'>\n                            <tr>\n                                <th>Product HSN code</th>\n                                <th>Product Name</th>\n                                <th>Product Description</th>\t\n                                <th>Unit of Measure</th>\n                                <th>Rate per unit (₹)</th>\n                                <th>GST Rate (%)</th>\n                                <th>Product Status</th>\t\n                                <th>Product Discount (%)</th>\n                                <th>Stock</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                productsdetailsdata && productsdetailsdata.length \n                                ? productsdetailsdata.map((data)=>(\n                                    <tr>\n                                        <td>{data.product_hsn_code}</td>\n                                        <td>{data.product_name}</td>\n                                        <td>{data.product_description}</td>\n                                        <td>{data.unit_of_measure}</td>\n                                        <td>{data.rate_per_unit}</td>\n                                        <td>{data.gst_rate}</td>\n                                        <td>{data.product_status}</td>\n                                        <td>{data.discount}</td>\n                                        <td>{data.stock}</td>\n                                        <td>\n                                            <div className='editdeletecontainer'>\n                                                <CustomizedEditIcon \n                                                    onClick={()=>{\n                                                        rowdataevent(data);\n                                                        setmodalview(\"productdetailsform\");\n                                                        openevent(true);\n                                                    }}\n                                                />\n                                                <CustomizedDeleteIcon onClick={()=>(deleteevent(data.product_hsn_code))} />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                ))\n                                : \n                                    <tr>\n                                        <td colSpan={9}>No Record!</td>\n                                    </tr>\n                            }\n                            \n                        </tbody>\n                    </table>\n                </form>\n            </div>\n        </div>\n    );\n}\nexport default DisplayProductDetailsTable;\n","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDeleteIcon/CustomizedDeleteIcon.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable.js",["764","765","766","767"],[],"import React,{useState, useEffect} from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from '../OpenModal/OpenModal';\nimport CustomizedEditIcon from \"../../atoms/CustomizedEditIcon/CustomizedEditIcon\";\nimport CustomizedDeleteIcon from \"../../atoms/CustomizedDeleteIcon/CustomizedDeleteIcon\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport '../../../style/style.css';\n\nconst DisplayDealersDetailsTable = ({\n    currentstatus,\n    api\n}) => {\n    const [dealersdetailsdata, setDealersdetailsdata] = useState({});\n    const [filterflag, setfilterflag] = useState(false);\n    const [rowdata, setrowdata] = useState({});\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(()=>{\n        if(filterflag && currentstatus){\n            gstinstatusfilterdealersdata();\n        }else {\n            displayDealersDetailsData();\n        }\n    },[currentstatus])\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    const displayDealersDetailsData = () => {\n        api.get('dealers/displayDealersDetailsData')\n        .then((res)=>{\n            setDealersdetailsdata(res.data);\n            setfilterflag(true);\n        })\n    }\n    useEffect(()=>{\n        if (searchvalue === \"\"){\n            displayDealersDetailsData();\n        }\n    },[searchvalue])\n    const gstinstatusfilterdealersdata = () => {\n        api.post('dealers/gstinstatusfilterdealersdata',{\n            params:{\n                status:currentstatus\n            }\n        })\n        .then((res)=>{\n            setDealersdetailsdata(res.data);\n        })\n    }\n    const searchHandle = (e) => {\n        setSearchvalue(e.target.value);\n      }\n      const modalviewchange = () =>{\n        setChangedmodalview(\"adddealersform\");\n    }\n      const searchclicked = () => {\n        api.post('dealers/gstinstatusfilterdealersdata',{\n            params:{\n                proprietor_name:searchvalue,\n                proprietor_phone_number:searchvalue\n            }\n        })\n        .then((res)=>{\n            setDealersdetailsdata(res.data);\n        })\n      }\n      const deleteevent = (id) => {\n        api.delete(`http://localhost:3000/dealers/deletefromdealersdetailstable`, \n        { \n            data: { \n                id:id \n            }\n         })\n         .then((res)=>{\n            displayDealersDetailsData();\n         })\n    }\n    return(\n        <div>\n             <OpenModal \n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayDealersDetailsData={displayDealersDetailsData}\n                rowdata={rowdata}\n            />\n            <CustomizedSearchBar \n            labelname=\"proprietor name /proprietor phone number\"\n            Btnname=\"search\"\n            onHandleChangeEvent={searchHandle}\n            goEventClicked={searchclicked}\n            />\n            <div className=\"adddealersbtnstyle\">\n                <CustomizedBtn \n                    BtnName=\"Add Dealers\"\n                    onClick={()=>{\n                        setmodalview(\"adddealersform\");\n                        openevent(true);\n                    }}\n                />\n            </div>\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>GSTIN Number</th>\n                            <th>Enterprise Name</th>\n                            <th>Enterprise Address</th>\n                            <th>Proprietor Name</th>\n                            <th>Proprietor Phone Number</th>\n                            <th>GSTIN Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            dealersdetailsdata && dealersdetailsdata.length \n                            ?  dealersdetailsdata.map((data, i)=> (\n                            <tr key={i}>\n                                <td>{data.gstin_number}</td>\n                                <td>{data.enterprise_name}</td>\n                                <td>{data.enterprise_address}</td>\n                                <td>{data.proprietor_name}</td>\n                                <td>{data.proprietor_phone_number}</td>\n                                <td>{data.gstin_status}</td>\n                                <td>\n                                    <div className=\"editdeletecontainer\">\n                                        <CustomizedEditIcon\n                                            onClick={()=>{\n                                                rowdataevent(data);\n                                                setmodalview(\"editdealersreport\");\n                                                openevent(true);\n                                            }}\n                                        />\n                                        <CustomizedDeleteIcon onClick={()=>(deleteevent(data.gstin_number))} />\n                                    </div>\n                                </td>\n                            </tr>\n                            ))\n                            : \n                                <tr>\n                                    <td colSpan={7}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DisplayDealersDetailsTable;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/Download/DownloadCustomer.js",["768","769","770","771","772","773","774","775","776","777","778","779"],[],"import React, { useState } from 'react';\nimport CustomizedText from '../../atoms/CustomizedText/CustomizedText';\nimport CustomizedDownload from '../../atoms/CustomizedDownload/CustomizedDownload';\nimport CustomizedDatepicker from '../../atoms/CustomizedDatepicker/CustomizedDatepicker';\nimport SearchIcon from '@mui/icons-material/Search';\nimport moment from 'moment';\nimport axios from 'axios';\nconst DownloadCustomer = ({setTableDataEvent}) => {\n  const [fromselecteddate, fromsetselecteddate] = useState('');\n  const [toselecteddate, tosetselecteddate] = useState('');\n  \n  const fromselecteddateevent = (e) => {\n    fromsetselecteddate(e);\n  }\n  const toselecteddateevent = (e) => {\n    tosetselecteddate(e);\n  }\n  const searchbuttonclicked = () => {\n    axios.post('http://localhost:3000/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromselecteddate,\n        todate:toselecteddate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const weeklysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n\n    var firstday = new Date(curr.setDate(first));\n    var lastday = new Date(curr.setDate(last));\n\n    firstday = firstday.toString();\n    firstday = firstday.split(\" \"); \n    var fromdate = firstday[3]+\"-\"+months[firstday[1]]+\"-\"+firstday[2];\n    \n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://localhost:3000/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const monthlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n\n    axios.post('http://localhost:3000/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const yearlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+\"01\"+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://localhost:3000/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n    return(\n        <div className='fromtodownloadlinkcontainer'>\n        <div className='fromtodownloadcontainer'>\n          <div className='fromcontainer'>\n            <CustomizedText textname=\"from :- \" />\n            <CustomizedDatepicker selecteddateevent={fromselecteddateevent} />\n          </div>\n          <div className='tocontainer'>\n            <CustomizedText textname=\"to :-\" />\n            <CustomizedDatepicker selecteddateevent={toselecteddateevent} />\n          </div>\n          <SearchIcon className='searchicon' onClick={searchbuttonclicked} />\n        </div>\n        <div>\n          <span className='atagfirst'>\n            <a href='#' onClick={weeklysearchclicked} >weekly</a> \n          </span>\n          <span className='atagsecond'>\n            <a href='#' onClick={monthlysearchclicked} >monthly</a>\n          </span>\n          <span className='atagthird'>\n            <a href='#' onClick={yearlysearchclicked} >yearly</a>\n          </span>\n        </div>\n        </div>\n\n    );\n}\nexport default DownloadCustomer;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/Download/DownloadDelivery.js",["780","781","782","783","784","785","786","787","788","789"],[],"import React, { useState } from 'react';\nimport CustomizedText from '../../atoms/CustomizedText/CustomizedText';\nimport CustomizedDatepicker from '../../atoms/CustomizedDatepicker/CustomizedDatepicker';\nimport SearchIcon from '@mui/icons-material/Search';\nimport axios from 'axios';\nimport '../../../style/style.css';\n\nconst DownloadDelivery = ({setTableDataEvent}) => {\n  const [fromselecteddate, fromsetselecteddate] = useState('');\n  const [toselecteddate, tosetselecteddate] = useState('');\n  \n  const fromselecteddateevent = (e) => {\n    fromsetselecteddate(e);\n  }\n  const toselecteddateevent = (e) => {\n    tosetselecteddate(e);\n  }\n  const searchbuttonclicked = () => {\n    axios.post('http://localhost:3000/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromselecteddate,\n        todate:toselecteddate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const weeklysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n\n    var firstday = new Date(curr.setDate(first));\n    var lastday = new Date(curr.setDate(last));\n\n    firstday = firstday.toString();\n    firstday = firstday.split(\" \"); \n    var fromdate = firstday[3]+\"-\"+months[firstday[1]]+\"-\"+firstday[2];\n    \n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://localhost:3000/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n\n  }\n  const monthlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://localhost:3000/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const yearlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay();\n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+\"01\"+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://localhost:3000/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n    return(\n        <div className='fromtodownloadlinkcontainer'>\n        <div className='fromtodownloadcontainer'>\n          <div className='fromcontainer'>\n            <CustomizedText textname=\"from :- \" />\n            <CustomizedDatepicker selecteddateevent={fromselecteddateevent} />\n          </div>\n          <div className='tocontainer'>\n            <CustomizedText textname=\"to :-\" />\n            <CustomizedDatepicker selecteddateevent={toselecteddateevent} />\n          </div>\n          <div >\n            <SearchIcon className='searchicon' onClick={searchbuttonclicked} />\n          </div>\n        </div>\n        <div>\n          <span className='atagfirst'>\n            <a href='#' onClick={weeklysearchclicked} >weekly</a> \n          </span>\n          <span className='atagsecond'>\n            <a href='#' onClick={monthlysearchclicked} >monthly</a>\n          </span>\n          <span className='atagthird'>\n            <a href='#' onClick={yearlysearchclicked} >yearly</a>\n          </span>\n        </div>\n        </div>\n\n    );\n}\nexport default DownloadDelivery;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDatepicker/CustomizedDatepicker.js",["790","791"],[],"import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\n\nconst CustomizedDatepicker = ({\n    type,\n    incomingdate,\n    selecteddateevent\n}) => {\n    const [date, setDate] = useState();\n    const resultDate=moment(incomingdate).format('YYYY-MM-DD');\n     useEffect(()=>{\n       setDate(resultDate);\n    },[])\n    return(\n        <div>\n            <input \n                name={type} \n                type=\"date\" \n                onChange={(e)=>{setDate(e.target.value); selecteddateevent(e.target.value)}}\n            />\n        </div>\n    );\n}\nexport default CustomizedDatepicker;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersInvoicesListForm/DealersInvoicesListForm.js",["792"],[],"import React, { useEffect, useState } from \"react\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport '../../../style/style.css';\nconst DealersInvoicesListForm = ({\n    deliveryinvoices,\n    api\n}) => {\n    const [fetchdealersdatatoverify, setfetchdealersdatatoverify] = useState();\n    const [verificationstatus, setverificationstatus] = useState();\n    const [currentInvoiceno, setcurrentInvoiceno] = useState();\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    const currentInvoicenoevent = (e) => {\n        setcurrentInvoiceno(e);\n    }\n    const fetchdealersdatatoverifyevent = (e) => {\n        api.post('delivery/fetchdealersdatatoverify', {\n            params: {\n                invoice_no: e\n            }\n        })\n            .then((res) => {\n                setfetchdealersdatatoverify(res.data);\n            })\n    }\n    useEffect(() => {\n        if (fetchdealersdatatoverify) {\n            api.put('jointables/updaterateofdeliverytableonbook', {\n                params: {\n                    data: fetchdealersdatatoverify\n                }\n            })\n                .then((res) => {\n                })\n            api.post('delivery/getstatecodefromdeliverytableonbook', {\n                params: {\n                    data: fetchdealersdatatoverify\n                }\n            })\n                .then((res) => {\n                    var data = res.data;\n                    for (var i = 0; i < data.length; i++) {\n                        if (data[i].state_code === 29) {\n                            api.put('jointables/updatekarnatakagstratesdeliverytableonbook', {\n                                params: {\n                                    data: fetchdealersdatatoverify\n                                }\n                            })\n                                .then((res) => {\n                                })\n                            api.put('jointables/updatefinalamountdeliverytableonbook', {\n                                params: {\n                                    data: fetchdealersdatatoverify\n                                }\n                            })\n                            api.put('/jointables/updatebalanceamountdeliverytableonbook',{\n                                params:{\n                                  data:fetchdealersdatatoverify\n                                }\n                              })\n                              api.put('/jointables/updatepaymentstatusdeliverytableonbook',{\n                                params:{\n                                  data:fetchdealersdatatoverify\n                                }\n                              })\n                        }\n                        else {\n                            api.put('jointables/updateotherstatesgstratesdeliverytableonbook', {\n                                params: {\n                                    data: fetchdealersdatatoverify\n                                }\n                            })\n                                .then((res) => {\n                                })\n                            api.put('jointables/updatefinalamountdeliverytableonbook', {\n                                params: {\n                                    data: fetchdealersdatatoverify\n                                }\n                            })\n                            api.put('/jointables/updatebalanceamountdeliverytableonbook',{\n                                params:{\n                                  data:fetchdealersdatatoverify\n                                }\n                              })\n                              api.put('/jointables/updatepaymentstatusdeliverytableonbook',{\n                                params:{\n                                  data:fetchdealersdatatoverify\n                                }\n                              })\n                        }\n                    }\n                })\n        }\n    }, [fetchdealersdatatoverify])\n    const fetchverificationstatusevent = (e) => {\n        api.post('delivery/getverificationstatus', {\n            params: {\n                invoice_no: e\n            }\n        })\n            .then((res) => {\n                setverificationstatus(res.data);\n            })\n    }\n    return (\n        <div>\n             <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                currentInvoiceno={currentInvoiceno}\n                verificationstatus={verificationstatus}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n            />\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered \">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Invoices List</th>\n                            <th>Action</th>\n                            <th>Generate</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            deliveryinvoices && deliveryinvoices.length\n                                ? deliveryinvoices.map((data) => (\n                                    <tr>\n                                        <td>{data.invoice_no}</td>\n                                        <td>\n                                            <CustomizedBtn \n                                                BtnName=\"Verify Invoice\"\n                                                onClick={()=>{\n                                                    fetchdealersdatatoverifyevent(data.invoice_no);\n                                                    fetchverificationstatusevent(data.invoice_no);\n                                                    currentInvoicenoevent(data.invoice_no);\n                                                    setModalview(\"dealersdetailsform\");\n                                                    openevent(true);\n                                                }}\n                                            />\n                                        </td>\n                                        <td>\n                                            <CustomizedBtn \n                                                BtnName=\"Download Invoice\"\n                                                onClick={()=>{\n                                                    setModalview(\"DealersInvoiceFormGenerateFormat\");\n                                                    openevent(true);\n                                                }}\n                                            />\n                                        </td>\n                                    </tr>\n                                ))\n                                : \n                                    <tr>\n                                        <td colSpan={3}>No Record!</td>\n                                    </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoicesListForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersDetailsForm/DealersDetailsForm.js",["793","794","795","796","797","798","799","800"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { purchasesuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from '../../atoms/CustomizedPrint/CustomizedPrint';\nimport axios from 'axios';\nimport '../../../style/style.css';\nconst DealersDetailsForm = ({\n  rowdata,\n  handleClose,\n  fetchdealersdatatoverify,\n  verificationstatus,\n  currentInvoiceno\n}) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [Rowdatadisplayed, setRowdatadisplayed] = useState();\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n  useEffect(() => {\n    fetchalldatafromcust();\n  }, [])\n  const fetchalldatafromcust = () => {\n    axios.post('http://localhost:3000/delivery/getalldataofcustomer', {\n        params: {\n          currentCustomerReferenceNo: currentInvoiceno\n        }\n      })\n        .then((res) => {\n          setRowdatadisplayed(res.data);\n        })\n  }\n  useEffect(() => {\n    if (fetchdealersdatatoverify) {\n      setUpdaterowdata(fetchdealersdatatoverify);\n    }\n  }, [fetchdealersdatatoverify])\n  const [finalverificationstatus, setfinalverificationstatus] = useState();\n  useEffect(() => {\n    if (verificationstatus) {\n      setfinalverificationstatus(verificationstatus[0].verification_status);\n    }\n  }, [verificationstatus])\n  const [constantinvoicedata, setconstantinvoicedata] = useState();\n  useEffect(() => {\n    if (fetchdealersdatatoverify) {\n      const tempdata = [...new Set(fetchdealersdatatoverify.map((e) => e.customer_reference_no))];\n      tempdata.map((temp) => {\n        let filterByTempData = fetchdealersdatatoverify.filter(dataObject => dataObject.customer_reference_no === temp)\n        var fixedstrings = filterByTempData[0];\n        setconstantinvoicedata(fixedstrings);\n      })\n    }\n  }, [fetchdealersdatatoverify])\n  const submiteventclicked = () => {\n    let custrefno = \"\";\n    let statecode;\n    Rowdatadisplayed.map((data) => {\n      custrefno = data.customer_reference_no;\n      statecode = data.state_code;\n    })\n    axios.post('http://localhost:3000/delivery/setverificationstatus', {\n      params: {\n        customer_reference_no: custrefno\n      }\n    })\n      axios.put('http://localhost:3000/delivery/updatepurchasestatusofdeliverytable', {\n      params: {\n        customer_reference_no: custrefno\n      }\n    })\n      axios.put('http://localhost:3000/delivery/updateDeliveryDatafromdealersform', {\n      params: {\n        rowdatadisplayed: Rowdatadisplayed\n      }\n    })\n      axios.post('http://localhost:3000/jointables/calculaterateofdeliveryofdealers', {\n      params: {\n        rowdatadisplayed: Rowdatadisplayed\n      }\n    })\n    if (statecode == 29) {\n      axios.put('http://localhost:3000/jointables/updatekarnatakagstratesfromdealers', {\n        params: {\n          customer_reference_no: custrefno\n        }\n      })\n        axios.put('http://localhost:3000/jointables/updatefinalamountdeliveryfromdealers', {\n        params: {\n          customer_reference_no: custrefno\n        }\n      })\n        axios.put('http://localhost:3000/jointables/updatebalanceamountdeliveryfromdealers', {\n        params: {\n          rowdatadisplayed: Rowdatadisplayed\n        }\n      })\n        .then((res) => {\n          if (res) {\n            const res = purchasesuccessmsg({});\n            alert(res.msg);\n            handleClose();\n          }\n        })\n    }\n    else {\n      axios.put('http://localhost:3000/jointables/updateotherstatesgstratesfromdealers', {\n        params: {\n          customer_reference_no: custrefno\n        }\n      })\n        .then((res) => {\n        })\n        axios.put('http://localhost:3000/jointables/updatefinalamountdeliveryfromdealers', {\n        params: {\n          customer_reference_no: custrefno\n        }\n      })\n        .then((res) => {\n        })\n        axios.put('http://localhost:3000/jointables/updatebalanceamountdeliveryfromdealers', {\n        params: {\n          rowdatadisplayed: Rowdatadisplayed\n        }\n      })\n        .then((res) => {\n          if (res) {\n            const res = purchasesuccessmsg({});\n            alert(res.msg);\n            handleClose();\n          }\n        })\n    }\n  }\n  const changeevent = (event, index) => {\n    let updateRowDataByIndex = [...Rowdatadisplayed];\n    Rowdatadisplayed.find((item, i) => {\n      if (item.delivery_id === index) {\n        updateRowDataByIndex[i][event.target.name] = event.target.value;\n        setRowdatadisplayed(() => [...updateRowDataByIndex]);\n      }\n    })\n  }\n  return (\n    <div>\n      <div><CustomizedPrint\n        onClick={handlePrint}\n      />\n      </div>\n      <div ref={componentRef}>\n        <div className=\"formheading\">\n          <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n          <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,\n            Opp Anna\n            Building,Hosur Main Road Bangalore-560099,\n            <br></br>Mobile: 9035757145/9902880851/9141070705</p>\n        </div>\n        <div className=\"pageheading\">\n          Purchase Order\n        </div>\n        <form className=\"formcontainer\">\n          {\n            Rowdatadisplayed && Rowdatadisplayed.length\n              ? Rowdatadisplayed.map((data, i) => (\n                <>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        customer name:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.customer_name}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Customer address:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.customer_address}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Invoice no:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.invoice_no}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        GST:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.gst}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        phone number:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.phone_number}\n                          type=\"number\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        phone number (alter one):\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.phone_number_alter_one}\n                          type=\"number\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        phone number (alter two):\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.phone_number_alter_two}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Product:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.product}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        quantity:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.quantity}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        rate:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.rate}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        discount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.discount}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Rate After Extended Discount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.extended_discount}\n                          type=\"text\"\n                          onChange={(event) => changeevent(event, data.delivery_id)}\n                          name=\"extended_discount\"\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        cgst:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.cgst}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        sgst:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.sgst}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        igst:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.igst}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        final amount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.final_amount}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        balance amount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.balance_amount}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                      <label className=\"formdatalabelstyle\">\n                          <div className=\"formnamestyle\">\n                              Payment status:\n                          </div>\n                          <div className=\"formdatainputstyle\">\n                              <input\n                                  type=\"text\"\n                                  defaultValue={data.payment_status}\n                                  readOnly\n                              />\n                          </div> \n                      </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        advance amount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.booking_advance_amount}\n                          type=\"number\"\n                          onChange={(event) => changeevent(event, data.delivery_id)}\n                          name=\"booking_advance_amount\"\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        po number:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.po_number}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        vehicle number:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.vehicle_number}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"divider\"></div>\n                </>\n              ))\n              : <p>No Record!</p>\n          }\n        </form>\n      </div>\n      {\n        finalverificationstatus == 1\n          ? <p className=\"verificationstyle\">verification completed!</p>\n          : <div className=\"submitcontainee\">\n            <CustomizedBtn\n              BtnName=\"submit\"\n              onClick={submiteventclicked}\n            />\n          </div>\n      }\n    </div>\n  )\n}\nexport default DealersDetailsForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DeliveryDetailsForm/DeliveryDetailsForm.js",["801","802","803","804","805","806","807","808","809","810"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst DeliveryDetailsForm = ({ rowdata, handleClose }) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [paymentstatus, setpaymentstatus] = useState([\"Paid\", \"Pending\"]);\n  const [deliverstatus, setdeliverstatus] = useState([\"Delivered\", \"Not Delivered\", \"Cancelled\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const [comboboxdata, setComboboxdata] = useState();\n  useEffect(() => {\n    axios.get(`http://localhost:3000/product/displayProductDetailsDataforcombobox`)\n    .then((res)=>{\n      var data = res.data;\n      let productnamesarray = [];\n        data.map((d) => {\n          productnamesarray.push(d.product_name);\n        })\n        setComboboxdata(productnamesarray);\n    })\n  }, [])\n  const [updatedPaymentstatus, setupdatedPaymentstatus] = useState('');\n  const [updatedDeliverystatus, setupdatedDeliverystatus] = useState('');\n  const paymentstatusevent = (e) => {\n    setupdatedPaymentstatus(e);\n  }\n  const deliverystatusevent = (e) => {\n    setupdatedDeliverystatus(e);\n  }\n  const submiteventclicked = () => {\n    axios.put(`http://localhost:3000/delivery/updateDeliveryDetails`,{\n      params:{\n        updaterowdata\n      }\n    })\n    .then((res)=>{\n      if(res){\n        const res = editedsuccessmsg({});\n        alert(res.msg);\n        handleClose();\n      }\n    })\n  }\n  const selectevent = (event) =>{\n    setUpdaterowdata({ ...updaterowdata, \"delivery_status\": event.value })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Delivery Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Reference Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.customer_reference_no}\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Sl No:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_sl_no}\n                onChange={changeevent}\n                name=\"product_sl_no\"\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Booked Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n             <SelectDate\n              type=\"booked_date\"\n              typeOne=\"booked_date\"\n              incomingdate={\n                rowdata.booked_date != null ?\n                moment(rowdata.booked_date).format('YYYY-MM-DD'):\n                rowdata.booked_date\n              }\n              disable=\"yes\"\n            /> \n          </div>\n            \n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Requested Delivery Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <SelectDate\n              type=\"requested_delivery_date\"\n              typeOne=\"requested_delivery_date\"\n              incomingdate={\n                rowdata.requested_delivery_date != null ?\n                moment(rowdata.requested_delivery_date).format('YYYY-MM-DD'):\n                rowdata.requested_delivery_date\n              }\n              disable=\"yes\"\n            />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Delivery Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <SelectDate\n              type=\"delivery_date\"\n              typeOne=\"delivery_date\"\n              incomingdate={\n                rowdata.delivery_date != null ?\n                moment(rowdata.delivery_date).format('YYYY-MM-DD'):\n                rowdata.delivery_date\n              }\n              disable=\"yes\"\n            />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Invoice number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.invoice_no}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"customer_address\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_address}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number Alter (one):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number_alter_one}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number Alter (two):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number_alter_two}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Hsn Code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_hsn_code}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <input\n                defaultValue={rowdata.product}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Quantity:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.quantity}\n                type=\"number\"\n                name=\"quantity\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.rate}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.discount}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              CGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.cgst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              SGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.sgst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              IGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.igst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Final Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"final_amount\"\n                defaultValue={rowdata.final_amount}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Balance Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"balance_amount\"\n                defaultValue={rowdata.balance_amount}\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Payment Status:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <input\n                name=\"balance_amount\"\n                defaultValue={rowdata.payment_status}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Booking Advance Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"booking_advance_amount\"\n                onHandleChangeEvent={changeevent}\n                defaultValue={rowdata.booking_advance_amount}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Delivery Status:\n            </div>\n             <div className=\"formdatainputstyle\">\n             <CustomizedComboboxAll \n                comboboxdata={deliverstatus}\n                dvalue={rowdata.delivery_status}\n                selectevent={selectevent}\n              />\n            </div> \n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default DeliveryDetailsForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCombobox/CustomizedComboboxForAll.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/CustomerFollowUpForm/CustomerFollowUpForm.js",["811","812","813"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport axios from 'axios';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport '../../../style/style.css';\nimport moment from 'moment';\n\nconst CustomerFollowUpForm = ({\n  rowdata,\n  handleClose\n}) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [finalstatus, setfinalstatus] = useState([\"Booked\", \"Cancelled\", \"Follow Up In Progress\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const submiteventclicked = () => {\n    axios.put('http://localhost:3000/customer/updateCustomerDetails',{\n      params:{\n        updaterowdata\n      }\n    })\n    .then((res)=>{\n      if(res){\n        const res = editedsuccessmsg({});\n        alert(res.msg);\n        handleClose();\n      }\n    })\n  }\n  const selectevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, \"follow_up_call\": event })\n  }\n  const selectevent1 = (event) => {\n    setUpdaterowdata({ ...updaterowdata, \"final_status\":event.value })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Customer Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Reference No:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.customer_reference_no}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquiry Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <SelectDate\n                type=\"enquiry_date\"\n                typeOne=\"enquiry_date\"\n                incomingdate={\n                  rowdata.enquiry_date != null ?\n                  moment(rowdata.enquiry_date).format('YYYY-MM-DD'):\n                  rowdata.enquiry_date\n                }\n                disable=\"yes\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"customer_address\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_address}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired product hsn code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_hsn_code}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Quantity:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.quantity}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Comments:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"comments\"\n                onChange={changeevent}\n                value={rowdata.comments}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Follow up call:\n            </div>\n            <SelectDate\n                selectevent={selectevent}\n                typeOne=\"follow_up_call\"\n                incomingdate={\n                  rowdata.follow_up_call != null\n                        ? moment(rowdata.follow_up_call).format('YYYY-MM-DD')\n                        : rowdata.follow_up_call = rowdata.follow_up_call\n                }\n            />\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Final status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll\n                comboboxdata={finalstatus}\n                dvalue={rowdata.final_status}\n                selectevent={selectevent1}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default CustomerFollowUpForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/ProductsDetailsForm/ProductsDetailsForm.js",["814","815","816"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport '../../../style/style.css';\n\nconst ProductsDetailsForm = ({ rowdata, handleClose }) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [productstatus, setproductstatus] = useState([\"Available\", \"Not Available\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const submiteventclicked = () => {\n    axios.put('http://localhost:3000/product/updateProductsDetails', {\n      params: {\n        updaterowdata\n      }\n    })\n      .then((res) => {\n        if (res) {\n          const res = editedsuccessmsg({});\n          alert(res.msg);\n          handleClose();\n        }\n      })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [\"product_status\"]: event.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Product details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product HSN code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_hsn_code\"\n                defaultValue={rowdata.product_hsn_code}\n                onChange={changeevent}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.product_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Description:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_description\"\n                onChange={changeevent}\n                defaultValue={rowdata.product_description}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Unit of Measure:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"unit_of_measure\"\n                onChange={changeevent}\n                defaultValue={rowdata.unit_of_measure}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Rate per unit:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"rate_per_unit\"\n                onChange={changeevent}\n                defaultValue={rowdata.rate_per_unit}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              GST Rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gst_rate\"\n                onChange={changeevent}\n                defaultValue={rowdata.gst_rate}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll\n                  comboboxdata={productstatus}\n                  dvalue={rowdata.product_status}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"discount\"\n                onChange={changeevent}\n                defaultValue={rowdata.discount}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Stock:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"stock\"\n                onChange={changeevent}\n                defaultValue={rowdata.stock}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default ProductsDetailsForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedComboboxwithdefaultvalue/CustomizedComboboxwithdefaultvalue.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/EditDealersReportForm/EditDealersReportForm.js",["817","818"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport '../../../style/style.css';\nconst EditDealersReportForm = ({ rowdata, handleClose }) => {\n    const [updaterowdata, setUpdaterowdata] = useState();\n    const [dealerstatus, setdealerstatus] = useState([\"Active\", \"In Active\"]);\n    useEffect(() => {\n        setUpdaterowdata(rowdata);\n    }, [])\n    const submiteventclicked = (e) => {\n        axios.put('http://localhost:3000/dealers/updateDealersDetails', {\n            params: {\n                updaterowdata\n            }\n        })\n            .then((res) => {\n                if (res) {\n                    const res = editedsuccessmsg({});\n                    alert(res.msg);\n                    handleClose();\n                }\n            })\n    }\n    const changeevent = (event) => {\n        setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n    }\n    const selectevent = (event) => {\n        setUpdaterowdata({ ...updaterowdata, \"gstin_status\": event.value })\n    }\n    return (\n        <div>\n            <div className=\"pageheading\">\n                Edit Dealers Details\n            </div>\n            <form className=\"formcontainer\">\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Enterprise Name:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"enterprise_name\"\n                                defaultValue={rowdata.enterprise_name}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Enterprise Address:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"enterprise_address\"\n                                defaultValue={rowdata.enterprise_address}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Proprietor Name:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"proprietor_name\"\n                                defaultValue={rowdata.proprietor_name}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Proprietor Phone Number:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"proprietor_phone_number\"\n                                defaultValue={rowdata.proprietor_phone_number}\n                                onChange={changeevent}\n                                type=\"number\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            GSTIN Number:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                defaultValue={rowdata.gstin_number}\n                                type=\"text\"\n                                readOnly\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            GSTIN Status:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <CustomizedComboboxAll\n                                comboboxdata={dealerstatus}\n                                dvalue={rowdata.gstin_status}\n                                selectevent={selectevent}\n                                />\n                            {/* <CustomizedComboboxForAll\n                                comboboxdata={dealerstatus}\n                                selectevent={selectevent}\n                                selectedvalue={rowdata.gstin_status}\n                            /> */}\n                        </div>\n                    </label>\n                </div>\n                <div className=\"submitcontainee\">\n                    <CustomizedBtn\n                        BtnName=\"submit\"\n                        onClick={submiteventclicked}\n                    />\n                </div>\n            </form>\n        </div>\n    )\n}\nexport default EditDealersReportForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddDealersForm/AddDealersForm.js",["819","820","821","822","823"],[],"import React, { useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport { addedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxForAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxForAll\";\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport '../../../style/style.css';\nconst AddDealersForm = ({ handleClose }) => {\n  const [customerdata, setcustomerdata] = useState();\n  const [gststatus, setgststatus] = useState(['Active', 'In Active']);\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let updatedate = \"\";\n  let finalcurrentdate = \"\";\n  const currentDate = () => {\n    let date = new Date();\n    finalcurrentdate = moment(date).format('YYYY-MM-DD');\n  }\n  currentDate();\n  const submiteventclicked = () => {\n    axios.post(`http://localhost:3000/dealers/addDealersData`,{\n      params:{\n        data: customerdata\n      }\n    })\n    .then((res)=>{\n      if(res){\n        const res = addedsuccessmsg({})\n        alert(res.msg);\n        handleClose();\n      }\n    })\n  }\n  const changeevent = (event) => {\n    setcustomerdata({ ...customerdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setcustomerdata({ ...customerdata, \"gstin_status\": event.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Add Dealers Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              GSTIN Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gstin_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"enterprise_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"enterprise_address\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Proprietor address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"proprietor_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Proprietor phone number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"proprietor_phone_number\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              gst status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll \n                  comboboxdata={gststatus}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default AddDealersForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddProductForm/AddProductForm.js",["824","825","826"],[],"import React, { useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport { addedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport axios from 'axios';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport '../../../style/style.css';\nconst AddProductForm = ({ handleClose }) => {\n  const [customerdata, setcustomerdata] = useState();\n  const [productstatus, setproductstatus] = useState(['Available', 'Not Available']);\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let finalcurrentdate = \"\";\n  const currentDate = () => {\n    let date = new Date();\n    finalcurrentdate = moment(date).format('YYYY-MM-DD');\n  }\n  currentDate();\n  const submiteventclicked = () => {\n    axios.post('http://localhost:3000/product/addProductData', {\n      params: {\n        data: customerdata\n      }\n    })\n      .then((res) => {\n        if (res) {\n          const res = addedsuccessmsg({})\n          alert(res.msg);\n          handleClose();\n        }\n      })\n  }\n  const changeevent = (event) => {\n    setcustomerdata({ ...customerdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setcustomerdata({ ...customerdata, \"product_status\": event.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Add Product Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product hsn code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_hsn_code\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product description:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_description\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Unit of measure:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"unit_of_measure\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              rate per unit:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"rate_per_unit\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              gst rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gst_rate\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll \n                  comboboxdata={productstatus}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              stock:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"stock\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"discount\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default AddProductForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/Header/HeaderWithLogout.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/index.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/App.js",["827"],[],"import LoginPage from './pages/LoginPage/LoginPage';\nimport NavigationTiles from './pages/NavigationTiles/NavigationTiles';\nimport ViewInvoicePage from './pages/ViewInvoicePage/ViewInvoicePage';\nimport AddCustomerPage from './pages/AddCustomerPage/AddCustomerPage';\nimport GenerateInvoice from './pages/GenerateInvoice/GenerateInvoice';\nimport GenerateReport from './pages/GenerateReport/GenerateReport';\nimport Footer from './pages/Footer/Footer';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from 'react-router-dom';\nimport axios from 'axios';\nimport { useState } from 'react';\nconst api = axios.create({\n  baseURL: `http://3.84.110.201:3001/`\n})\nfunction App() {\n  const [logoutbtn, setlogoutbtn] = useState(false);\n  const logoutbuttonevent = (e) => {\n    setlogoutbtn(e);\n  }\n  return (\n    <Router>\n        <Routes>\n          <Route path=\"/\" element={<LoginPage \n                                      api={api} \n                                      logoutbuttonevent={logoutbuttonevent}\n                                    />\n                                  }\n          />\n          <Route path=\"/main\" element={<NavigationTiles/>}/>\n          <Route path=\"/viewinvoice\" element={<ViewInvoicePage\n                                        api={api}\n                                      />}\n          />\n          <Route path=\"/addcustomerpage\" element={<AddCustomerPage\n                                          api={api}\n                                        />}\n          />\n          <Route path=\"/generateinvoice\" element={<GenerateInvoice\n                                          api={api}\n                                        />}/>\n          <Route path=\"/generatereport\" element={<GenerateReport\n                                          api={api}\n                                        />}/>\n        </Routes>\n        <div>\n          <Footer />\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","/Users/rashmishrees/Desktop/sdd/src/reportWebVitals.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/pages/AddCustomerPage/AddCustomerPage.js",["828","829","830","831","832","833","834","835","836","837","838","839","840","841"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedSearchBar from \"../../components/atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport moment from 'moment';\nimport OpenModal from \"../../components/molecules/OpenModal/OpenModal\";\nimport '../../style/style.css';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport CustomizedBtn from \"../../components/atoms/CustomizedBtn/CustomizedBtn\";\nimport {useNavigate} from 'react-router-dom';\nconst AddCustomerPage = ({\n    api\n}) => {\n    let navigate = useNavigate();\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [customertable, setCustomertable] = useState([]);\n    const [currentCustomerReferenceNo, setCurrentCustomerReferenceNo] = useState('');\n    const [rowdataonbooking, setrowdataonbooking] = useState();\n    const [purchasestatus, setpurchasestatus] = useState();\n    const [bookingstatus, setbookingstatus] = useState();\n    const [searchData, setSearchData] = useState('');\n    const [modalview, setModalview] = useState('');\n    const [purchasemsg, setpurchasemsg] = useState();\n    const [query, setQuery] = useState('');\n    const setpurchasemsgevent = (e) =>{\n      setpurchasemsg(e)\n    }\n    const fetchpurchasestatusevent = (e) => {\n      api.post('/delivery/getpurchasestatus', {\n        params: {\n          e\n        }\n      })\n      .then((res) => {\n        setpurchasestatus(res.data);\n      })\n    }\n    const fetchbookingstatusevent = (e) => {\n      api.post('/delivery/getbookingstatus', {\n        params: {\n          e\n        }\n      })\n      .then((res) => {\n        setbookingstatus(res.data);\n      })\n    }\n    const currentCustomerRefNo = (e) => {\n        setCurrentCustomerReferenceNo(e)\n    }\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(() => {\n        displaycustomerfollowupevent();\n    }, [])\n    const fetchalldatafromcust = (currentCustomerReferenceNo) => {\n      api.post('/delivery/getalldataofcustomer', {\n        params: {\n          currentCustomerReferenceNo\n        }\n      })\n      .then((res) => {\n        const temprowdataonbooking = res.data;\n          api.put('/jointables/updaterateofdeliverytableonbook', {\n            params: {\n              data:temprowdataonbooking\n            }\n          })\n          api.post('/delivery/getstatecodefromdeliverytableonbook', {\n            params: {\n              data:temprowdataonbooking\n            }\n          })\n          .then((res) => {\n            const data = res.data;\n            for (var i =0; i< data.length; i++){\n              if (data[i].state_code === 29){\n                api.put('/jointables/updatekarnatakagstratesdeliverytableonbook', {\n                  params: {\n                    data:temprowdataonbooking\n                  }\n                })\n                api.put('/jointables/updatefinalamountdeliverytableonbook', {\n                  params: {\n                    data:temprowdataonbooking\n                  }\n                })\n                api.put('/jointables/updatebalanceamountdeliverytableonbook',{\n                  params:{\n                    data:temprowdataonbooking\n                  }\n                })\n                api.put('/jointables/updatepaymentstatusdeliverytableonbook',{\n                  params:{\n                    data:temprowdataonbooking\n                  }\n                })\n            }\n            else {\n              api.put('/jointables/updateotherstatesgstratesdeliverytableonbook', {\n                params: {\n                  data:temprowdataonbooking\n                }\n              })\n              api.put('/jointables/updatefinalamountdeliverytableonbook', {\n                params: {\n                  data:temprowdataonbooking\n                }\n              })\n              api.put('/jointables/updatebalanceamountdeliverytableonbook',{\n                params:{\n                  data:temprowdataonbooking\n                }\n              })\n              api.put('/jointables/updatepaymentstatusdeliverytableonbook',{\n                params:{\n                  data:temprowdataonbooking\n                }\n              })\n          }\n            }\n          })\n          alert(\"Updated successfully\")\n      })\n    }\n    const fetchupdateddatafromcust = (currentCustomerReferenceNo) => {\n      api.post('/delivery/getalldataofcustomer', {\n        params: {\n          currentCustomerReferenceNo\n        }\n      })\n      .then((res) => {\n        setrowdataonbooking(res.data);\n      })\n    }\n    const displaycustomerfollowupevent = () => {\n      api.get('/customer/displayCustomerFollowUpData', {})\n        .then((res) => {\n          const data = res.data;\n          const tempdata = [...new Set(data.map((e) => e.customer_reference_no))];\n          const tabledata = tempdata.map((temp) => {\n              let filterByTempData = data.filter(dataObject => dataObject.customer_reference_no === temp)\n              var fixedstrings = filterByTempData[0];\n              let displayString = filterByTempData.map((x) => {\n                  return x.product + '-' + x.quantity + '(Nos)'\n              })\n              return {\n                  ...fixedstrings,\n                  displayDetails: displayString\n              }\n          })\n          setCustomertable(tabledata);\n        })\n    }\n    const modalviewchange = () => {\n        setChangedmodalview(\"addcustomerform\");\n    }\n    let finalCustomerRefNo = '';\n    const generateCustomerReferenceNo = () => {\n        let s1 = \"CUST2022\";\n        let min = 0;\n        let max = 1000;\n        let random = Math.floor(Math.random() * (max - min + 1)) + min;\n        finalCustomerRefNo = s1 + random;\n    }\n    generateCustomerReferenceNo();\n    let finalcurrentdate = \"\";\n    const currentDate = () => {\n        let date = new Date();\n        finalcurrentdate = moment(date).format('YYYY-MM-DD');\n    }\n    currentDate();\n    useEffect(() => {\n        if (searchData === \"\") {\n            displaycustomerfollowupevent();\n        }\n    }, [searchData])\n    const goEventClicked = () => {\n      api.post('/customer/getCustomerFollowUpData', {\n        params: {\n          searchData\n        }\n      }\n      )\n        .then((res) => {\n          const custdata = res.data;\n          const tempdata = [...new Set(custdata.map((e) => e.customer_reference_no))];\n          const tabledata = tempdata.map((temp) => {\n              let filterByTempData = custdata.filter(dataObject => dataObject.customer_reference_no === temp)\n              var fixedstrings = filterByTempData[0];\n              let displayString = filterByTempData.map((x) => {\n                  return x.product + '-' + x.quantity + '(Nos)'\n              })\n              return {\n                  ...fixedstrings,\n                  displayDetails: displayString\n              }\n          })\n          setCustomertable(tabledata)\n        })\n    }\n    const onHandleChangeEvent = (event) => {\n        setSearchData(event.target.value);\n    }\n    // console.log(customertable.filter(user=>\n    //   user.customer_name.toLowerCase().includes(\"r\") ));\n  //   const handleKeypress = (e) => {\n  //     //it triggers by pressing the enter key\n  //   if (e.key === 'Enter') {\n  //     goEventClicked();\n  //     e.preventDefault();\n  //   }\n  // };\n    return (\n      <div>\n        <div>\n          <HeaderWithLogout/>\n        </div>\n        <div className=\"addcustpagecontainer\">\n          <div className=\"addcustpagesubcontainer\">\n            <div className=\"pageheading\">\n                Manage Customer Data\n            </div>\n            <div className=\"searchbarstyle\">\n              <input\n                type=\"text\"\n                placeholder=\"Phone Number / Customer Name\"\n                onChange={(e)=>setQuery(e.target.value)}\n              />\n            </div>\n            {/* <CustomizedSearchBar\n                onKeyPress={handleKeypress}\n                onHandleChangeEvent={onHandleChangeEvent}\n                goEventClicked={goEventClicked}\n                labelname=\"phone number/ customer name\"\n                Btnname=\"search\"\n            /> */}\n            <div className=\"modalandback\">\n              <CustomizedBtn \n              BtnName=\"Add Customer\"\n              onClick={()=>{\n                setModalview(\"addcustomerform\");\n                openevent(true);\n              }}\n              />\n                  <OpenModal\n                    api={api}\n                    modalview={modalview}\n                    displaycustomerfollowupevent={displaycustomerfollowupevent}\n                    open={open}\n                    openevent={openevent}\n                    purchasestatus={purchasestatus}\n                    bookingstatus={bookingstatus}\n                    currentCustomerReferenceNo={currentCustomerReferenceNo}\n                    setpurchasemsgevent={setpurchasemsgevent}\n                />\n                  <p className=\"backarrowcustomerpage\" onClick={() => { navigate('/main') }}><ArrowBackIcon /></p>\n            </div>\n            <p>\n                  {purchasemsg\n                      ? <p>{purchasemsg}</p>\n                      : <></>\n                  }\n              </p>\n            <div className='table-responsive tableContainer'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Enquiry Date</th>\n                            <th>Customer Name</th>\n                            <th>Customer Address</th>\n                            <th>Phone Number</th>\n                            <th>Phone Number Alter one</th>\n                            <th>Phone Number Alter two</th>\n                            <th>Enquired Product And Details</th>\n                            <th>Comments</th>\n                            <th>Follow Up Call </th>\n                            <th>Final Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            customertable && customertable.length\n                                ? customertable.filter((user=>\n                                  user.customer_name.toLowerCase().includes(query) || \n                                  user.phone_number.toString().includes(query) ||\n                                  user.phone_number_alter_one == query ||\n                                  user.phone_number_alter_two == query\n                                  )).map((data, i) => (\n                                    <tr key={i}>\n                                        <td>{data.customer_reference_no}</td>\n                                        <td>\n                                            {\n                                                data.booked_date != null ?\n                                                moment(data.booked_date).format('YYYY-MM-DD'):\n                                                data.booked_date\n                                            }\n                                        </td>\n                                        <td>{data.customer_name}</td>\n                                        <td>{data.customer_address}</td>\n                                        <td>{data.phone_number}</td>\n                                        <td>{data.phone_number_alter_one}</td>\n                                        <td>{data.phone_number_alter_two}</td>\n                                        <td>\n                                            <ul>\n                                                {\n                                                    data.displayDetails\n                                                        ?\n                                                        data.displayDetails.map((d) => (\n                                                            <li>{d}</li>\n                                                        ))\n                                                        : <></>\n                                                }\n                                            </ul>\n                                        </td>\n                                        <td>{data.comments}</td>\n                                        <td>{\n                                            data.follow_up_call != null ?\n                                            moment(data.follow_up_call).format('YYYY-MM-DD'):\n                                                data.follow_up_call\n                                        }\n                                        </td>\n                                        <td>{data.final_status}</td>\n                                        <td>\n                                          {data.final_status == \"Booked\" || data.final_status == \"Purchased\"\n                                          ? <CustomizedBtn \n                                          BtnName=\"View\"\n                                          onClick={()=>{\n                                            setModalview(\"customerdetailsform\");\n                                            currentCustomerRefNo(data.customer_reference_no);\n                                            fetchpurchasestatusevent(data.customer_reference_no);\n                                            fetchbookingstatusevent(data.customer_reference_no);\n                                            openevent(true);\n                                          }}\n                                          />\n                                          :\n                                          <div className=\"btndesign\">\n                                            <span className=\"cbtn\"><CustomizedBtn \n                                              BtnName=\"Update Booking\"\n                                              onClick={()=>{\n                                                fetchalldatafromcust(data.customer_reference_no);\n                                              }}\n                                              />\n                                              </span>\n                                              <span className=\"cbtn\"><CustomizedBtn \n                                              BtnName=\"Book Order\"\n                                              onClick={()=>{\n                                                currentCustomerRefNo(data.customer_reference_no);\n                                                // fetchalldatafromcust(data.customer_reference_no);\n                                                fetchupdateddatafromcust(data.customer_reference_no);\n                                                setModalview(\"customerdetailsform\");\n                                                openevent(true);\n                                              }}\n                                              />\n                                              </span>\n                                          </div>\n                                          }\n                                        </td>\n                                    </tr>\n                                ))\n                                : <tr>\n                                    <td colSpan={12}>No Record!</td>\n                                  </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n            </div>\n        </div>\n        </div>\n    );\n}\nexport default AddCustomerPage;","/Users/rashmishrees/Desktop/sdd/src/pages/ViewInvoicePage/ViewInvoicePage.js",["842","843","844","845","846","847","848"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedSearchBar from '../../components/atoms/CustomizedSearchBar/CustomizedSearchBar';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport OpenModal from '../../components/molecules/OpenModal/OpenModal';\nimport { useNavigate } from 'react-router-dom';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport CustomizedBtn from \"../../components/atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport FullScreenModal from \"../../components/molecules/FullScreenModal/FullScreenModal\";\nimport '../../style/style.css';\nimport Button from '@mui/material/Button';\n\nconst ViewInvoicePage = ({\n    api\n}) => {\n    const [invoiceData, setInvoiceData] = useState([]);\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [searchData, setSearchData] = useState('');\n    const [modalview, setModalview] = useState('');\n    const [query, setQuery] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    let navigate = useNavigate();\n    const onHandleChangeEvent = (event) => {\n        setSearchData(event.target.value);\n    }\n    useEffect(()=>{\n        api.get('/delivery/getInvoices')\n        .then((res) => {\n            setInvoiceData(res.data);\n        })\n    },[])\n    // const goEventClicked = () => {\n    //     api.post('/delivery/getInvoices', {\n    //         params: {\n    //             searchData\n    //         }\n    //     }\n    //     )\n    //     .then((res) => {\n    //         setInvoiceData(res.data);\n    //     })\n    // }\n    // const handleKeypress = (e) => {\n    //     //it triggers by pressing the enter key\n    //   if (e.key === 'Enter') {\n    //     goEventClicked();\n    //     e.preventDefault();\n    //   }\n    // };\n    const openinvoiceevent = (invoiceNo) => {\n        api.post('/delivery/getDeliveryReportData', {\n            params: {\n                invoiceNo\n            }\n        }\n        )\n            .then((res) => {\n                setInvoiceFormData(res.data);\n            })\n    }\n    return (\n        <div>\n            <div>\n                <HeaderWithLogout />\n            </div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                invoiceFormData={invoiceFormData}\n            />\n            <div className=\"viewInvoicePageContainer\">\n                <div className=\"pageheading\">\n                    View Your Invoices\n                </div>\n                <div className=\"searchbarstyle\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Phone Number / Customer Name\"\n                    onChange={(e)=>setQuery(e.target.value)}\n                />\n                </div>\n                {/* <CustomizedSearchBar\n                    onHandleChangeEvent={onHandleChangeEvent}\n                    onKeyPress={handleKeypress}\n                    type=\"search\"\n                    goEventClicked={goEventClicked}\n                    labelname=\"phone number / Invoice Number\"\n                    Btnname=\"search\"\n                /> */}\n                <div className=\"displayContainer\">\n                    <div className=\"backarrow\">\n                        <p\n                            onClick={() => {\n                                navigate(\"/main\");\n                            }}\n                        ><ArrowBackIcon /></p>\n                    </div>\n                    <div className=\"table-responsive\">\n                        {\n                            invoiceData.length != 0 &&\n                            <table className=\"table table-striped table-bordered\">\n                                <thead className=\"theadalter\">\n                                    <tr>\n                                        <th>Invoice date</th>\n                                        <th>Invoice no</th>\n                                        <th>Customer name</th>\n                                        <th>Phone Number</th>\n                                        <th>Phone Number Alter One</th>\n                                        <th>Phone Number Alter Two</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        invoiceData.filter((user=>\n                                            user.customer_name.toLowerCase().includes(query) ||\n                                            user.invoice_no.toString().includes(query)\n                                            )).map((data, i) => (\n                                            <tr key={i}>\n                                                <td>\n                                                    {\n                                                        data.delivery_date != null ?\n                                                        moment(data.delivery_date).format('YYYY-MM-DD'):\n                                                        data.delivery_date\n                                                    }\n                                                </td>\n                                                <td>{data.invoice_no}</td>\n                                                <td>{data.customer_name}</td>\n                                                <td>{data.phone_number}</td>\n                                                <td>{data.phone_number_alter_one}</td>\n                                                <td>{data.phone_number_alter_two}</td>\n                                                <td>\n                                                <div className='btnstyle'>\n                                                    <Button \n                                                        id=\"btn\"\n                                                        // type=\"button\" \n                                                        data-bs-toggle=\"modal\"\n                                                        data-bs-target=\"#exampleModal\"\n                                                        onClick={()=>{\n                                                            openinvoiceevent(data.invoice_no);\n                                                        }}\n                                                        // className=\"btnstyle\"\n                                                        >\n                                                            View Invoice\n                                                    </Button>\n                                                </div>\n                                                    <FullScreenModal \n                                                       api={api}\n                                                    //    modalview={modalview}\n                                                    //    open={open}\n                                                    //    openevent={openevent}\n                                                       invoiceFormData={invoiceFormData}                                                    />\n                                                {/* <CustomizedBtn \n                                                    BtnName=\"View Invoice\"\n                                                    onClick={()=>{\n                                                        openinvoiceevent(data.invoice_no);\n                                                        setModalview(\"invoiceformat\");\n                                                        openevent(true);\n                                                    }}\n                                                /> */}\n                                                </td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                        }\n                    </div>\n                    {\n                        invoiceData.length === 0 &&\n                        <p> no data found! </p>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default ViewInvoicePage;","/Users/rashmishrees/Desktop/sdd/src/pages/LoginPage/LoginPage.js",["849"],[],"import React, { useState } from \"react\";\nimport TextAndTextInput from \"../../components/molecules/TextAndTextInput/TextAndTextInput\";\nimport { useNavigate } from 'react-router-dom';\nimport Header from \"../Header/Header\";\nimport '../../style/style.css';\n\nconst LoginPage = ({ \n  api,\n  logoutbuttonevent\n }) => {\n  let navigate = useNavigate();\n  const [logindata, setlogindata] = useState();\n  const onChangeEvent = (event) => {\n    setlogindata({ ...logindata, [event.target.name]: event.target.value });\n  }\n  const onSubmitLogin = () => {\n    api.post('/users/login', {\n      params: {\n        logindata\n      }\n    }\n    )\n      .then((res) => {\n        if (res.data.length > 0) {\n          logoutbuttonevent(true);\n          navigate('/main');\n        }\n      })\n  }\n  return (\n    <div>\n      <div>\n        <Header />\n      </div>\n      <div className=\"loginPageContainer\">\n        <div className=\"loginPageContainerChild\">\n          <div className=\"usernameandpass\">\n            <TextAndTextInput\n              onChangeEvent={onChangeEvent}\n              type=\"username\"\n              typeofinput=\"text\"\n              textname=\"USER NAME:-\" />\n            <TextAndTextInput\n              onChangeEvent={onChangeEvent}\n              type=\"password\"\n              typeofinput=\"password\"\n              textname=\"PASSWORD:-\" />\n          </div>\n          <div className=\"loginPageBtnContainer\">\n            <a\n              onClick={() => {\n                onSubmitLogin();\n              }}\n            >\n              Login\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default LoginPage;","/Users/rashmishrees/Desktop/sdd/src/pages/NavigationTiles/NavigationTiles.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/pages/GenerateInvoice/GenerateInvoice.js",["850"],[],"/Users/rashmishrees/Desktop/sdd/src/pages/Footer/Footer.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/pages/GenerateReport/GenerateReport.js",["851","852","853","854","855","856"],[],"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport TextAndSelect from '../../components/molecules/TextAndSelect/TextAndSelect';\nimport DisplayCustomerTable from '../../components/molecules/DisplayCustomerTable/DisplayCustomerTable';\nimport DisplayDeliveryReportsTable from '../../components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable';\nimport DisplayProductDetailsTable from '../../components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable';\nimport DisplayDealersDetailsTable from '../../components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable';\nimport DownloadCustomer from '../../components/molecules/Download/DownloadCustomer';\nimport DownloadDelivery from '../../components/molecules/Download/DownloadDelivery';\nimport { useNavigate } from 'react-router-dom';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport '../../style/style.css';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  let navigate = useNavigate();\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\nconst GenerateReport = ({\n  modalview,\n  api\n}) => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const style = {\n    color: 'black'\n  }\n\n  const [statusselect, setstatusselect] = React.useState(['Booked', 'Cancelled', 'Follow Up In Progress']);\n  const [deliverystatus, setDeliverystatus] = React.useState(['Delivered', 'Not Delivered', 'Cancelled']);\n  const [paymentstatus, setpaymentstatus] = React.useState(['Paid', 'Pending']);\n  const [productstatus, setProductstatus] = React.useState(['Available', 'Not Available'])\n  const [gstinstatus, setGstinstatus] = React.useState(['Active', 'In Active']);\n  const [currentstatus, setCurrentstatus] = React.useState('');\n  const [currentstatusAlter, setCurrentstatusAlter] = React.useState('');\n  const [tabledata, setTabledata] = React.useState({});\n  const setTableDataEvent = (e) => {\n    setTabledata(e);\n  }\n  const currentStatusEvent = (e) => {\n    setCurrentstatus(e);\n  }\n  const currentPaymentStatusEvent = (e) => {\n    setCurrentstatusAlter(e)\n  }\n  let navigate = useNavigate();\n  return (\n    <div>\n      <div>\n        <HeaderWithLogout />\n      </div>\n      <div className=\"reportcontainer\">\n        <div className=\"pageheading\">\n          Generate Report\n        </div>\n        <div className=\"backarrow generatereportbackarrow\">\n          <p onClick={() => { navigate('/main') }}><ArrowBackIcon /></p>\n        </div>\n        <Box sx={{ width: '100%', color: 'white' }}>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <Tabs variant=\"scrollable\" value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n              <Tab style={style} label=\"Delivery Reports\" {...a11yProps(0)} />\n              <Tab style={style} label=\"Customer Follow Up Report\" {...a11yProps(1)} />\n              <Tab style={style} label=\"Product Details Report\" {...a11yProps(2)} />\n              <Tab style={style} label=\"Dealers Details Report\" {...a11yProps(3)} />\n            </Tabs>\n          </Box>\n          <TabPanel value={value} index={0}>\n            <div className='tabpanelheader'>\n              <DownloadDelivery\n                setTableDataEvent={setTableDataEvent}\n              />\n              <div classname=\"paymentdeliveryfiltercontainer\">\n                <TextAndSelect\n                  currentStatusEvent={currentPaymentStatusEvent}\n                  statusselect={paymentstatus}\n                  selectlabelname=\"Payment status\"\n                />\n                <TextAndSelect\n                  currentStatusEvent={currentStatusEvent}\n                  statusselect={deliverystatus}\n                  selectlabelname=\"Delivery status\"\n                />\n              </div>\n            </div>\n            <DisplayDeliveryReportsTable\n              api={api}\n              setTableDataEvent={setTableDataEvent}\n              tabledata={tabledata}\n              modalview={modalview}\n              deliverystatus={currentstatus}\n              paymentstatus={currentstatusAlter}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <div className='tabpanelheader'>\n              <DownloadCustomer\n                setTableDataEvent={setTableDataEvent}\n              />\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={statusselect}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayCustomerTable\n              api={api}\n              setTableDataEvent={setTableDataEvent}\n              modalview={modalview}\n              tabledata={tabledata}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <div className='tabpanelheader'>\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={productstatus}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayProductDetailsTable\n              api={api}\n              modalview={modalview}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={3}>\n            <div className='tabpanelheader'>\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={gstinstatus}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayDealersDetailsTable\n              api={api}\n              modalview={modalview}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n        </Box>\n      </div>\n    </div>\n  );\n}\nexport default GenerateReport;","/Users/rashmishrees/Desktop/sdd/src/pages/Header/HeaderWithLogout.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/pages/Header/Header.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/OpenModal/OpenModal.js",["857"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport InvoiceFormat from '../InvoiceFormat/InvoiceFormat';\nimport AddCustomersForm from '../AddCustomersForm/AddCustomersForm';\nimport AddFewCustomersForm from '../AddFewCustomersForm/AddFewCustomersForm';\nimport CustomerInvoiceForm from '../CustomerInvoiceForm/CustomerInvoiceForm';\nimport DealersInvoiceForm from '../DealersInvoiceForm/DealersInvoiceForm';\nimport DealersDetailsForm from '../DealersDetailsForm/DealersDetailsForm';\nimport ProductsDetailsForm from '../ProductsDetailsForm/ProductsDetailsForm';\nimport DeliveryDetailsForm from '../DeliveryDetailsForm/DeliveryDetailsForm';\nimport AddProductForm from '../AddProductForm/AddProductForm';\nimport AddDealersForm from '../AddDealersForm/AddDealersForm';\nimport CustomerFollowUpForm from '../CustomerFollowUpForm/CustomerFollowUpForm';\nimport DealersInvoiceFormGenerate from '../../molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate';\nimport DealersInvoicesListForm from '../../molecules/DealersInvoicesListForm/DealersInvoicesListForm';\nimport EditDealersReportForm from '../../molecules/EditDealersReportForm/EditDealersReportForm';\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 900,\n  height: 700,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  overflow: \"scroll\"\n};\nconst OpenModal = ({\n  api,\n  displayDealersDetailsData,\n  displayProductDetailsData,\n  displayDeliveryReportsData,\n  invoiceFormData,\n  modalbuttonname,\n  modalview,\n  rowdata,\n  currentCustomerReferenceNo,\n  displayCustomerFollowUpData,\n  displaycustomerfollowupevent,\n  custrefno,\n  openinvoiceevent,\n  invoiceno,\n  formdisplaydata,\n  dealersdata,\n  deliveryinvoices,\n  fetchdealersdatatoverify,\n  changeevent,\n  verificationstatus,\n  currentInvoiceno,\n  purchasestatus,\n  bookingstatus,\n  open,\n  openevent,\n  currentCustomerReferenceNoCustomerInvoice,\n  setpurchasemsgevent,\n  fetchinvoicesfromdelivery\n}) => {\n  const handleClose = () => {\n    openevent(false);\n    if (modalview === 'productdetailsform') {\n      displayProductDetailsData();\n    }\n    else if (modalview === 'deliverydetailsform') {\n      displayDeliveryReportsData();\n    }\n    else if (modalview === 'editdealersreport') {\n      displayDealersDetailsData();\n    }\n    else if (modalview === 'addproductform') {\n      displayProductDetailsData();\n    }\n    else if (modalview === 'adddealersform') {\n      displayDealersDetailsData();\n    }\n    else if (modalview === 'customerfollowupform') {\n      displayCustomerFollowUpData();\n    }\n    else if (modalview === 'customerdetailsform') {\n      displaycustomerfollowupevent();\n    }\n    else if (modalview === 'addcustomerform') {\n      displaycustomerfollowupevent();\n    }\n  };\n  return (\n    <div>\n      <div className='modalbutton'>\n      </div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {\n              modalview === 'invoiceformat' &&\n              <InvoiceFormat\n                api={api}\n                invoiceFormData={invoiceFormData}\n                invoiceno={invoiceno}\n              />\n            }\n            {\n              modalview === 'customerdetailsform' &&\n              <AddCustomersForm\n                setpurchasemsgevent={setpurchasemsgevent}\n                api={api}\n                purchasestatus={purchasestatus}\n                bookingstatus={bookingstatus}\n                handleClose={handleClose}\n                displayCustomerFollowUpData={displayCustomerFollowUpData}\n                currentCustomerReferenceNo={currentCustomerReferenceNo}\n                displaycustomerfollowupevent={displaycustomerfollowupevent}\n              />\n            }\n            {\n              modalview === 'addcustomerform' &&\n              <AddFewCustomersForm\n                api={api}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'customerInvoiceForm' &&\n              <CustomerInvoiceForm\n                api={api}\n                invoiceFormData={invoiceFormData}\n                custrefno={custrefno}\n                currentCustomerReferenceNoCustomerInvoice={currentCustomerReferenceNoCustomerInvoice}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'DealersInvoiceForm' &&\n              <DealersInvoiceForm\n                api={api}\n                dealersdata={dealersdata}\n                invoiceFormData={invoiceFormData}\n                handleClose={handleClose}\n                formdisplaydata={formdisplaydata}\n              />\n            }\n            {\n              modalview === 'generatecustomerinvoiceform' &&\n              <InvoiceFormat\n                api={api}\n                invoiceFormData={invoiceFormData}\n                custrefno={custrefno}\n                openinvoiceevent={openinvoiceevent}\n              />\n            }\n\n            {\n              modalview === 'DealersInvoiceFormGenerateFormat' &&\n              <DealersInvoiceFormGenerate\n                api={api}\n                modalview={modalview}\n                invoiceFormData={invoiceFormData}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n              />\n            }\n            {\n              modalview === \"DealersInvoicesListForm\" &&\n              <DealersInvoicesListForm\n                api={api}\n                deliveryinvoices={deliveryinvoices}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === \"dealersdetailsform\" &&\n              <DealersDetailsForm\n                fetchinvoicesfromdelivery={fetchinvoicesfromdelivery}\n                api={api}\n                currentInvoiceno={currentInvoiceno}\n                verificationstatus={verificationstatus}\n                changeevent={changeevent}\n                handleClose={handleClose}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n              />\n            }\n            {\n              modalview === 'deliverydetailsform' &&\n              <DeliveryDetailsForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'customerfollowupform' &&\n              <CustomerFollowUpForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'productdetailsform' &&\n              <ProductsDetailsForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'editdealersreport' &&\n              <EditDealersReportForm\n                rowdata={rowdata}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'adddealersform' &&\n              <AddDealersForm\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'addproductform' &&\n              <AddProductForm\n                handleClose={handleClose}\n              />\n            }\n          </Typography>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\nexport default OpenModal;","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCard/CustomizedCard.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/TextAndTextInput/TextAndTextInput.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedBtn/CustomizedBtn.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedSearchBar/CustomizedSearchBar.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/organisms/DealersInvoice/DealersInvoice.js",["858","859","860","861","862"],[],"import React,{useState, useEffect} from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport DealersInvoicesListForm from \"../../molecules/DealersInvoicesListForm/DealersInvoicesListForm\";\nimport '../../../style/style.css';\n\nconst DealersInvoice = ({\n    searchData,\n    onHandleChangeEvent,\n    api\n}) => {\n    const [dealersDetails, setdealersDetails] = useState({});\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const [query, setQuery] = useState('');\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    const displayDealersDetailsDatawithstatusactiveevent = () =>{\n        api.get('dealers/displayDealersDetailsDatawithstatusactive')\n        .then((res)=>{\n            setdealersDetails(res.data);\n        })\n    }\n    useEffect(()=>{\n        displayDealersDetailsDatawithstatusactiveevent();\n    },[])\n    const openinvoiceevent = (gstin_number) => {\n        api.post('dealers/getdealersfromgst',{\n            params:{\n                gstin_Number:gstin_number\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n    }\n    const fetchdeliverydatamatchinggstevent = (gstin_number) => {\n        api.post('delivery/fetchdeliverymatchinggstno',{\n            params:{\n                gst:gstin_number\n            }\n        })\n        .then((res)=>{\n            if(res.data && res.data.length == 0){\n                res.data.push(\n                    {'state':''})\n            }\n            setInvoiceFormData(res.data);\n        })\n    }\n    useEffect(() => {\n        if (searchData === \"\") {\n            displayDealersDetailsDatawithstatusactiveevent();\n        }\n    }, [searchData])\n    const goEventClicked = () => {\n        api.post('dealers/getDealersDetailsData',{\n            params:{\n                searchData\n            }\n        })\n        .then((res)=>{\n            setdealersDetails(res.data);\n        })\n    }\n    const handleKeypress = (e) => {\n        //it triggers by pressing the enter key\n      if (e.key === 'Enter') {\n        goEventClicked();\n        e.preventDefault();\n      }\n    };\n    const [dealersdata,setdealersdata] = useState();\n    const dealersdataevent = (e) => {\n        setdealersdata(e)\n    };\n    const [deliveryinvoices, setdeliveryinvoices] = useState();\n    const fetchinvoicesfromdelivery = (e) => {\n        api.post('delivery/fetchinvoicesfromdelivery', {\n            params:{\n                gst:e\n            }\n        })\n        .then((res)=>{\n            setdeliveryinvoices(res.data);\n        })\n    }\n    return(\n        <div className=\"generateinvoicecontainer\">\n            <OpenModal \n                api={api}\n                open={open}\n                openevent={openevent}\n                dealersdata={dealersdata}\n                modalview={modalview}\n                invoiceFormData={invoiceFormData} \n                deliveryinvoices={deliveryinvoices}\n            />\n            {/* <CustomizedSearchBar \n                onHandleChangeEvent={onHandleChangeEvent}\n                goEventClicked={goEventClicked}\n                onKeyPress={handleKeypress}\n                labelname=\"phone number/ name\" \n                Btnname=\"Search\"\n            /> */}\n            <div>\n            <DealersInvoicesListForm \n                api={api}\n                deliveryinvoices={deliveryinvoices}\n                fetchinvoicesfromdelivery={fetchinvoicesfromdelivery}\n            />\n            </div>\n            <div className=\"searchbarstyle\">\n                <input\n                type=\"text\"\n                placeholder=\"Phone Number / Customer Name\"\n                onChange={(e)=>setQuery(e.target.value)}\n                />\n            </div>\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>GSTIN Number</th>\n                            <th>Enterprise Name</th>\n                            <th>Enterprise Address</th>\n                            <th>Enterprise State</th>\n                            <th>Proprietor Name</th>\n                            <th>Proprietor Phone Number</th>\n                            <th>GST Status</th>\n                            <th>Action</th>\n                            <th>Generate</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        dealersDetails && dealersDetails.length \n                        ? dealersDetails.filter((user=>\n                            user.proprietor_name.toLowerCase().includes(query) ||\n                            user.proprietor_phone_number.toString().includes(query)\n                            )).map((data, i)=>(\n                            <tr key={i}>\n                                <td>{data.gstin_number}</td>\n                                <td>{data.enterprise_name}</td>\n                                <td>{data.enterprise_address}</td>\n                                <td>{data.enterprise_state}</td>\n                                <td>{data.proprietor_name}</td>\n                                <td>{data.proprietor_phone_number}</td>\n                                <td>{data.gstin_status}</td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"Generate Invoice\"\n                                        onClick={()=>{\n                                            dealersdataevent(data);\n                                            openinvoiceevent(data.gstin_number);\n                                            fetchdeliverydatamatchinggstevent(data.gstin_number);\n                                            setModalview(\"DealersInvoiceForm\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                </td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"View Invoices\"\n                                        onClick={()=>{\n                                            dealersdataevent(data);\n                                            openinvoiceevent(data.gstin_number);\n                                            fetchdeliverydatamatchinggstevent(data.gstin_number);\n                                            fetchinvoicesfromdelivery(data.gstin_number);\n                                        }}\n                                    />\n                                </td>\n                            </tr>\n                        ))\n                        : \n                            <tr>\n                                <td colspan=\"15\">No Record!</td>\n                            </tr>\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoice;","/Users/rashmishrees/Desktop/sdd/src/components/organisms/CustomerInvoice/CustomerInvoice.js",["863","864","865","866","867","868","869","870","871","872","873","874","875","876"],[],"import React, { useState, useEffect } from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport FullScreenModal from \"../../molecules/FullScreenModal/FullScreenModal\";\nimport '../../../style/style.css';\nimport Button from '@mui/material/Button';\n\nconst CustomerInvoice = ({\n    searchData,\n    onHandleChangeEvent,\n    api\n}) => {\n    const [customertable, setCustomertable] = useState([]);\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [currentinvoiceno, setcurrentinvoiceno] = useState();\n    const [currentCustomerReferenceNoCustomerInvoice, setcurrentCustomerReferenceNoCustomerInvoice] = useState();\n    const [modalview, setModalview] = useState('');\n    const [query, setQuery] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(() => {\n        displayBookedCustomeerDataEvent();\n    }, [])\n    const displayBookedCustomeerDataEvent = () => {\n        api.post('customer/displayBookedCustomeerData', {\n            params:{\n                final_status: 'Booked'\n            }\n        })\n        .then((res)=>{\n            setCustomertable(res.data);\n        })\n    }\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const modalviewchange = () => {\n        setChangedmodalview(\"generatecustomerinvoiceform\");\n    }\n    const openCustomerInvoiceEvent = (customer_reference_no, product_hsn_code) => {\n        api.post('delivery/getDeliveryDataForVerification', {\n            params:{\n                customer_reference_no: customer_reference_no,\n                    product_hsn_code:product_hsn_code\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n        }\n    const openinvoiceevent = (customer_reference_no) => {\n        api.post('delivery/getDeliveryReportData',{\n            params:{\n                customer_reference_no\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n        }\n    \n    const [customerrefno, setcustomerrefno] = useState();\n    useEffect(()=>{\n        invoiceFormData.map((data)=>{\n            setcustomerrefno(data.customer_reference_no);\n            setcurrentinvoiceno(data.invoice_no);\n        })\n    },[invoiceFormData])\n    const goEventClicked = () => {\n        api.post('jointables/getCustomerFollowUpDataBooked', {\n            params:{\n                phoneno: searchData,\n                customer_name: searchData,\n                phone_number_alter_one:searchData,\n                phone_number_alter_two:searchData\n            }\n        })\n        .then((res)=>{\n            setCustomertable(res.data);\n        })\n    }\n    const handleKeypress = (e) => {\n        //it triggers by pressing the enter key\n      if (e.key === 'Enter') {\n        goEventClicked();\n        e.preventDefault();\n      }\n    };\n    useEffect(() => {\n        if (searchData === \"\") {\n            displayBookedCustomeerDataEvent();\n        }\n    }, [searchData])\n    return (\n        <div className=\"generateinvoicecontainer\">\n            <div className=\"searchbarstyle\">\n              <input\n                type=\"text\"\n                placeholder=\"Phone Number / Customer Name\"\n                onChange={(e)=>setQuery(e.target.value)}\n              />\n            </div>\n            {/* <CustomizedSearchBar\n                onHandleChangeEvent={onHandleChangeEvent}\n                goEventClicked={goEventClicked}\n                onKeyPress={handleKeypress}\n                labelname=\"phone number/ customer name\"\n                Btnname=\"search\"\n            /> */}\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                invoiceFormData={invoiceFormData}\n                openinvoiceevent={openinvoiceevent}\n                currentCustomerReferenceNoCustomerInvoice={currentCustomerReferenceNoCustomerInvoice}\n            />\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Enquiry Date</th>\n                            <th>Customer Name</th>\n                            <th>Customer Address</th>\n                            <th>Phone Number</th>\n                            <th>Phone Number Alter - 1</th>\n                            <th>Phone Number Alter - 2</th>\n                            <th>Enquired Product Hsn Code</th>\n                            <th>Enquired Product</th>\n                            <th>Quantity</th>\n                            <th>Comments</th>\n                            <th>Follow Up Call </th>\n                            <th>Final Status</th>\n                            <th>Action</th>\n                            {/* <th>Generate</th> */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            customertable && customertable.length \n                            ? \n                            customertable.filter((user=>\n                                user.customer_name.toLowerCase().includes(query) || \n                                user.phone_number.toString().includes(query) ||\n                                user.phone_number_alter_one == query ||\n                                user.phone_number_alter_two == query\n                                )).map((data, i) => (\n                                data.from_dealer == 1 \n                                ? <></>\n                                :  <tr key={i}>\n                                <td>{data.customer_reference_no}</td>\n                                <td>{\n                                    data.enquiry_date != null ?\n                                    moment(data.enquiry_date).format('YYYY-MM-DD'):\n                                    data.enquiry_date\n                                }\n                                </td>\n                                <td>{data.customer_name}</td>\n                                <td>{data.customer_address}</td>\n                                <td>{data.phone_number}</td>\n                                <td>{data.phone_number_alter_one}</td>\n                                <td>{data.phone_number_alter_two}</td>\n                                <td>{data.product_hsn_code}</td>\n                                <td>{data.product}</td>\n                                <td>{data.quantity}</td>\n                                <td>{data.comments}</td>\n                                <td>{\n                                    data.follow_up_call != null ?\n                                    moment(data.follow_up_call).format('YYYY-MM-DD'):\n                                    data.follow_up_call \n                                }\n                                </td>\n                                <td>{data.final_status}</td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"Verify Invoice\"\n                                        onClick={()=>{\n                                            setcurrentCustomerReferenceNoCustomerInvoice(data.customer_reference_no);\n                                            openCustomerInvoiceEvent(data.customer_reference_no, data.product_hsn_code);\n                                            setModalview(\"customerInvoiceForm\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                </td>\n                                {/* <td>\n                                 <div className='btnstyle'>\n                                    <Button\n                                        // id=\"btn\"\n                                        // type=\"button\" \n                                        data-bs-toggle=\"modal\"\n                                        data-bs-target=\"#exampleModal\"\n                                        onClick={()=>{\n                                            openinvoiceevent(data.customer_reference_no);\n                                        }}\n                                        // className=\"btnstyle\"\n                                        >\n                                            Generate Invoice\n                                    </Button>\n                                </div> \n                                <FullScreenModal \n                                    api={api}\n                                    modalview={modalview}\n                                    open={open}\n                                    openevent={openevent}\n                                    invoiceFormData={invoiceFormData}\n                                    openinvoiceevent={openinvoiceevent}\n                                    currentCustomerReferenceNoCustomerInvoice={currentCustomerReferenceNoCustomerInvoice}\n                                />\n                                {/* <CustomizedBtn \n                                        BtnName=\"Generate Invoice\"\n                                        onClick={()=>{\n                                            openinvoiceevent(data.customer_reference_no);\n                                            setModalview(\"generatecustomerinvoiceform\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                 \n                                    \n                                </td> */}\n                                </tr>\n                              ))\n                              : <tr>\n                                <td colspan=\"15\">No Record!</td>\n                              </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default CustomerInvoice;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayCustomerTable/DisplayCustomerTable.js",["877","878","879","880","881","882"],[],"import React, { useEffect, useState } from 'react';\nimport CustomizedSearchBar from '../../atoms/CustomizedSearchBar/CustomizedSearchBar';\nimport CustomizedDownload from '../../atoms/CustomizedDownload/CustomizedDownload';\nimport CustomizedPrint from '../../atoms/CustomizedPrint/CustomizedPrint';\nimport {CSVLink} from \"react-csv\";\nimport OpenModal from '../../molecules/OpenModal/OpenModal';\nimport CustomizedEditIcon from '../../atoms/CustomizedEditIcon/CustomizedEditIcon';\nimport moment from 'moment';\n\n\nconst DisplayCustomerTable = ({\n    currentstatus,\n    setTableDataEvent,\n    tabledata,\n    api\n}) => {\n    const [filterflag, setfilterflag] = useState(false);\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [rowdata, setrowdata] = useState({});\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const [query, setQuery] = useState('');\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(()=>{\n        if (filterflag && currentstatus ){\n            statusfiltercustomerdata();\n        }else {\n            displayCustomerFollowUpData();   \n        }\n    },[currentstatus])\n\n    const headers =[\n        {label:'Comments', key:'comments'},\n        {label:'Customer address', key:'customer_address'},\n        {label:'Customer name', key:'customer_name'},\n        {label:'Customer reference No', key:'customer_reference_no'},\n        {label:'Enquired product', key:'enquired_product'},\n        {label:'Enquired product hsn code', key:'enquired_product_hsn_code'},\n        {label:'Enquired date', key:'enquiry_date'},\n        {label:'Final status', key:'final_status'},\n        {label:'Follow up call', key:'follow_up_call'},\n        {label:'Phone number', key:'phone_number'},\n        {label:'Quantity', key:'quantity'}\n      ];\n      const csvReport = {\n        filename:'CustomerReports.csv',\n        headers:headers,\n        data:tabledata\n      }\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    const displayCustomerFollowUpData = () => {\n        api.get('customer/displayCustomerFollowUpData')\n        .then((res)=>{\n            setTableDataEvent(res.data);\n              setfilterflag(true);\n        })\n    }\n    useEffect(()=>{\n        if (searchvalue === \"\"){\n            displayCustomerFollowUpData();\n        }\n    },[searchvalue])\n    const statusfiltercustomerdata = () => {\n        api.post('customer/statusfiltercustomerdata',{\n            params:{\n                status:currentstatus\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n  }\n  const searchHandle = (e) => {\n    setSearchvalue(e.target.value);\n  }\n  const searchclicked = () => {\n    api.post('customer/getCustomerFollowUpDataCustomer',{\n        params:{\n            searchvalue\n        }\n    })\n    .then((res)=>{\n        setTableDataEvent(res.data);\n    })\n  }\n  const handleKeypress = (e) => {\n    //it triggers by pressing the enter key\n  if (e.key === 'Enter') {\n    searchclicked();\n    e.preventDefault();\n  }\n};\n    return(\n        <div>\n             <OpenModal \n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayCustomerFollowUpData={displayCustomerFollowUpData}\n                rowdata={rowdata} \n            />\n            <div className=\"searchbarstyle\">\n              <input\n                type=\"text\"\n                placeholder=\"Phone Number / Customer Name\"\n                onChange={(e)=>setQuery(e.target.value)}\n              />\n            </div>\n            {/* <CustomizedSearchBar \n                labelname=\"customer :- phone number / name\"\n                Btnname=\"search\"\n                onHandleChangeEvent={searchHandle}\n                goEventClicked={searchclicked}\n                onKeyPress={handleKeypress}\n            /> */}\n            <div>\n                {\n                    tabledata && tabledata.length ? \n                    <CSVLink {...csvReport}><CustomizedDownload/></CSVLink> : null\n                }\n                {/* <CustomizedPrint /> */}\n            </div>\n            <div className='table-responsive'>\n                <table className='table table-striped table-bordered tablebackground'>\n                    <thead className='theadalter'>\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Enquiry Date</th>\n                            <th>Customer Name</th>\n                            <th>Customer Address</th>\n                            <th>Phone Number</th>\n                            <th>Enquired Product Hsn Code</th>\n                            <th>Enquired Product</th>\n                            <th>Quantity</th>\n                            <th>Comments</th>\n                            <th>Follow Up Call </th>\n                            <th>Final Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            tabledata && tabledata.length \n                            ? tabledata.filter((user=>\n                                user.customer_name.toLowerCase().includes(query) || \n                                user.phone_number.toString().includes(query)\n                                )).map((data, i)=>(\n                                <tr key={i}>\n                                <td>{data.customer_reference_no} </td>\n                                <td>\n                                    {\n                                        data.enquiry_date != null ?\n                                        moment(data.enquiry_date).format('YYYY-MM-DD'):\n                                        data.enquiry_date\n                                    }\n                                </td>\n                                <td>{data.customer_name}</td>\n                                <td>{data.customer_address} </td>\n                                <td>{data.phone_number} </td>\n                                <td>{data.product_hsn_code} </td>\n                                <td>{data.product} </td>\n                                <td>{data.quantity} </td>\n                                <td>{data.comments} </td>\n                                <td>\n                                    {\n                                        data.follow_up_call != null ? \n                                        moment(data.follow_up_call).format('YYYY-MM-DD'):\n                                        data.follow_up_call\n                                    } \n                                </td>\n                                <td>{data.final_status} </td>\n                                <td>\n                                <CustomizedEditIcon \n                                    onClick={()=>{\n                                        rowdataevent(data);\n                                        setmodalview(\"customerfollowupform\");\n                                        openevent(true);\n                                    }}\n                                />\n                                </td>\n                            </tr>\n                            ))\n                            : \n                                <tr>\n                                    <td colSpan={12}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DisplayCustomerTable;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/Download/DownloadCustomer.js",["883","884","885","886","887","888","889","890","891","892","893","894"],[],"import React, { useState } from 'react';\nimport CustomizedText from '../../atoms/CustomizedText/CustomizedText';\nimport CustomizedDownload from '../../atoms/CustomizedDownload/CustomizedDownload';\nimport CustomizedDatepicker from '../../atoms/CustomizedDatepicker/CustomizedDatepicker';\nimport SearchIcon from '@mui/icons-material/Search';\nimport moment from 'moment';\nimport axios from 'axios';\nconst DownloadCustomer = ({setTableDataEvent}) => {\n  const [fromselecteddate, fromsetselecteddate] = useState('');\n  const [toselecteddate, tosetselecteddate] = useState('');\n  \n  const fromselecteddateevent = (e) => {\n    fromsetselecteddate(e);\n  }\n  const toselecteddateevent = (e) => {\n    tosetselecteddate(e);\n  }\n  const searchbuttonclicked = () => {\n    axios.post('http://3.84.110.201:3001/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromselecteddate,\n        todate:toselecteddate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const weeklysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n\n    var firstday = new Date(curr.setDate(first));\n    var lastday = new Date(curr.setDate(last));\n\n    firstday = firstday.toString();\n    firstday = firstday.split(\" \"); \n    var fromdate = firstday[3]+\"-\"+months[firstday[1]]+\"-\"+firstday[2];\n    \n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const monthlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n\n    axios.post('http://3.84.110.201:3001/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const yearlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+\"01\"+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n    return(\n        <div className='fromtodownloadlinkcontainer'>\n        <div className='fromtodownloadcontainer'>\n          <div className='fromcontainer'>\n            <CustomizedText textname=\"from :- \" />\n            <CustomizedDatepicker selecteddateevent={fromselecteddateevent} />\n          </div>\n          <div className='tocontainer'>\n            <CustomizedText textname=\"to :-\" />\n            <CustomizedDatepicker selecteddateevent={toselecteddateevent} />\n          </div>\n          <SearchIcon className='searchicon' onClick={searchbuttonclicked} />\n        </div>\n        <div>\n          <span className='atagfirst'>\n            <a href='#' onClick={weeklysearchclicked} >weekly</a> \n          </span>\n          <span className='atagsecond'>\n            <a href='#' onClick={monthlysearchclicked} >monthly</a>\n          </span>\n          <span className='atagthird'>\n            <a href='#' onClick={yearlysearchclicked} >yearly</a>\n          </span>\n        </div>\n        </div>\n\n    );\n}\nexport default DownloadCustomer;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable.js",["895","896","897","898","899","900","901","902","903"],[],"import React, { useState, useEffect } from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from '../OpenModal/OpenModal';\nimport CustomizedEditIcon from \"../../atoms/CustomizedEditIcon/CustomizedEditIcon\";\nimport { CSVLink } from \"react-csv\";\nimport CustomizedDownload from \"../../atoms/CustomizedDownload/CustomizedDownload\";\nimport moment from 'moment';\n\nconst DisplayDeliveryReportsTable = ({\n    deliverystatus,\n    paymentstatus,\n    setTableDataEvent,\n    tabledata,\n    api\n}) => {\n    const [filterflag, setfilterflag] = useState(false);\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [rowdata, setrowdata] = useState({});\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const [query, setQuery] = useState('');\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(() => {\n        if (filterflag && deliverystatus && paymentstatus) {\n            statusfilterdeliveryreport();\n        } else {\n            displayDeliveryReportsData();\n        }\n    }, [deliverystatus, paymentstatus])\n    useEffect(()=>{\n        if (paymentstatus){\n            paymentstatusfilteronly();\n        }\n    },[paymentstatus])\n    useEffect(()=>{\n        if(deliverystatus){\n            deliverystatusfilteronly();\n        }\n    },[deliverystatus])\n    const headers = [\n        { label: 'customer reference no', key: 'customer_reference_no' },\n        { label: 'booked date', key: 'booked_date' },\n        { label: 'requested delivery date', key: 'requested_delivery_date' },\n        { label: 'delivery date', key: 'delivery_date' },\n        { label: 'invoice no', key: 'invoice_no' },\n        { label: 'customer address', key: 'customer_address' },\n        { label: 'gst', key: 'gst' },\n        { label: 'phone number', key: 'phone_number' },\n        { label: 'product hsn code', key: 'product_hsn_code' },\n        { label: 'product', key: 'product' },\n        { label: 'quantity', key: 'quantity' },\n        { label: 'rate', key: 'rate' },\n        { label: 'discount', key: 'discount' },\n        { label: 'cgst', key: 'cgst' },\n        { label: 'sgst', key: 'sgst' },\n        { label: 'igst', key: 'igst' },\n        { label: 'final amount', key: 'final_amount' },\n        { label: 'balance amount', key: 'balance_amount' },\n        { label: 'payment status', key: 'payment_status' },\n        { label: 'booking advance amount', key: 'booking_advance_amount' },\n        { label: 'delivery status', key: 'delivery_status' },\n        { label: 'customer name', key: 'customer_name' },\n    ];\n    const csvReport = {\n        filename: 'DeliveryReports.csv',\n        headers: headers,\n        data: tabledata\n    }\n    const displayDeliveryReportsData = () => {\n        api.get('delivery/displayDeliveryReportsData')\n        .then((res)=>{\n            setTableDataEvent(res.data);\n            setfilterflag(true);\n        })\n    }\n    const statusfilterdeliveryreport = () => {\n        api.post('delivery/statusfilterdeliveryreport',{\n            params:{\n                deliverystatus: deliverystatus,\n                paymentstatus: paymentstatus\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const paymentstatusfilteronly = () => {\n        api.post('delivery/paymentstatusfilteronly',{\n            params:{\n                paymentstatus: paymentstatus\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const deliverystatusfilteronly = () => {\n        api.post('delivery/deliverystatusfilteronly',{\n            params:{\n                deliverystatus: deliverystatus,\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const searchHandle = (e) => {\n        setSearchvalue(e.target.value);\n    }\n    const searchclicked = () => {\n        api.post('delivery/getDeliveryReportData',{\n            params:{\n                phoneno: searchvalue,\n                customer_name: searchvalue\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const handleKeypress = (e) => {\n        //it triggers by pressing the enter key\n      if (e.key === 'Enter') {\n        searchclicked();\n        e.preventDefault();\n      }\n    };\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    useEffect(() => {\n        if (searchvalue === \"\") {\n            displayDeliveryReportsData();\n        }\n    }, [searchvalue])\n    return (\n        <div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayDeliveryReportsData={displayDeliveryReportsData}\n                rowdata={rowdata}\n            />\n            <div className=\"searchbarstyle\">\n              <input\n                type=\"text\"\n                placeholder=\"Phone Number / Customer Name\"\n                onChange={(e)=>setQuery(e.target.value)}\n              />\n            </div>\n            {/* <CustomizedSearchBar\n                labelname=\"customer :- phone number / name\"\n                Btnname=\"search\"\n                onHandleChangeEvent={searchHandle}\n                goEventClicked={searchclicked}\n                onKeyPress={handleKeypress}\n            /> */}\n            <div>\n                {\n                    tabledata && tabledata.length ?\n                        <CSVLink {...csvReport}><CustomizedDownload /></CSVLink> : null\n                }\n            </div>\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Product Sl Number</th>\n                            <th>Booked Date</th>\n                            <th>Requested Delivery Date</th>\n                            <th>Delivery Date</th>\n                            <th>Invoice Number</th>\n                            <th>Customer Name </th>\n                            <th>Customer Address</th>\n                            <th>GSTIN/UIN:</th>\n                            <th>Phone number</th>\n                            <th>Phone number alter one</th>\n                            <th>Phone number alter two</th>\n                            <th>Product HSN Code </th>\n                            <th>Product</th>\n                            <th>Quantity</th>\n                            <th>Rate</th>\n                            <th>Discount</th>\n                            <th>CGST</th>\n                            <th>SGST</th>\n                            <th>IGST</th>\n                            <th>Final Amount</th>\n                            <th>Balance Amount</th>\n                            <th>Payment status </th>\n                            <th>Booking Advance Amount</th>\n                            <th>Delivery Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            tabledata && tabledata.length \n                            ? tabledata.filter((user=>\n                                user.customer_name.toLowerCase().includes(query) || \n                                user.phone_number.toString().includes(query) ||\n                                user.phone_number_alter_one == query ||\n                                user.phone_number_alter_two == query\n                                )).map((data, i) => (\n                                <tr key={i}>\n                                    <td>{data.customer_reference_no}</td>\n                                    <td>{data.product_sl_no}</td>\n                                    <td>\n                                        {\n                                            data.booked_date != null ?\n                                            moment(data.booked_date).format('YYYY-MM-DD'):\n                                            data.booked_date \n                                        }\n                                    </td>\n                                    <td>\n                                        {\n                                            data.requested_delivery_date != null ?\n                                            moment(data.requested_delivery_date).format('YYYY-MM-DD'):\n                                            data.requested_delivery_date \n                                        }\n                                    </td>\n                                    <td>\n                                        {\n                                            data.delivery_date != null ?\n                                            moment(data.delivery_date).format('YYYY-MM-DD'):\n                                            data.delivery_date\n                                        }\n                                    </td>\n                                    <td>{data.invoice_no}</td>\n                                    <td>{data.customer_name}</td>\n                                    <td>{data.customer_address}</td>\n                                    <td>{data.gst}</td>\n                                    <td>{data.phone_number}</td>\n                                    <td>{data.phone_number_alter_one}</td>\n                                    <td>{data.phone_number_alter_two}</td>\n                                    <td>{data.product_hsn_code}</td>\n                                    <td>{data.product}</td>\n                                    <td>{data.quantity}</td>\n                                    <td>{data.rate}</td>\n                                    <td>{data.discount}</td>\n                                    <td>{data.cgst}</td>\n                                    <td>{data.sgst}</td>\n                                    <td>{data.igst}</td>\n                                    <td>{data.final_amount}</td>\n                                    <td>{data.balance_amount}</td>\n                                    <td>{data.payment_status}</td>\n                                    <td>{data.booking_advance_amount}</td>\n                                    <td>{data.delivery_status}</td>\n                                    <td>\n                                    <CustomizedEditIcon\n                                        onClick={() => { \n                                            rowdataevent(data);\n                                            setmodalview(\"deliverydetailsform\");\n                                            openevent(true);\n                                            }}\n                                    />\n                                    </td>\n                                </tr>\n                            ))\n                            : \n                                <tr>\n                                    <td colSpan={23}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DisplayDeliveryReportsTable;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable.js",["904","905","906","907","908","909","910","911","912"],[],"import React, { useState, useEffect } from 'react';\nimport CustomizedEditIcon from '../../atoms/CustomizedEditIcon/CustomizedEditIcon';\nimport OpenModal from '../OpenModal/OpenModal';\nimport CustomizedSearchBar from '../../atoms/CustomizedSearchBar/CustomizedSearchBar';\nimport CustomizedBtn from '../../atoms/CustomizedBtn/CustomizedBtn';\nimport axios from 'axios';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\nimport '../../../style/style.css';\n\nconst DisplayProductDetailsTable = ({\n    currentstatus,\n}) => {\n    const [productsdetailsdata, setProductsdetailsdata] = useState({});\n    const [filterflag, setfilterflag] = useState(false);\n    const [editRow, setEditRow] = useState(null);\n    const [rowdata, setrowdata] = useState({});\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const [query, setQuery] = useState('');\n    const openevent = (e) => {\n        setOpen(e)\n    }\n    const [editFormData, setEditFormData] = useState({\n        product_hsn_code: \"\",\n        product_name: \"\",\n        product_description: \"\",\n        unit_of_measure: \"\",\n        rate_per_unit: \"\",\n        gst_rate: \"\",\n        product_status: \"\",\n        stock: \"\"\n    })\n    useEffect(() => {\n        if (filterflag && currentstatus) {\n            productstatusfilter();\n        }\n        else {\n            displayProductDetailsData();\n        }\n    }, [currentstatus])\n    const modalviewchange = () => {\n        setChangedmodalview(\"addproductform\");\n    }\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    const displayProductDetailsData = () => {\n        axios.get(`http://3.84.110.201:3001/product/displayProductDetailsData`)\n            .then((res) => {\n                setProductsdetailsdata(res.data);\n                setfilterflag(true);\n            })\n    }\n    useEffect(() => {\n        if (searchvalue === \"\") {\n            displayProductDetailsData();\n        }\n    }, [searchvalue])\n    const productstatusfilter = () => {\n        axios.post(`http://3.84.110.201:3001/product/productstatusfilter`, {\n            params: {\n                status: currentstatus\n            }\n        })\n            .then((res) => {\n                setProductsdetailsdata(res.data);\n            })\n    }\n    const editevent = (event, data) => {\n        setEditRow(data.product_hsn_code);\n        const formValues = {\n            product_hsn_code: data.product_hsn_code,\n            product_name: data.product_name,\n            product_description: data.product_description,\n            unit_of_measure: data.unit_of_measure,\n            rate_per_unit: data.rate_per_unit,\n            gst_rate: data.gst_rate,\n            product_status: data.product_status,\n            stock: data.stock\n        }\n        setEditFormData(formValues);\n    }\n    const deleteevent = (id) => {\n        axios.delete(`http://3.84.110.201:3001/product/deletefromproductdetailstable`,\n            {\n                data: {\n                    id: id\n                }\n            })\n            .then((res) => {\n                displayProductDetailsData();\n            })\n    }\n    const searchHandle = (e) => {\n        setSearchvalue(e.target.value);\n    }\n    const searchclicked = () => {\n        axios.post(`http://3.84.110.201:3001/product/getProductDetailsData`, {\n            params: {\n                product_name: searchvalue,\n                product_hsn: searchvalue\n            }\n        })\n            .then((res) => {\n                setProductsdetailsdata(res.data);\n            })\n    }\n    const handleKeypress = (e) => {\n        //it triggers by pressing the enter key\n      if (e.key === 'Enter') {\n        searchclicked();\n        e.preventDefault();\n      }\n    };\n    return (\n        <div>\n            <OpenModal\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayProductDetailsData={displayProductDetailsData}\n                rowdata={rowdata}\n            />\n            <div className=\"searchbarstyle\">\n              <input\n                type=\"text\"\n                placeholder=\"Product Name/Product HSN\"\n                onChange={(e)=>setQuery(e.target.value)}\n              />\n            </div>\n            {/* <CustomizedSearchBar\n                labelname=\"product name / product hsn\"\n                Btnname=\"search\"\n                onHandleChangeEvent={searchHandle}\n                goEventClicked={searchclicked}\n                onKeyPress={handleKeypress}\n            /> */}\n            <div className='adddealersbtnstyle'>\n                <CustomizedBtn\n                    BtnName=\"Add Product\"\n                    onClick={() => {\n                        setmodalview(\"addproductform\");\n                        openevent(true);\n                    }}\n                />\n            </div>\n            <div className='table-responsive'>\n                <form>\n                    <table className='table table-striped table-bordered tablebackground'>\n                        <thead className='theadalter'>\n                            <tr>\n                                <th>Product HSN code</th>\n                                <th>Product Name</th>\n                                <th>Product Description</th>\n                                <th>Unit of Measure</th>\n                                <th>Rate per unit (₹)</th>\n                                <th>GST Rate (%)</th>\n                                <th>Product Status</th>\n                                <th>Product Discount (%)</th>\n                                <th>Stock</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                productsdetailsdata && productsdetailsdata.length\n                                    ? productsdetailsdata.filter((user=>\n                                        user.product_name.toLowerCase().includes(query) || \n                                        user.product_hsn_code.toString().includes(query)\n                                        )).map((data) => (\n                                        <tr>\n                                            <td>{data.product_hsn_code}</td>\n                                            <td>{data.product_name}</td>\n                                            <td>{data.product_description}</td>\n                                            <td>{data.unit_of_measure}</td>\n                                            <td>{data.rate_per_unit}</td>\n                                            <td>{data.gst_rate}</td>\n                                            <td>{data.product_status}</td>\n                                            <td>{data.discount}</td>\n                                            <td>{data.stock}</td>\n                                            <td>\n                                                <div className='editdeletecontainer'>\n                                                    <CustomizedEditIcon\n                                                        onClick={() => {\n                                                            rowdataevent(data);\n                                                            setmodalview(\"productdetailsform\");\n                                                            openevent(true);\n                                                        }}\n                                                    />\n                                                    <div\n                                                        className=\"deleteiconcontainer\"\n                                                        data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\n                                                    ><DeleteIcon id=\"deleteicon\" />\n                                                    </div>\n                                                    <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                                        <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\n                                                            <div className=\"modal-content\">\n                                                                <div className=\"modal-body\">\n                                                                    <p>Are you sure you want to delete ?</p>\n                                                                </div>\n                                                                <div className=\"modal-footer\">\n                                                                    <div className='btnstyle'>\n                                                                        <Button\n                                                                            type=\"button\"\n                                                                            className=\"btn btn-primary\"\n                                                                            data-bs-dismiss=\"modal\"\n                                                                            onClick={() => (deleteevent(data.product_hsn_code))}  >\n                                                                            Confirm\n                                                                        </Button>\n                                                                    </div>\n                                                                    <div className='btnstyle'>\n                                                                        <Button\n                                                                            type=\"button\"\n                                                                            className=\"btn btn-secondary\"\n                                                                            data-bs-dismiss=\"modal\">\n                                                                            Cancel\n                                                                        </Button>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    ))\n                                    :\n                                    <tr>\n                                        <td colSpan={9}>No Record!</td>\n                                    </tr>\n                            }\n\n                        </tbody>\n                    </table>\n                </form>\n            </div>\n        </div>\n    );\n}\nexport default DisplayProductDetailsTable;\n","/Users/rashmishrees/Desktop/sdd/src/components/molecules/Download/DownloadDelivery.js",["913","914","915","916","917","918","919","920","921","922"],[],"import React, { useState } from 'react';\nimport CustomizedText from '../../atoms/CustomizedText/CustomizedText';\nimport CustomizedDatepicker from '../../atoms/CustomizedDatepicker/CustomizedDatepicker';\nimport SearchIcon from '@mui/icons-material/Search';\nimport axios from 'axios';\nimport '../../../style/style.css';\n\nconst DownloadDelivery = ({setTableDataEvent}) => {\n  const [fromselecteddate, fromsetselecteddate] = useState('');\n  const [toselecteddate, tosetselecteddate] = useState('');\n  \n  const fromselecteddateevent = (e) => {\n    fromsetselecteddate(e);\n  }\n  const toselecteddateevent = (e) => {\n    tosetselecteddate(e);\n  }\n  const searchbuttonclicked = () => {\n    axios.post('http://3.84.110.201:3001/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromselecteddate,\n        todate:toselecteddate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const weeklysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n\n    var firstday = new Date(curr.setDate(first));\n    var lastday = new Date(curr.setDate(last));\n\n    firstday = firstday.toString();\n    firstday = firstday.split(\" \"); \n    var fromdate = firstday[3]+\"-\"+months[firstday[1]]+\"-\"+firstday[2];\n    \n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n\n  }\n  const monthlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const yearlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay();\n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+\"01\"+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n    return(\n        <div className='fromtodownloadlinkcontainer'>\n        <div className='fromtodownloadcontainer'>\n          <div className='fromcontainer'>\n            <CustomizedText textname=\"from :- \" />\n            <CustomizedDatepicker selecteddateevent={fromselecteddateevent} />\n          </div>\n          <div className='tocontainer'>\n            <CustomizedText textname=\"to :-\" />\n            <CustomizedDatepicker selecteddateevent={toselecteddateevent} />\n          </div>\n          <div >\n            <SearchIcon className='searchicon' onClick={searchbuttonclicked} />\n          </div>\n        </div>\n        <div>\n          <span className='atagfirst'>\n            <a href='#' onClick={weeklysearchclicked} >weekly</a> \n          </span>\n          <span className='atagsecond'>\n            <a href='#' onClick={monthlysearchclicked} >monthly</a>\n          </span>\n          <span className='atagthird'>\n            <a href='#' onClick={yearlysearchclicked} >yearly</a>\n          </span>\n        </div>\n        </div>\n\n    );\n}\nexport default DownloadDelivery;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/TextAndSelect/TextAndSelect.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable.js",["923","924","925","926","927","928","929"],[],"import React, { useState, useEffect } from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from '../OpenModal/OpenModal';\nimport CustomizedEditIcon from \"../../atoms/CustomizedEditIcon/CustomizedEditIcon\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\nimport '../../../style/style.css';\n\nconst DisplayDealersDetailsTable = ({\n    currentstatus,\n    api\n}) => {\n    const [dealersdetailsdata, setDealersdetailsdata] = useState({});\n    const [filterflag, setfilterflag] = useState(false);\n    const [rowdata, setrowdata] = useState({});\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const [query, setQuery] = useState('');\n    const openevent = (e) => {\n        setOpen(e)\n    }\n    useEffect(() => {\n        if (filterflag && currentstatus) {\n            gstinstatusfilterdealersdata();\n        } else {\n            displayDealersDetailsData();\n        }\n    }, [currentstatus])\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    const displayDealersDetailsData = () => {\n        api.get('dealers/displayDealersDetailsData')\n            .then((res) => {\n                setDealersdetailsdata(res.data);\n                setfilterflag(true);\n            })\n    }\n    useEffect(() => {\n        if (searchvalue === \"\") {\n            displayDealersDetailsData();\n        }\n    }, [searchvalue])\n    const gstinstatusfilterdealersdata = () => {\n        api.post('dealers/gstinstatusfilterdealersdata', {\n            params: {\n                status: currentstatus\n            }\n        })\n            .then((res) => {\n                setDealersdetailsdata(res.data);\n            })\n    }\n    const searchHandle = (e) => {\n        setSearchvalue(e.target.value);\n    }\n    const modalviewchange = () => {\n        setChangedmodalview(\"adddealersform\");\n    }\n    const searchclicked = () => {\n        api.post('dealers/gstinstatusfilterdealersdata', {\n            params: {\n                proprietor_name: searchvalue,\n                proprietor_phone_number: searchvalue\n            }\n        })\n            .then((res) => {\n                setDealersdetailsdata(res.data);\n            })\n    }\n    const handleKeypress = (e) => {\n        //it triggers by pressing the enter key\n      if (e.key === 'Enter') {\n        searchclicked();\n        e.preventDefault();\n      }\n    };\n    const deleteevent = (id) => {\n        api.delete(`http://3.84.110.201:3001/dealers/deletefromdealersdetailstable`,\n            {\n                data: {\n                    id: id\n                }\n            })\n            .then((res) => {\n                displayDealersDetailsData();\n            })\n    }\n    return (\n        <div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayDealersDetailsData={displayDealersDetailsData}\n                rowdata={rowdata}\n            />\n            <div className=\"searchbarstyle\">\n              <input\n                type=\"text\"\n                placeholder=\"Proprietor Name or Phone Number\"\n                onChange={(e)=>setQuery(e.target.value)}\n              />\n            </div>\n            {/* <CustomizedSearchBar\n                labelname=\"proprietor name /proprietor phone number\"\n                Btnname=\"search\"\n                onHandleChangeEvent={searchHandle}\n                goEventClicked={searchclicked}\n                onKeyPress={handleKeypress}\n            /> */}\n            <div className=\"adddealersbtnstyle\">\n                <CustomizedBtn\n                    BtnName=\"Add Dealers\"\n                    onClick={() => {\n                        setmodalview(\"adddealersform\");\n                        openevent(true);\n                    }}\n                />\n            </div>\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>GSTIN Number</th>\n                            <th>Enterprise Name</th>\n                            <th>Enterprise Address</th>\n                            <th>Proprietor Name</th>\n                            <th>Proprietor Phone Number</th>\n                            <th>GSTIN Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            dealersdetailsdata && dealersdetailsdata.length\n                                ? dealersdetailsdata.filter((user=>\n                                    user.proprietor_name.toLowerCase().includes(query) || \n                                    user.proprietor_phone_number.toString().includes(query)\n                                    )).map((data, i) => (\n                                    <tr key={i}>\n                                        <td>{data.gstin_number}</td>\n                                        <td>{data.enterprise_name}</td>\n                                        <td>{data.enterprise_address}</td>\n                                        <td>{data.proprietor_name}</td>\n                                        <td>{data.proprietor_phone_number}</td>\n                                        <td>{data.gstin_status}</td>\n                                        <td>\n                                            <div className=\"editdeletecontainer\">\n                                                <CustomizedEditIcon\n                                                    onClick={() => {\n                                                        rowdataevent(data);\n                                                        setmodalview(\"editdealersreport\");\n                                                        openevent(true);\n                                                    }}\n                                                />\n                                                <div\n                                                    className=\"deleteiconcontainer\"\n                                                    data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\n                                                ><DeleteIcon id=\"deleteicon\" />\n                                                </div>\n                                                <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                                    <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\n                                                        <div className=\"modal-content\">\n                                                            <div className=\"modal-body\">\n                                                                <p>Are you sure you want to delete ?</p>\n                                                            </div>\n                                                            <div className=\"modal-footer\">\n                                                                <div className='btnstyle'>\n                                                                    <Button\n                                                                        type=\"button\"\n                                                                        className=\"btn btn-primary\"\n                                                                        data-bs-dismiss=\"modal\"\n                                                                        onClick={() => (deleteevent(data.gstin_number))}  >\n                                                                        Confirm\n                                                                    </Button>\n                                                                </div>\n                                                                <div className='btnstyle'>\n                                                                    <Button\n                                                                        type=\"button\"\n                                                                        className=\"btn btn-secondary\"\n                                                                        data-bs-dismiss=\"modal\">\n                                                                        Cancel\n                                                                    </Button>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                ))\n                                :\n                                <tr>\n                                    <td colSpan={7}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DisplayDealersDetailsTable;","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedLogOutIcon/CustomizedLogOutIcon.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedLogo/CustomizedLogo.js",["930"],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersDetailsForm/DealersDetailsForm.js",["931","932","933","934","935","936","937","938"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { purchasesuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from '../../atoms/CustomizedPrint/CustomizedPrint';\nimport axios from 'axios';\nimport '../../../style/style.css';\nconst DealersDetailsForm = ({\n  rowdata,\n  handleClose,\n  fetchdealersdatatoverify,\n  verificationstatus,\n  currentInvoiceno,\n  fetchinvoicesfromdelivery\n}) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [Rowdatadisplayed, setRowdatadisplayed] = useState();\n  const [gstno, setgstno] = useState();\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n  useEffect(() => {\n    fetchalldatafromcust();\n  }, [])\n  const fetchalldatafromcust = () => {\n    axios.post('http://3.84.110.201:3001/delivery/getalldataofcustomer', {\n        params: {\n          currentCustomerReferenceNo: currentInvoiceno\n        }\n      })\n        .then((res) => {\n          setRowdatadisplayed(res.data);\n        })\n  }\n  useEffect(() => {\n    if (fetchdealersdatatoverify) {\n      setUpdaterowdata(fetchdealersdatatoverify);\n    }\n  }, [fetchdealersdatatoverify])\n  const [finalverificationstatus, setfinalverificationstatus] = useState();\n  useEffect(() => {\n    if (verificationstatus) {\n      setfinalverificationstatus(verificationstatus[0].verification_status);\n    }\n  }, [verificationstatus])\n  const [constantinvoicedata, setconstantinvoicedata] = useState();\n  useEffect(() => {\n    if (fetchdealersdatatoverify) {\n      const tempdata = [...new Set(fetchdealersdatatoverify.map((e) => e.customer_reference_no))];\n      tempdata.map((temp) => {\n        let filterByTempData = fetchdealersdatatoverify.filter(dataObject => dataObject.customer_reference_no === temp)\n        var fixedstrings = filterByTempData[0];\n        setconstantinvoicedata(fixedstrings);\n      })\n    }\n  }, [fetchdealersdatatoverify])\n  const submiteventclicked = (gstno) => {\n    let custrefno = \"\";\n    let statecode;\n    Rowdatadisplayed.map((data) => {\n      custrefno = data.customer_reference_no;\n      statecode = data.state_code;\n    })\n    axios.put('http://3.84.110.201:3001/customer/updatefinalstatuscustomertablepurchased',{\n      params:{\n          customer_reference_no: custrefno\n      }\n  })\n    axios.post('http://3.84.110.201:3001/delivery/setverificationstatus', {\n      params: {\n        customer_reference_no: custrefno\n      }\n    })\n      axios.put('http://3.84.110.201:3001/delivery/updatepurchasestatusofdeliverytable', {\n      params: {\n        customer_reference_no: custrefno\n      }\n    })\n      axios.put('http://3.84.110.201:3001/delivery/updateDeliveryDatafromdealersform', {\n      params: {\n        rowdatadisplayed: Rowdatadisplayed\n      }\n    })\n      axios.post('http://3.84.110.201:3001/jointables/calculaterateofdeliveryofdealers', {\n      params: {\n        rowdatadisplayed: Rowdatadisplayed\n      }\n    })\n    if (statecode == 29) {\n      axios.put('http://3.84.110.201:3001/jointables/updatekarnatakagstratesfromdealers', {\n        params: {\n          rowdatadisplayed: Rowdatadisplayed\n        }\n      })\n        axios.put('http://3.84.110.201:3001/jointables/updatefinalamountdeliveryfromdealers', {\n        params: {\n          customer_reference_no: custrefno\n        }\n      })\n        axios.put('http://3.84.110.201:3001/jointables/updatebalanceamountdeliveryfromdealers', {\n        params: {\n          rowdatadisplayed: Rowdatadisplayed\n        }\n      })\n        .then((res) => {\n          if (res) {\n            const res = purchasesuccessmsg({});\n            alert(res.msg);\n            handleClose();\n          }\n        })\n        fetchinvoicesfromdelivery(gstno);\n    }\n    else {\n      axios.put('http://3.84.110.201:3001/jointables/updateotherstatesgstratesfromdealers', {\n        params: {\n          rowdatadisplayed: Rowdatadisplayed\n        }\n      })\n        .then((res) => {\n        })\n        axios.put('http://3.84.110.201:3001/jointables/updatefinalamountdeliveryfromdealers', {\n        params: {\n          customer_reference_no: custrefno\n        }\n      })\n        .then((res) => {\n        })\n        axios.put('http://3.84.110.201:3001/jointables/updatebalanceamountdeliveryfromdealers', {\n        params: {\n          rowdatadisplayed: Rowdatadisplayed\n        }\n      })\n        .then((res) => {\n          if (res) {\n            const res = purchasesuccessmsg({});\n            alert(res.msg);\n            handleClose();\n            fetchinvoicesfromdelivery(gstno);\n          }\n        })\n    }\n  }\n  \n  useEffect(()=>{\n    if (Rowdatadisplayed){\n      Rowdatadisplayed.map((data,i)=>(\n        setgstno(data.gst)\n      ))\n    }\n  },[Rowdatadisplayed])\n  const changeevent = (event, index) => {\n    let updateRowDataByIndex = [...Rowdatadisplayed];\n    Rowdatadisplayed.find((item, i) => {\n      if (item.delivery_id === index) {\n        updateRowDataByIndex[i][event.target.name] = event.target.value;\n        setRowdatadisplayed(() => [...updateRowDataByIndex]);\n      }\n    })\n  }\n  return (\n    <div>\n      <div><CustomizedPrint\n        onClick={handlePrint}\n      />\n      </div>\n      <div ref={componentRef}>\n        <div className=\"formheading\">\n          <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n          <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,\n            Opp Anna\n            Building,Hosur Main Road Bangalore-560099,\n            <br></br>Mobile: 9035757145/9902880851/9141070705</p>\n        </div>\n        <div className=\"pageheading\">\n          Purchase Order\n        </div>\n        <form className=\"formcontainer\">\n          {\n            Rowdatadisplayed && Rowdatadisplayed.length\n              ? Rowdatadisplayed.map((data, i) => (\n                <>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        customer name:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.customer_name}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Customer address:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.customer_address}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Invoice no:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.invoice_no}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        GST:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.gst}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        phone number:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.phone_number}\n                          type=\"number\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        phone number (alter one):\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.phone_number_alter_one}\n                          type=\"number\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        phone number (alter two):\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.phone_number_alter_two}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Product:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.product}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        quantity:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.quantity}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        rate:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.rate}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        discount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.discount}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Rate After Extended Discount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.extended_discount}\n                          type=\"number\"\n                          onChange={(event) => changeevent(event, data.delivery_id)}\n                          name=\"extended_discount\"\n                          onWheel={(e) => e.target.blur()}\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        cgst:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.cgst}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        sgst:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.sgst}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        igst:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.igst}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        final amount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.final_amount}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        balance amount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.balance_amount}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                      <label className=\"formdatalabelstyle\">\n                          <div className=\"formnamestyle\">\n                              Payment status:\n                          </div>\n                          <div className=\"formdatainputstyle\">\n                              <input\n                                  type=\"text\"\n                                  defaultValue={data.payment_status}\n                                  readOnly\n                                  disabled\n                              />\n                          </div> \n                      </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        advance amount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.booking_advance_amount}\n                          type=\"number\"\n                          onChange={(event) => changeevent(event, data.delivery_id)}\n                          name=\"booking_advance_amount\"\n                          onWheel={(e) => e.target.blur()}\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        po number:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.po_number}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        vehicle number:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.vehicle_number}\n                          type=\"text\"\n                          readOnly\n                          disabled\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"divider\"></div>\n                </>\n              ))\n              : <p>No Record!</p>\n            }\n            {/* <CustomizedBtn\n            BtnName=\"submit\"\n            // onClick={submiteventclicked}\n            onClick={() => {\n              submiteventclicked(data.gst);\n          }}\n          /> */}\n        </form>\n      </div>\n      {\n        finalverificationstatus == 1\n          ? <p className=\"verificationstyle\">Verification and Purchase completed!</p>\n          : <div className=\"submitcontainee\">\n            <CustomizedBtn\n              BtnName=\"submit\"\n              // onClick={submiteventclicked}\n              onClick={()=>{\n                submiteventclicked(gstno);\n              }}\n            />\n          </div>\n      }\n    </div>\n  )\n}\nexport default DealersDetailsForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/InvoiceFormat/InvoiceFormat.js",["939","940"],[],"import React, { useEffect, useState } from \"react\";\nimport { ToWords } from 'to-words';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst InvoiceFormat = ({\n    invoiceFormData\n}) => {\n    const [constantinvoicedata, setconstantinvoicedata] = useState();\n    console.log(\"constantinvoicedata\",constantinvoicedata);\n    const [totalamount, settotalamount] = useState();\n    const [totalinwords, settotalinwords] = useState();\n    const toWords = new ToWords();\n    useEffect(() => {\n        if (invoiceFormData) {\n            const tempdata = [...new Set(invoiceFormData.map((e) => e.customer_reference_no))];\n            tempdata.map((temp) => {\n                let filterByTempData = invoiceFormData.filter(dataObject => dataObject.customer_reference_no === temp)\n                var fixedstrings = filterByTempData[0];\n                setconstantinvoicedata(fixedstrings);\n                let temptotal = 0;\n                invoiceFormData.map((data) => temptotal = temptotal + data.final_amount);\n                settotalamount(temptotal);\n                let words = toWords.convert(temptotal);\n                settotalinwords(words);\n            })\n        }\n    }, [invoiceFormData])\n    return (\n        <div className=\"invoiceformatcontainer\">\n            <p>Invoice</p>\n            <div className=\"table-responsive\" id=\"tableprint\" >\n                {\n                    constantinvoicedata\n                        ?\n                        <div>\n                            <div className=\"invoicecontainer\">\n                                <div>\n                                    <p> <span className=\"lightstyle\">Address:</span> Shop #05,Medhini Arcade, <br></br>\n                                        Kithaganahalli Gate, <br></br>Opp Anna Building,\n                                        Hosur Main Road<br></br> Bangalore-560099,\n                                        <br></br></p>\n                                    <p> <span className=\"lightstyle\">GSTIN/UIN:</span>29AYSPB6397D1ZX <br></br>\n                                       <span className=\"lightstyle\">State: </span> {constantinvoicedata.state} <br></br>\n                                       <span className=\"lightstyle\">State Code: </span> {constantinvoicedata.state_code}</p>\n                                </div>\n                                <div>\n                                    <span className=\"invoicenamestyle\">SHREE PARAMANANDA ENTERPRISES</span>\n                                    <p><span className=\"lightstyle\">Contact Us:</span> 9035757145/9141070705</p>\n                                </div>\n                            </div>\n                            <table className=\"tbl\">\n                                <tbody>\n                                    <tr>\n                                        <td rowSpan=\"3\">Buyer:</td>\n                                        <td rowSpan=\"3\">{constantinvoicedata.customer_address}\n                                        </td>\n                                        <td colspan=\"3\">Invoice No:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.invoice_no}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\">Date of supply:-</td>\n                                        <td colspan=\"7\">\n                                            {constantinvoicedata.delivery_date != null ?\n                                                moment(constantinvoicedata.delivery_date).format('YYYY-MM-DD') :\n                                                constantinvoicedata.delivery_date\n                                            }\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\">PO no:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.po_number}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>GSTIN/UIN:</td>\n                                        <td>{constantinvoicedata.gst}</td>\n                                        <td colspan=\"3\">Vehicle No:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.vehicle_number}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>State Code:</td>\n                                        <td>{constantinvoicedata.state_code}</td>\n                                        <td colspan=\"3\">Pan Number:</td>\n                                        <td colspan=\"7\">pan 567jkhasdfkj67rt8</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Place of supply : </td>\n                                        <td colspan=\"11\">{constantinvoicedata.place_of_supply}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Contact NO :</td>\n                                        <td colspan=\"2\">{constantinvoicedata.phone_number} </td>\n                                        <td colspan=\"4\">{constantinvoicedata.phone_number_alter_one} </td>\n                                        <td colspan=\"4\">{constantinvoicedata.phone_number_alter_two} </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Sl</td>\n                                        <td>Discription of Product</td>\n                                        <td>HSN CODE</td>\n                                        <td>Qty</td>\n                                        <td>Rate</td>\n                                        <td>Amount</td>\n                                        <td>CGST</td>\n                                        <td>SGST</td>\n                                        <td>IGST</td>\n                                        <td>Discount</td>\n                                    </tr>\n                                    {\n                                        invoiceFormData && invoiceFormData.length &&\n                                        invoiceFormData.map((d, index) => (\n                                            <tr>\n                                                <td >{index + 1}</td>\n                                                <td >{d.product}</td>\n                                                <td >{d.product_hsn_code}</td>\n                                                <td >{d.quantity}</td>\n                                                <td >{d.rate / d.quantity}</td>\n                                                <td >{d.rate}</td>\n                                                <td >{d.cgst}</td>\n                                                <td >{d.sgst}</td>\n                                                <td >{d.igst}</td>\n                                                <td >{d.discount}</td>\n                                            </tr>\n                                        ))\n                                    }\n                                    <tr>\n                                        <td colspan=\"3\">Total</td>\n                                        <td colspan=\"7\">{totalamount}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\" rowSpan=\"5\">\n                                            Terms &Conditions :\n                                            <ol>\n                                                <li>Payment only by DD/CHQ,In faver of Shree Paramananda Enterprises</li>\n                                                <li>In Case of Cash payment contact the above phone number Before Making Payment</li>\n                                                <li>Goods once sold Cannot return Back</li>\n                                            </ol>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"5\">Round off:</td>\n                                        <td colspan=\"4\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">TOTAL:</td>\n                                        <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">Final Payble Amount :- </td>\n                                        <td colSpan=\"3\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"1\">Amount in Words: </td>\n                                        <td colSpan=\"6\">Rupees {totalinwords} Only</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"3\">Received The goods in good condition </td>\n                                        <td colSpan=\"7\">certified that the particulars given above are true and correct For Shree Paramananda Enterprises</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"3\">Receivers Signature: </td>\n                                        <td colSpan=\"7\">Authorised Signatory:</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        : <></>\n                }\n            </div>\n        </div>\n    );\n}\nexport default InvoiceFormat;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddFewCustomersForm/AddFewCustomersForm.js",["941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965"],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersInvoiceForm/DealersInvoiceForm.js",["966","967","968","969","970","971"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport CustomizedComboboxMultipleSelect from '../../atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect';\nimport CustomizedComboboxForState from '../../atoms/CustomizedCombobox/CustomizedComboboxForState';\nimport { generateinvoicesuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport '../../../style/style.css';\nconst DealersInvoiceForm = ({\n  dealersdata,\n  handleClose,\n  api\n}) => {\n  const [comboboxdata, setComboboxdata] = useState([]);\n  const [products, setproducts] = useState({\n    productname: '',\n    quantity: \"\",\n    product_status: \"\"\n  });\n  const [state, setstate] = useState([]);\n  const [selectedstate, setselectedstate] = useState(\"Karnataka\");\n  const [changeddata, setchangeddata] = useState();\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let finalInvoiceNo = '';\n  const generateInvoiceNo = () => {\n    let s1 = \"In22-2023/\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    let notostring = random.toString();\n    let size = notostring.length;\n    if (size === 4) {\n      finalInvoiceNo = s1 + random;\n    }\n    else if (size === 3) {\n      finalInvoiceNo = s1 + \"0\" + random;\n    }\n    else if (size === 2) {\n      finalInvoiceNo = s1 + \"00\" + random;\n    }\n    else if (size === 1) {\n      finalInvoiceNo = s1 + \"000\" + random;\n    }\n  }\n  generateInvoiceNo();\n  useEffect(() => {\n    api.get('stateandstatecodes/getstateandstatecodes')\n      .then((res) => {\n        setstate(res.data);\n      })\n  }, [])\n  const submiteventclicked = () => {\n    api.post('product/fetchallproductdetails', {\n      params: {\n        productsdata: products\n      }\n    })\n      .then((res) => {\n        var data = res.data;\n        let prod = products.map((d) => {\n          let temp = data.find(a => a.product_name == d.productname)\n          return { ...d, ...temp }\n        })\n        let selectedstatecode = \"\";\n        state.map((d) => {\n          if (d.statename === selectedstate) {\n            selectedstatecode = d.statecode;\n          }\n        })\n        api.post('customer/insertdealerscustomertable', {\n          params: {\n            customer_reference_no: finalCustomerRefNo,\n            dealersdata: dealersdata,\n            state: selectedstate,\n            changed_data: changeddata\n          }\n        })\n          .then((res) => {\n          })\n        api.post('dealers/insertdealersdataintodeliverytable', {\n          params: {\n            customer_reference_no: finalCustomerRefNo,\n            invoice_no: finalInvoiceNo,\n            dealersdata: dealersdata,\n            productsdata: prod,\n            state: selectedstate,\n            state_code: selectedstatecode,\n            changed_data: changeddata\n          }\n        })\n          .then((res) => {\n            if (res) {\n              const res = generateinvoicesuccessmsg({})\n              alert(res.msg);\n              handleClose();\n            }\n          })\n      })\n      api.put('product/updateProductsDetailsProductData',{\n        params:products\n      })\n  }\n  const incrementclicked = (data) => {\n    let selectedproductdetails = products.map((product) => {\n      if (product.productname == data.productname) {\n        product.quantity += 1;\n      }\n      return product;\n    });\n    setproducts(selectedproductdetails);\n  }\n  const decrementclicked = (data) => {\n    let selectedproductdetails = products.map((product) => {\n      if (product.productname == data.productname) {\n        product.quantity -= 1;\n      }\n      return product;\n    });\n    setproducts(selectedproductdetails);\n  }\n  const selectedproducts = (e) => {\n    let selectedproducts = e.map((data) => {\n      return { productname: data, quantity: 1 }\n    })\n    setproducts(selectedproducts);\n  }\n  useEffect(() => {\n    api.get('product/displayProductDetailsDataforcombobox')\n      .then((res) => {\n        setComboboxdata(res.data);\n      })\n  }, [])\n  const selecteventforstate = (e) => {\n    setselectedstate(e.label);\n  }\n  const changeevent = (e) => {\n    setchangeddata({ ...changeddata, [e.target.name]: e.target.value });\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Generate Invoice\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              GSTIN Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.gstin_number}\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.enterprise_name}\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.enterprise_address}\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Proprietor Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.proprietor_phone_number}\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Enquired Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxMultipleSelect\n                comboboxdata={comboboxdata}\n                selectedproducts={selectedproducts}\n              />\n            </div>\n          </label>\n        </div>\n        <div>\n          <p>Selected products:-\n            <ul>\n              {products && products.length &&\n                products.map((data) => (\n                  <li className=\"productnamedesign\">\n                    <div>{data.productname}</div>\n                    <div className=\"incrementdecrement\">\n                      <CustomizedBtn BtnName=\"+\" onClick={() => { incrementclicked(data) }} />\n                      {data.quantity}\n                      <CustomizedBtn BtnName=\"-\" onClick={() => { decrementclicked(data) }} />\n                    </div>\n                  </li>\n                ))\n              }\n            </ul>\n          </p>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>PO Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"po_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Vehicle Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"vehicle_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>Place of Supply:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"place_of_supply\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n            <sup className=\"asteriskstyle\">*</sup>State:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxForState\n                className=\"select\"\n                comboboxdata={state}\n                type=\"state\"\n                selectevent={selecteventforstate}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone number (Alter-1):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                type=\"number\"\n                onChange={changeevent}\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone number (Alter-2):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                type=\"number\"\n                onChange={changeevent}\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default DealersInvoiceForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/CustomerInvoiceForm/CustomerInvoiceForm.js",["972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { invoicedataverificationsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport '../../../style/style.css';\n\nconst CustomerInvoiceForm = ({\n    handleClose,\n    invoiceFormData,\n    api,\n    currentCustomerReferenceNoCustomerInvoice\n}) => {\n    const [listofinvoices, setlistofinvoices] = useState([]);\n    const [finalinvoicenumber, setfinalinvoicenumber] = useState('');\n    const [updaterowdata, setUpdaterowdata] = useState();\n    const [rowdatadisplayed, setRowdatadisplayed] = useState();\n    const [rowdatadisplayedalter, setRowdatadisplayedalter] = useState();\n    useEffect(() => {\n        api.get('delivery/fetchinvoicesfromdeliverytable')\n            .then((res) => {\n                setlistofinvoices(res.data);\n            })\n    }, [])\n    useEffect(() => {\n        fetchalldatafromcust();\n    }, [])\n    const fetchalldatafromcust = () => {\n        api.post('/delivery/getalldataofcustomer', {\n            params: {\n                currentCustomerReferenceNoCustomerInvoice\n            }\n        })\n            .then((res) => {\n                const data = res.data;\n                setRowdatadisplayed(data);\n            })\n    }\n    useEffect(() => {\n        var numbers = [];\n        var maximum = Math.max(...numbers);\n        var newmaximum = maximum + 1;\n        if (newmaximum.toString().length === 4) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + newmaximum);\n        }\n        else if (newmaximum.toString().length === 3) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + \"0\" + newmaximum);\n        }\n        else if (newmaximum.toString().length === 2) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + \"00\" + newmaximum);\n        }\n        else if (newmaximum.toString().length === 1) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + \"000\" + newmaximum);\n        }\n    }, [listofinvoices])\n    const submiteventclicked = (customer_reference_no, invoiceFormData) => {\n        let date = new Date();\n        var date1 = date.toISOString();\n        var date2 = date1.split(\"-\");\n        var month = Number(date2[1]);\n        var year = Number(date2[0]);\n        var yearstring = \"\";\n        if(month >= 4 && month <= 12){\n            var y1 = year;\n            var y2 =year+1; \n            yearstring = y1+\"-\"+y2;\n        }\n        if(month>=1 && month <= 3){\n            var y1 = year;\n            var y2 = year-1;\n            yearstring = y2+\"-\"+y1;\n        }\n        let finalInvoiceNo = '';\n        let s1 = \"In\"+yearstring+\"/\";\n        let min = 0;\n        let max = 1000;\n        let random = Math.floor(Math.random() * (max - min + 1)) + min;\n        let notostring = random.toString();\n        let size = notostring.length;\n        if (size === 4) {\n            finalInvoiceNo = s1 + random;\n        }\n        else if (size === 3) {\n            finalInvoiceNo = s1 + \"0\" + random;\n        }\n        else if (size === 2) {\n            finalInvoiceNo = s1 + \"00\" + random;\n        }\n        else if (size === 1) {\n            finalInvoiceNo = s1 + \"000\" + random;\n        }\n        api.put('/delivery/updatepurchasestatusofdeliverytable', {\n            params: {\n                customer_reference_no: customer_reference_no\n            }\n        })\n        api.put('customer/updatefinalstatuscustomertablepurchased',{\n            params:{\n                customer_reference_no: customer_reference_no\n            }\n        })\n        api.put('delivery/updateDeliveryDataafterverify', {\n            params: {\n                invoice_no: finalInvoiceNo,\n                customer_reference_no: customer_reference_no,\n                po_number: rowdatadisplayed[0].po_number,\n                vehicle_no: rowdatadisplayed[0].vehicle_number,\n                pan_number: rowdatadisplayed[0].pan_number,\n                place_of_supply: rowdatadisplayed[0].place_of_supply\n            }\n        })\n            .then((res) => {\n                if (res) {\n                    const res = invoicedataverificationsuccessmsg({});\n                    alert(res.msg);\n                    handleClose();\n                }\n            })\n\n        api.put('product/updateProductsDetailsProductDataDecrement',{\n            rowdatadisplayed\n        })\n    }\n    const changeevent = (event, index) => {\n        setRowdatadisplayedalter(rowdatadisplayed);\n        let updateRowDataByIndex = [...rowdatadisplayed];\n        rowdatadisplayed.find((item, i) => {\n            if (item.delivery_id === index) {\n                updateRowDataByIndex[i][event.target.name] = event.target.value;\n                setRowdatadisplayed(() => [...updateRowDataByIndex]);\n            }\n        })\n    }\n    return (\n        <div>\n            <div className=\"pageheading\">\n                verify invoice and submit\n            </div>\n            {\n                invoiceFormData && invoiceFormData.length &&\n                invoiceFormData.map((data, i) => (\n                    <form className=\"formcontainer\">\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Buyer:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.customer_name}\n                                        type=\"text\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Buyer Address:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.customer_address}\n                                        type=\"text\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    State code:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.state}\n                                        type=\"text\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                <sup className=\"asteriskstyle\">*</sup>Place of supply:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.place_of_supply}\n                                        type=\"text\"\n                                        onChange={(event) => changeevent(event, data.delivery_id)}\n                                        index={i}\n                                        name=\"place_of_supply\"\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Invoice No:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.invoice_no}\n                                        type=\"text\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Date of supply:\n                                </div>\n                                <div>\n                                    <SelectDate\n                                        disable=\"yes\"\n                                        type=\"delivery_date\"\n                                        typeOne=\"delivery_date\"\n                                        onHandleChangeEvent={(event) => changeevent(event, data.delivery_id)}\n                                        incomingdate={\n                                            data.delivery_date != null\n                                                ? data.delivery_date \n                                                : data.delivery_date\n                                        }\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                <sup className=\"asteriskstyle\">*</sup>PO no:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        onChange={(event) => changeevent(event, data.delivery_id)}\n                                        index={i}\n                                        defaultValue={data.po_number}\n                                        type=\"text\"\n                                        name=\"po_number\"\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                <sup className=\"asteriskstyle\">*</sup>Vehicle No:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        onChange={(event) => changeevent(event, data.delivery_id)}\n                                        index={i}\n                                        defaultValue={data.vehicle_number}\n                                        type=\"text\"\n                                        name=\"vehicle_number\"\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Contact Number - 1:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.phone_number}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Contact Number - 2:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.phone_number_alter_one}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Contact Number - 3:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.phone_number_alter_two}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Discription of Product:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.product}\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Product HSN Code:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.product_hsn_code}\n                                        type=\"text\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Quantity:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.quantity}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Rate:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.rate}\n                                        type=\"text\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Amount:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Total:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    CGST:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.cgst}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    SGST:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.sgst}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    IGST:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.igst}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Round off:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    TOTAL:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                        disabled\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        {\n                            data.verification_status\n                                ? <p className=\"verificationstyle\">Purchase Completed!</p>\n                                :\n                                <div className=\"submitcontainee\">\n                                    <CustomizedBtn\n                                        BtnName=\"Verify and Purchase\"\n                                        onClick={() => {\n                                            submiteventclicked(data.customer_reference_no, invoiceFormData)\n                                        }}\n                                    />\n                                </div>\n                        }\n                    </form>\n                ))\n            }\n\n        </div>\n    )\n}\nexport default CustomerInvoiceForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/ProductsDetailsForm/ProductsDetailsForm.js",["988","989","990"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport '../../../style/style.css';\n\nconst ProductsDetailsForm = ({ rowdata, handleClose }) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [productstatus, setproductstatus] = useState([\"Available\", \"Not Available\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const submiteventclicked = () => {\n    axios.put('http://3.84.110.201:3001/product/updateProductsDetails', {\n      params: {\n        updaterowdata\n      }\n    })\n      .then((res) => {\n        if (res) {\n          const res = editedsuccessmsg({});\n          alert(res.msg);\n          handleClose();\n        }\n      })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [\"product_status\"]: event.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Product details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product HSN code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_hsn_code\"\n                defaultValue={rowdata.product_hsn_code}\n                onChange={changeevent}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.product_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Description:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_description\"\n                onChange={changeevent}\n                defaultValue={rowdata.product_description}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Unit of Measure:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"unit_of_measure\"\n                onChange={changeevent}\n                defaultValue={rowdata.unit_of_measure}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Rate per unit:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"rate_per_unit\"\n                onChange={changeevent}\n                defaultValue={rowdata.rate_per_unit}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              GST Rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gst_rate\"\n                onChange={changeevent}\n                defaultValue={rowdata.gst_rate}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll\n                  comboboxdata={productstatus}\n                  dvalue={rowdata.product_status}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"discount\"\n                onChange={changeevent}\n                defaultValue={rowdata.discount}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Stock:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"stock\"\n                onChange={changeevent}\n                defaultValue={rowdata.stock}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default ProductsDetailsForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DeliveryDetailsForm/DeliveryDetailsForm.js",["991","992","993","994","995","996","997","998","999","1000"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst DeliveryDetailsForm = ({ rowdata, handleClose }) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [paymentstatus, setpaymentstatus] = useState([\"Paid\", \"Pending\"]);\n  const [deliverstatus, setdeliverstatus] = useState([\"Delivered\", \"Not Delivered\", \"Cancelled\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const [comboboxdata, setComboboxdata] = useState();\n  useEffect(() => {\n    axios.get(`http://3.84.110.201:3001/product/displayProductDetailsDataforcombobox`)\n    .then((res)=>{\n      var data = res.data;\n      let productnamesarray = [];\n        data.map((d) => {\n          productnamesarray.push(d.product_name);\n        })\n        setComboboxdata(productnamesarray);\n    })\n  }, [])\n  const [updatedPaymentstatus, setupdatedPaymentstatus] = useState('');\n  const [updatedDeliverystatus, setupdatedDeliverystatus] = useState('');\n  const paymentstatusevent = (e) => {\n    setupdatedPaymentstatus(e);\n  }\n  const deliverystatusevent = (e) => {\n    setupdatedDeliverystatus(e);\n  }\n  const submiteventclicked = () => {\n    axios.put(`http://3.84.110.201:3001/product/updateProductsDetailsProductDataIncrement`,{\n      params:{\n        updaterowdata\n      }\n    })\n    axios.put(`http://3.84.110.201:3001/delivery/updateDeliveryDetails`,{\n      params:{\n        updaterowdata\n      }\n    })\n    .then((res)=>{\n      if(res){\n        const res = editedsuccessmsg({});\n        alert(res.msg);\n        handleClose();\n      }\n    })\n  }\n  const selectevent = (event) =>{\n    setUpdaterowdata({ ...updaterowdata, \"delivery_status\": event.value })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Delivery Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Reference Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.customer_reference_no}\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Sl No:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_sl_no}\n                onChange={changeevent}\n                name=\"product_sl_no\"\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Booked Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n             <SelectDate\n              type=\"booked_date\"\n              typeOne=\"booked_date\"\n              incomingdate={\n                rowdata.booked_date != null ?\n                moment(rowdata.booked_date).format('YYYY-MM-DD'):\n                rowdata.booked_date\n              }\n              disable=\"yes\"\n            /> \n          </div>\n            \n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Requested Delivery Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <SelectDate\n              type=\"requested_delivery_date\"\n              typeOne=\"requested_delivery_date\"\n              incomingdate={\n                rowdata.requested_delivery_date != null ?\n                moment(rowdata.requested_delivery_date).format('YYYY-MM-DD'):\n                rowdata.requested_delivery_date\n              }\n              disable=\"yes\"\n            />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Delivery Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <SelectDate\n              type=\"delivery_date\"\n              typeOne=\"delivery_date\"\n              incomingdate={\n                rowdata.delivery_date != null ?\n                moment(rowdata.delivery_date).format('YYYY-MM-DD'):\n                rowdata.delivery_date\n              }\n              disable=\"yes\"\n            />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Invoice number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.invoice_no}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"customer_address\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_address}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number Alter (one):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number_alter_one}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number Alter (two):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number_alter_two}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Hsn Code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_hsn_code}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <input\n                defaultValue={rowdata.product}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Quantity:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.quantity}\n                type=\"number\"\n                name=\"quantity\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.rate}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.discount}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              CGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.cgst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              SGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.sgst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              IGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.igst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Final Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"final_amount\"\n                defaultValue={rowdata.final_amount}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Balance Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"balance_amount\"\n                defaultValue={rowdata.balance_amount}\n                type=\"number\"\n                onChange={changeevent}\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Payment Status:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <input\n                name=\"balance_amount\"\n                defaultValue={rowdata.payment_status}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Booking Advance Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"booking_advance_amount\"\n                onHandleChangeEvent={changeevent}\n                defaultValue={rowdata.booking_advance_amount}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Delivery Status:\n            </div>\n             <div className=\"formdatainputstyle\">\n             <CustomizedComboboxAll \n                comboboxdata={deliverstatus}\n                dvalue={rowdata.delivery_status}\n                selectevent={selectevent}\n              />\n            </div> \n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default DeliveryDetailsForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddProductForm/AddProductForm.js",["1001","1002","1003"],[],"import React, { useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport { addedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport axios from 'axios';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport '../../../style/style.css';\nconst AddProductForm = ({ handleClose }) => {\n  const [customerdata, setcustomerdata] = useState();\n  const [productstatus, setproductstatus] = useState(['Available', 'Not Available']);\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let finalcurrentdate = \"\";\n  const currentDate = () => {\n    let date = new Date();\n    finalcurrentdate = moment(date).format('YYYY-MM-DD');\n  }\n  currentDate();\n  const submiteventclicked = () => {\n    axios.post('http://3.84.110.201:3001/product/addProductData', {\n      params: {\n        data: customerdata\n      }\n    })\n      .then((res) => {\n        if (res) {\n          const res = addedsuccessmsg({})\n          alert(res.msg);\n          handleClose();\n        }\n      })\n  }\n  const changeevent = (event) => {\n    setcustomerdata({ ...customerdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setcustomerdata({ ...customerdata, \"product_status\": event.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Add Product Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product hsn code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_hsn_code\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product description:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_description\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Unit of measure:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"unit_of_measure\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              rate per unit:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"rate_per_unit\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              gst rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gst_rate\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll \n                  comboboxdata={productstatus}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              stock:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"stock\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"discount\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default AddProductForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate.js",["1004","1005","1006","1007","1008","1009","1010","1011","1012"],[],"import React, { useEffect, useState } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from \"../../atoms/CustomizedPrint/CustomizedPrint\";\nimport CustomizedDownload from \"../../atoms/CustomizedDownload/CustomizedDownload\";\nimport { CSVLink } from \"react-csv\";\nimport { ToWords } from 'to-words';\nimport axios from 'axios';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst DealersInvoiceFormGenerate = ({\n    invoiceFormData,\n    modalview,\n    custrefno,\n    invoiceno,\n    fetchdealersdatatoverify\n}) => {\n    const [listofinvoices, setlistofinvoices] = useState([]);\n    const [tabledata, setTabledata] = React.useState({});\n    // const componentRef = useRef();\n    const [constantinvoicedata, setconstantinvoicedata] = useState();\n    const [totalamount, settotalamount] = useState();\n    const [totalinwords, settotalinwords] = useState();\n    const toWords = new ToWords();\n    // const handlePrint = useReactToPrint({\n    //     content: () => componentRef.current,\n    // });\n    useEffect(() => {\n        if (fetchdealersdatatoverify) {\n            const tempdata = [...new Set(fetchdealersdatatoverify.map((e) => e.customer_reference_no))];\n            tempdata.map((temp) => {\n                let filterByTempData = fetchdealersdatatoverify.filter(dataObject => dataObject.customer_reference_no === temp)\n                var fixedstrings = filterByTempData[0];\n                setconstantinvoicedata(fixedstrings);\n                let temptotal = 0;\n                fetchdealersdatatoverify.map((data) => temptotal = temptotal + data.final_amount);\n                settotalamount(temptotal);\n                let words = toWords.convert(temptotal);\n                settotalinwords(words);\n            })\n        }\n    }, [fetchdealersdatatoverify])\n    useEffect(() => {\n        axios.get('http://3.84.110.201:3001/delivery/fetchinvoicesfromdeliverytable')\n            .then((res) => {\n                setlistofinvoices(res.data);\n            })\n    }, [])\n    useEffect(() => {\n        axios.post('http://3.84.110.201:3001/jointables/downloadinvoicedisplayedastable', {\n            params: {\n                invoice_no: invoiceno,\n                customer_reference_no: custrefno\n            }\n        })\n            .then((res) => {\n                setTabledata(res.data);\n            })\n    }, [])\n    const headers = [\n        { label: 'customer reference no', key: 'customer_reference_no' },\n        { label: 'booked date', key: 'booked_date' },\n        { label: 'requested delivery date', key: 'requested_delivery_date' },\n        { label: 'delivery date', key: 'delivery_date' },\n        { label: 'invoice no', key: 'invoice_no' },\n        { label: 'customer address', key: 'customer_address' },\n        { label: 'gst', key: 'gst' },\n        { label: 'phone number', key: 'phone_number' },\n        { label: 'product hsn code', key: 'product_hsn_code' },\n        { label: 'product', key: 'product' },\n        { label: 'quantity', key: 'quantity' },\n        { label: 'rate', key: 'rate' },\n        { label: 'discount', key: 'discount' },\n        { label: 'cgst', key: 'cgst' },\n        { label: 'sgst', key: 'sgst' },\n        { label: 'igst', key: 'igst' },\n        { label: 'final amount', key: 'final_amount' },\n        { label: 'balance amount', key: 'balance_amount' },\n        { label: 'payment status', key: 'payment_status' },\n        { label: 'booking advance amount', key: 'booking_advance_amount' },\n        { label: 'delivery status', key: 'delivery_status' },\n        { label: 'customer name', key: 'customer_name' },\n    ];\n    const csvReport = {\n        filename: 'DeliveryReports.csv',\n        headers: headers,\n        data: tabledata\n    }\n    return (\n        <div className=\"invoiceformatcontainer\">\n            <div className=\"invoiceheader\">\n                {/* <div>\n                    <CustomizedPrint\n                    onClick={handlePrint}\n                />\n                </div> */}\n                {/* <div>\n                    {\n                        tabledata && tabledata.length ?\n                            <CSVLink {...csvReport}><CustomizedDownload /></CSVLink> : null\n                    }\n                </div> */}\n            </div>\n            <div className=\"table-responsive\" id=\"tableprint\">\n                {\n                    constantinvoicedata\n                        ?\n                        <div>\n                        <div className=\"invoicecontainer\">\n                                <div>\n                                    <p> <span className=\"lightstyle\">Address:</span> Shop #05,Medhini Arcade, <br></br>\n                                        Kithaganahalli Gate, <br></br>Opp Anna Building,\n                                        Hosur Main Road<br></br> Bangalore-560099,\n                                        <br></br></p>\n                                    <p> <span className=\"lightstyle\">GSTIN/UIN:</span>29AYSPB6397D1ZX <br></br>\n                                       <span className=\"lightstyle\">State: </span> {constantinvoicedata.state} <br></br>\n                                       <span className=\"lightstyle\">State Code: </span> {constantinvoicedata.state_code}</p>\n                                </div>\n                                <div>\n                                    <span className=\"invoicenamestyle\">SHREE PARAMANANDA ENTERPRISES</span>\n                                    <p><span className=\"lightstyle\">Contact Us:</span> 9035757145/9141070705</p>\n                                </div>\n                            </div>\n                        <table className=\"tbl\">\n                            {/* <thead>\n                                <tr>\n                                    <th colspan=\"6\" scope=\"col\">\n                                        <div className=\"theaddiv\">\n                                            <h6>TAX INVOICE</h6>\n                                            <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n                                            <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,Opp Anna Building,Hosur Main Road Bangalore-560099,Mobile: 9035757145/9902880851/9141070705</p>\n                                            <p>Email ID:shreeparamananda@gmail.com</p>\n                                            <p>GSTIN/UIN:29AYSPB6397D1ZX ,Karnataka State Code:29</p>\n                                        </div>\n                                    </th>\n                                </tr>\n                            </thead> */}\n                            <tbody>\n                                <tr>\n                                    <td rowSpan=\"3\">Buyer:</td>\n                                    <td rowSpan=\"3\">{constantinvoicedata.customer_address}\n                                    </td>\n                                    <td colspan=\"3\">Invoice No:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.invoice_no}</td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\">Date of supply:-</td>\n                                    <td colspan=\"7\">\n                                        {\n                                        constantinvoicedata.delivery_date != null ?\n                                        moment(constantinvoicedata.delivery_date).format('YYYY-MM-DD'):\n                                        constantinvoicedata.delivery_date\n                                        }\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\">PO no:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.po_number}</td>\n                                </tr>\n                                <tr>\n                                    <td>GSTIN/UIN:</td>\n                                    <td>{constantinvoicedata.gst}</td>\n                                    <td colspan=\"3\">Vehicle No:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.vehicle_number}</td>\n                                </tr>\n                                <tr>\n                                    <td>State Code:</td>\n                                    <td>{constantinvoicedata.state}</td>\n                                    <td colspan=\"3\">Pan Number:</td>\n                                    <td colspan=\"7\">pan 567jkhasdfkj67rt8</td>\n                                </tr>\n                                <tr>\n                                    <td>Place of supply : </td>\n                                    <td colspan=\"11\">{constantinvoicedata.state}</td>\n                                </tr>\n                                <tr>\n                                    <td>Contact NO :</td>\n                                    <td colspan=\"2\">{constantinvoicedata.phone_number} </td>\n                                    <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                    <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                </tr>\n                                <tr>\n                                    <td>Sl</td>\n                                    <td>Discription of Product</td>\n                                    <td>HSN CODE</td>\n                                    <td>Qty</td>\n                                    <td>Rate</td>\n                                    <td>Amount</td>\n                                    <td>CGST</td>\n                                    <td>SGST</td>\n                                    <td>IGST</td>\n                                    <td>Discount</td>\n                                </tr>\n                                {\n                                    fetchdealersdatatoverify && fetchdealersdatatoverify.length &&\n                                    fetchdealersdatatoverify.map((d, index) => (\n                                        <tr>\n                                            <td >{index +1}</td>\n                                            <td >{d.product}</td>\n                                            <td >{d.product_hsn_code}</td>\n                                            <td >{d.quantity}</td>\n                                            <td >{d.rate/d.quantity}</td>\n                                            <td >{d.rate}</td>\n                                            <td >{d.cgst}</td>\n                                            <td >{d.sgst}</td>\n                                            <td >{d.igst}</td>\n                                            <td >{d.discount}</td>\n                                        </tr>\n                                    ))\n                                }\n                                <tr>\n                                    <td colspan=\"3\">Total</td>\n                                    <td colspan=\"7\">{totalamount}</td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\" rowSpan=\"5\">\n                                        Terms &Conditions :\n                                        <ol>\n                                            <li>Payment only by DD/CHQ,In faver of Shree Paramananda Enterprises</li>\n                                            <li>In Case of Cash payment contact the above phone number Before Making Payment</li>\n                                            <li>Goods once sold Cannot return Back</li>\n                                        </ol>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">Round off:</td>\n                                    <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">TOTAL:</td>\n                                    <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">Final Payble Amount :- </td>\n                                    <td colSpan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"1\">Amount in Words: </td>\n                                    <td colSpan=\"6\">Rupees {totalinwords} Only</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"3\">Received The goods in good condition </td>\n                                    <td colSpan=\"7\">certified that the particulars given above are true and correct For Shree Paramananda Enterprises</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"3\">Receivers Signature: </td>\n                                    <td colSpan=\"7\">Authorised Signatory:</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        </div>\n                        : <></>\n                }\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoiceFormGenerate;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/CustomerFollowUpForm/CustomerFollowUpForm.js",["1013","1014","1015"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport axios from 'axios';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport '../../../style/style.css';\nimport moment from 'moment';\n\nconst CustomerFollowUpForm = ({\n  rowdata,\n  handleClose\n}) => {\n  const [updaterowdata, setUpdaterowdata] = useState({\n    \"follow_up_call\" :\"0000-00-00\"\n  });\n  const [finalstatus, setfinalstatus] = useState([\"Booked\", \"Cancelled\", \"Follow Up In Progress\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const submiteventclicked = () => {\n    axios.put('http://3.84.110.201:3001/customer/updateCustomerDetails',{\n      params:{\n        updaterowdata\n      }\n    })\n    .then((res)=>{\n      if(res){\n        const res = editedsuccessmsg({});\n        alert(res.msg);\n        handleClose();\n      }\n    })\n  }\n  const selectevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, \"follow_up_call\": event })\n  }\n  const selectevent1 = (event) => {\n    setUpdaterowdata({ ...updaterowdata, \"final_status\":event.value })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Customer Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Reference No:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.customer_reference_no}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquiry Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <SelectDate\n                type=\"enquiry_date\"\n                typeOne=\"enquiry_date\"\n                incomingdate={\n                  rowdata.enquiry_date != null ?\n                  moment(rowdata.enquiry_date).format('YYYY-MM-DD'):\n                  rowdata.enquiry_date\n                }\n                disable=\"yes\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"customer_address\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_address}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number}\n                type=\"number\"\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired product hsn code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_hsn_code}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Quantity:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.quantity}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Comments:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"comments\"\n                onChange={changeevent}\n                defaultValue={rowdata.comments}\n                type=\"text\"\n              />\n            </div>\n            {/* <div className=\"formdatainputstyle\">\n              <input\n                name=\"comments\"\n                onChange={changeevent}\n                value={rowdata.comments}\n                type=\"text\"\n              />\n            </div> */}\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Follow up call:\n            </div>\n            <SelectDate\n                selectevent={selectevent}\n                typeOne=\"follow_up_call\"\n                incomingdate={\n                  rowdata.follow_up_call != null\n                        ? moment(rowdata.follow_up_call).format('YYYY-MM-DD')\n                        : rowdata.follow_up_call = rowdata.follow_up_call\n                }\n            />\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Final status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll\n                comboboxdata={finalstatus}\n                dvalue={rowdata.final_status}\n                selectevent={selectevent1}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default CustomerFollowUpForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/EditDealersReportForm/EditDealersReportForm.js",["1016","1017"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport '../../../style/style.css';\nconst EditDealersReportForm = ({ rowdata, handleClose }) => {\n    const [updaterowdata, setUpdaterowdata] = useState();\n    const [dealerstatus, setdealerstatus] = useState([\"Active\", \"In Active\"]);\n    useEffect(() => {\n        setUpdaterowdata(rowdata);\n    }, [])\n    const submiteventclicked = (e) => {\n        axios.put('http://3.84.110.201:3001/dealers/updateDealersDetails', {\n            params: {\n                updaterowdata\n            }\n        })\n            .then((res) => {\n                if (res) {\n                    const res = editedsuccessmsg({});\n                    alert(res.msg);\n                    handleClose();\n                }\n            })\n    }\n    const changeevent = (event) => {\n        setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n    }\n    const selectevent = (event) => {\n        setUpdaterowdata({ ...updaterowdata, \"gstin_status\": event.value })\n    }\n    return (\n        <div>\n            <div className=\"pageheading\">\n                Edit Dealers Details\n            </div>\n            <form className=\"formcontainer\">\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Enterprise Name:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"enterprise_name\"\n                                defaultValue={rowdata.enterprise_name}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Enterprise Address:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"enterprise_address\"\n                                defaultValue={rowdata.enterprise_address}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Proprietor Name:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"proprietor_name\"\n                                defaultValue={rowdata.proprietor_name}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Proprietor Phone Number:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"proprietor_phone_number\"\n                                defaultValue={rowdata.proprietor_phone_number}\n                                onChange={changeevent}\n                                type=\"number\"\n                                onWheel={(e) => e.target.blur()}\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            GSTIN Number:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                defaultValue={rowdata.gstin_number}\n                                type=\"text\"\n                                readOnly\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            GSTIN Status:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <CustomizedComboboxAll\n                                comboboxdata={dealerstatus}\n                                dvalue={rowdata.gstin_status}\n                                selectevent={selectevent}\n                                />\n                            {/* <CustomizedComboboxForAll\n                                comboboxdata={dealerstatus}\n                                selectevent={selectevent}\n                                selectedvalue={rowdata.gstin_status}\n                            /> */}\n                        </div>\n                    </label>\n                </div>\n                <div className=\"submitcontainee\">\n                    <CustomizedBtn\n                        BtnName=\"submit\"\n                        onClick={submiteventclicked}\n                    />\n                </div>\n            </form>\n        </div>\n    )\n}\nexport default EditDealersReportForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersInvoicesListForm/DealersInvoicesListForm.js",["1018","1019","1020","1021","1022"],[],"import React, { useEffect, useState } from \"react\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport FullScreenModalTwo from \"../FullScreenModalTwo/FullScreenModalTwo\";\nimport '../../../style/style.css';\nimport Button from '@mui/material/Button';\n\nconst DealersInvoicesListForm = ({\n    deliveryinvoices,\n    fetchinvoicesfromdelivery,\n    api\n}) => {\n    const [fetchdealersdatatoverify, setfetchdealersdatatoverify] = useState();\n    const [verificationstatus, setverificationstatus] = useState();\n    const [currentInvoiceno, setcurrentInvoiceno] = useState();\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) => {\n        setOpen(e)\n    }\n    const currentInvoicenoevent = (e) => {\n        setcurrentInvoiceno(e);\n    }\n    const fetchdealersdatatoverifyevent = (e) => {\n        api.post('delivery/fetchdealersdatatoverify', {\n            params: {\n                invoice_no: e\n            }\n        })\n            .then((res) => {\n                const fetchdealersdatatoverify = res.data;\n                api.put('jointables/updaterateofdeliverytableonbook', {\n                    params: {\n                        data: fetchdealersdatatoverify\n                    }\n                })\n                    .then((res) => {\n                    })\n                api.post('delivery/getstatecodefromdeliverytableonbook', {\n                    params: {\n                        data: fetchdealersdatatoverify\n                    }\n                })\n                    .then((res) => {\n                        var data = res.data;\n                        for (var i = 0; i < data.length; i++) {\n                            if (data[i].state_code === 29) {\n                                api.put('jointables/updatekarnatakagstratesdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                                    .then((res) => {\n                                    })\n                                api.put('jointables/updatefinalamountdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                                api.put('/jointables/updatebalanceamountdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                                api.put('/jointables/updatepaymentstatusdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                            }\n                            else {\n                                api.put('jointables/updateotherstatesgstratesdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                                    .then((res) => {\n                                    })\n                                api.put('jointables/updatefinalamountdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                                api.put('/jointables/updatebalanceamountdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                                api.put('/jointables/updatepaymentstatusdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                            }\n                        }\n                    })\n                alert(\"Updated Successfully\");\n            })\n    }\n    const updatedownloadinvoiceevent = (e) =>{\n        api.post('delivery/fetchdealersdatatoverify', {\n            params: {\n                invoice_no: e\n            }\n        })\n        .then((res) => {\n            setfetchdealersdatatoverify(res.data);\n        })\n    }\n    const fetchverificationstatusevent = (e) => {\n        api.post('delivery/getverificationstatus', {\n            params: {\n                invoice_no: e\n            }\n        })\n            .then((res) => {\n                setverificationstatus(res.data);\n            })\n    }\n    return (\n        <div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                currentInvoiceno={currentInvoiceno}\n                verificationstatus={verificationstatus}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n                fetchinvoicesfromdelivery={fetchinvoicesfromdelivery}\n            />\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered \">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Invoices List</th>\n                            <th>Action</th>\n                            {/* <th>Generate</th> */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            deliveryinvoices && deliveryinvoices.length\n                                ? deliveryinvoices.map((data) => (\n                                    <tr>\n                                        <td>{data.invoice_no}</td>\n                                        <td>{\n                                            data.purchase_status == 1\n                                                ?\n                                                <CustomizedBtn\n                                                    BtnName=\"View\"\n                                                    onClick={() => {\n                                                        // fetchdealersdatatoverifyevent(data.invoice_no);\n                                                        fetchverificationstatusevent(data.invoice_no);\n                                                        currentInvoicenoevent(data.invoice_no);\n                                                        setModalview(\"dealersdetailsform\");\n                                                        openevent(true);\n                                                    }}\n                                                />\n                                                :\n                                                <div className=\"btndesign\">\n                                                    <span className=\"cbtn\"><CustomizedBtn\n                                                        BtnName=\"Update Invoice\"\n                                                        onClick={() => {\n                                                            fetchdealersdatatoverifyevent(data.invoice_no);\n                                                        }}\n                                                    />\n                                                    </span>\n                                                    <span className=\"cbtn\"><CustomizedBtn\n                                                        BtnName=\"Verify Invoice\"\n                                                        onClick={() => {\n                                                            fetchverificationstatusevent(data.invoice_no);\n                                                            currentInvoicenoevent(data.invoice_no);\n                                                            setModalview(\"dealersdetailsform\");\n                                                            openevent(true);\n                                                        }}\n                                                    />\n                                                    </span>\n                                                </div>\n                                        }\n                                        </td>\n                                        {/* <td>\n                                            <div className='btnstyle'>\n                                                <Button \n                                                    id=\"btn\"\n                                                    data-bs-toggle=\"modal\"\n                                                    data-bs-target=\"#exampleModal\"\n                                                    onClick={()=>{\n                                                        updatedownloadinvoiceevent(data.invoice_no);\n                                                    }}\n                                                    >\n                                                        Download Invoice\n                                                </Button>\n                                            </div>\n                                            <FullScreenModalTwo \n                                             api={api}\n                                             modalview={modalview}\n                                             open={open}\n                                             openevent={openevent}\n                                             currentInvoiceno={currentInvoiceno}\n                                             verificationstatus={verificationstatus}\n                                             fetchdealersdatatoverify={fetchdealersdatatoverify}\n                                              />\n                                        </td> */}\n                                    </tr>\n                                ))\n                                :\n                                <tr>\n                                    <td colSpan={3}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoicesListForm;","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedText/CustomizedText.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedTextInput/CustomizedTextInput.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddCustomersForm/AddCustomersForm.js",["1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport CustomizedBtn from '../../atoms/CustomizedBtn/CustomizedBtn';\nimport { purchasesuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from \"../../atoms/CustomizedPrint/CustomizedPrint\";\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport '../../../style/style.css';\n\nconst AddCustomersForm = ({\n    currentCustomerReferenceNo,\n    handleClose,\n    displaycustomerfollowupevent,\n    purchasestatus,\n    bookingstatus,\n    api,\n    setpurchasemsgevent\n}) => {\n    const [rowdatadisplayed, setRowdatadisplayed] = useState();\n    const [paymentstatus, setpaymentstatus] = useState([\"paid\", \"pending\"]);\n    const [bookeddate, setbookeddate] = useState('');\n    const [productdata, setproductdata] = useState({});\n    const [finalpurchasestatus, setfinalpurchasestatus] = useState();\n    const [finalbookingstatus, setfinalbookingstatus] = useState();\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n    useEffect(() => {\n        if (purchasestatus) {\n            setfinalpurchasestatus(purchasestatus[0].purchase_status);\n        }\n    }, [purchasestatus])\n    useEffect(() => {\n        if (bookingstatus) {\n            setfinalbookingstatus(bookingstatus[0].booking_status);\n        }\n    }, [bookingstatus])\n    const selectevent = (event, index) => {\n        let updateRowDataByIndex = [...rowdatadisplayed];\n        rowdatadisplayed.find((item, i) => {\n            if (item.delivery_id === index) {\n                updateRowDataByIndex[i][\"payment_status\"] = event.target.innerHTML;\n                setRowdatadisplayed(() => [...updateRowDataByIndex]);\n            }\n        })\n    }\n    const bookeddateevent = () => {\n        let newDate = new Date()\n        let date = newDate.getDate();\n        let month = newDate.getMonth() + 1;\n        let year = newDate.getFullYear();\n        let finaldate = year + \"-\" + month + \"-\" + date;\n        setbookeddate(finaldate);\n    }\n    const [updaterowdata, setUpdaterowdata] = useState();\n    useEffect(() => {\n        bookeddateevent();\n    }, [])\n    useEffect(() => {\n        fetchalldatafromcust();\n    }, [])\n    const fetchalldatafromcust = () => {\n        api.post('/delivery/getalldataofcustomer', {\n            params: {\n                currentCustomerReferenceNo\n            }\n        })\n            .then((res) => {\n                const data = res.data;\n                setRowdatadisplayed(data);\n                setUpdaterowdata(data[0]);\n            })\n    }\n    useEffect(() => {\n        if (updaterowdata && updaterowdata.product_hsn_code) {\n            api.post('/product/displayProductDetailsDatabasedonproducthsn', {\n                params: {\n                    product_hsn_code: updaterowdata.product_hsn_code\n                }\n            })\n                .then((res) => {\n                    const data = res.data;\n                    setproductdata(data);\n                })\n        }\n    }, [updaterowdata]);\n    const submiteventclicked = () => {\n        api.put('/customer/updatefinalstatuscustomertable', {\n            params: {\n                final_status: \"Booked\",\n                customer_reference_no: currentCustomerReferenceNo\n            }\n        })\n            .then((res) => {\n                displaycustomerfollowupevent();\n            })\n        api.put('/delivery/updatebookingstatusofdeliverytable', {\n            params: {\n                customer_reference_no: currentCustomerReferenceNo\n            }\n        })\n            .then((res) => {\n                displaycustomerfollowupevent();\n            })\n        api.put('/delivery/updateDeliveryData', {\n            params: {\n                rowdatadisplayed: rowdatadisplayed\n            }\n        })\n            .then((res) => {\n            })\n        api.put('/delivery/updaterateofdelivery', {\n            params: {\n                rowdatadisplayed: rowdatadisplayed\n            }\n        })\n            .then((res) => {\n            })\n        api.post('/delivery/getstatecodefromdelivery', {\n            params: {\n                rowdatadisplayed: rowdatadisplayed\n            }\n        })\n            .then((res) => {\n                const data = res.data;\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i].state_code === 29) {\n                        api.put('/jointables/updatekarnatakagstrates', {\n                            params: {\n                                customer_reference_no: data[i].customer_reference_no,\n                                product_hsn_code: data[i].product_hsn_code\n                            }\n                        })\n                            .then((res) => {\n                            })\n                        api.put('/jointables/updatefinalamountdelivery', {\n                            params: {\n                                rowdatadisplayed: rowdatadisplayed\n                            }\n                        })\n                            .then((res) => {\n                            })\n                        api.put('/delivery/updatebalanceamountdelivery', {\n                            params: {\n                                rowdatadisplayed: rowdatadisplayed\n                            }\n                        })\n                            .then((res) => {\n                                if (res) {\n                                    setpurchasemsgevent(\"Booking Successfully\");\n                                    // alert(res.msg);\n                                    // const res = purchasesuccessmsg({});\n                                    handleClose();\n                                }\n                            })\n                    }\n                    else {\n                        api.put('/delivery/updateotherstatesgstrates', {\n                            params: {\n                                customer_reference_no: data[i].customer_reference_no,\n                                product_hsn_code: data[i].product_hsn_code\n                            }\n                        })\n                            .then((res) => {\n                            })\n                        api.put('/jointables/updatefinalamountdelivery', {\n                            params: {\n                                rowdatadisplayed: rowdatadisplayed\n                            }\n                        })\n                            .then((res) => {\n                            })\n                        api.put('/delivery/updatebalanceamountdelivery', {\n                            params: {\n                                rowdatadisplayed: rowdatadisplayed\n                            }\n                        })\n                            .then((res) => {\n                                if (res) {\n                                    setpurchasemsgevent(\"Order Placed Successfully\");\n                                    // const res = purchasesuccessmsg({});\n                                    // alert(res.msg);\n                                    handleClose();\n                                }\n                            })\n                    }\n                }\n            })\n    }\n    const changeevent = (event, index) => {\n        let updateRowDataByIndex = [...rowdatadisplayed];\n        rowdatadisplayed.find((item, i) => {\n            if (item.delivery_id === index) {\n                updateRowDataByIndex[i][event.target.name] = event.target.value;\n                setRowdatadisplayed(() => [...updateRowDataByIndex]);\n            }\n        })\n    }\n    return (\n        <div>\n            <div>\n                <CustomizedPrint\n                    onClick={handlePrint}\n                />\n            </div>\n            <div ref={componentRef}>\n                <div className=\"formheading\">\n                    <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n                    <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,\n                        Opp Anna\n                        Building,Hosur Main Road Bangalore-560099,\n                        <br></br>Mobile: 9035757145/9902880851/9141070705</p>\n                </div>\n                <div className=\"pageheading\">\n                    Purchase Order\n                </div>\n                {\n                    rowdatadisplayed && rowdatadisplayed.length &&\n                    rowdatadisplayed.map((data, i) => (\n                        <form className=\"formcontainer\">\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Customer Reference Number:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={currentCustomerReferenceNo}\n                                            type=\"text\"\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Booked date:\n                                    </div>\n                                    <div>\n                                        <SelectDate\n                                            type=\"booked_date\"\n                                            typeOne=\"booked_date\"\n                                            incomingdate={\n                                                data.booked_date != null\n                                                    ? data.booked_date = data.booked_date\n                                                    : data.booked_date = data.booked_date\n                                            }\n                                            disable=\"yes\"\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Requested delivery date:\n                                    </div>\n                                    <div>\n                                        <SelectDate\n                                            typeOne=\"requested_delivery_date\"\n                                            onHandleChangeEvent={(event) => changeevent(event, data.delivery_id)}\n                                            incomingdate={\n                                                data.requested_delivery_date != null\n                                                    ? data.requested_delivery_date = data.requested_delivery_date\n                                                    : data.requested_delivery_date = data.requested_delivery_date\n                                            }\n                                            disable=\"yes\"\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Customer Name:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={data.customer_name}\n                                            name=\"customer_name\"\n                                            type=\"text\"\n                                            onChange={(event) => changeevent(event, data.delivery_id)}\n                                            disabled\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Customer Address:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={data.customer_address}\n                                            name=\"customer_address\"\n                                            type=\"text\"\n                                            onChange={(event) => changeevent(event, data.delivery_id)}\n                                            disabled\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        State:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={data.state}\n                                            type=\"text\"\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Phone number:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"phone_number\"\n                                            defaultValue={data.phone_number}\n                                            onWheel={(e) => e.target.blur()}\n                                            disabled\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product hsn code:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            defaultValue={data.product_hsn_code}\n                                            onWheel={(e) => e.target.blur()}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.product}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Quantity:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"quantity\"\n                                            defaultValue={data.quantity}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product Rate:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.rate}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Discount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.discount}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                      Rate After Extended Discount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"extended_discount\"\n                                            onChange={(event) => changeevent(event, data.delivery_id)}\n                                            defaultValue={data.extended_discount}\n                                            onWheel={(e) => e.target.blur()}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        CGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.cgst}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        SGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.sgst}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        IGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.igst}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Rate:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.rate}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Final amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.final_amount}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Balance amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            defaultValue={data.balance_amount}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Payment status:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.payment_status}\n                                            readOnly\n                                            disabled\n                                        />\n                                    </div> \n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Booking advance amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"booking_advance_amount\"\n                                            defaultValue={data.booking_advance_amount}\n                                            onChange={(event) => changeevent(event, data.delivery_id)}\n                                            onWheel={(e) => e.target.blur()}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"divider\"></div>\n                        </form>\n                    ))\n                }\n            </div>\n            {\n                finalpurchasestatus == 1\n                    ? <p className=\"verificationstyle\">Purchase completed!</p>\n                    : finalbookingstatus == 1 \n                    ? <p className=\"verificationstyle\">Booking completed!</p>\n                    : <div className=\"submitcontainee\">\n                        <CustomizedBtn\n                            BtnName=\"Book\"\n                            onClick={submiteventclicked}\n                        />\n                    </div>\n            }\n        </div>\n    )\n}\nexport default AddCustomersForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddDealersForm/AddDealersForm.js",["1040","1041","1042","1043","1044"],[],"import React, { useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport { addedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxForAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxForAll\";\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport '../../../style/style.css';\nconst AddDealersForm = ({ handleClose }) => {\n  const [customerdata, setcustomerdata] = useState();\n  const [gststatus, setgststatus] = useState(['Active', 'In Active']);\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let updatedate = \"\";\n  let finalcurrentdate = \"\";\n  const currentDate = () => {\n    let date = new Date();\n    finalcurrentdate = moment(date).format('YYYY-MM-DD');\n  }\n  currentDate();\n  const submiteventclicked = () => {\n    axios.post(`http://3.84.110.201:3001/dealers/addDealersData`,{\n      params:{\n        data: customerdata\n      }\n    })\n    .then((res)=>{\n      if(res){\n        const res = addedsuccessmsg({})\n        alert(res.msg);\n        handleClose();\n      }\n    })\n  }\n  const changeevent = (event) => {\n    setcustomerdata({ ...customerdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setcustomerdata({ ...customerdata, \"gstin_status\": event.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Add Dealers Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              GSTIN Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gstin_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"enterprise_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"enterprise_address\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Proprietor address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"proprietor_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Proprietor phone number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"proprietor_phone_number\"\n                type=\"number\"\n                onChange={changeevent}\n                onWheel={(e) => e.target.blur()}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              gst status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll \n                  comboboxdata={gststatus}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default AddDealersForm;","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedEditIcon/CustomizedEditIcon.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedDownload/CustomizedDownload.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedPrint/CustomizedPrint.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedDatepicker/CustomizedDatepicker.js",["1045","1046"],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedSelect/CustomizedSelect.js",["1047"],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedDatepicker/SelectDate.js",["1048","1049"],[],"/Users/rashmishrees/Desktop/sdd/src/components/organisms/SuccessMsg/SuccessMsg.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect.js",["1050"],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForState.js",["1051","1052","1053","1054"],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxAll.js",["1055","1056"],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForAll.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/FullScreenModal/FullScreenModal.js",["1057"],[],"import React, {useRef } from \"react\";\nimport AddFewCustomersForm from \"../AddFewCustomersForm/AddFewCustomersForm\";\nimport InvoiceFormat from \"../InvoiceFormat/InvoiceFormat\";\nimport CustomizedPrint from \"../../atoms/CustomizedPrint/CustomizedPrint\";\nimport { useReactToPrint } from \"react-to-print\";\n\nconst FullScreenModal = ({\n    api,\n    invoiceFormData,\n    custrefno,\n    openinvoiceevent\n}) => {\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n    return(\n        <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-fullscreen modal-dialog-scrollable\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Reciept </h5>\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div ref={componentRef} className=\"modal-body\">\n                    <InvoiceFormat\n                        api={api}\n                        invoiceFormData={invoiceFormData}\n                        custrefno={custrefno}\n                        openinvoiceevent={openinvoiceevent}\n                    />\n                    </div>\n                    <div className=\"modal-footer\">\n                        {/* <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button> */}\n                        <div>\n                            <CustomizedPrint\n                                onClick={handlePrint}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default FullScreenModal;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/FullScreenModalOne/FullScreenModalOne.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/FullScreenModalTwo/FullScreenModalTwo.js",[],[],{"ruleId":"1058","severity":1,"message":"1059","line":19,"column":10,"nodeType":"1060","messageId":"1061","endLine":19,"endColumn":19},{"ruleId":"1062","severity":1,"message":"1063","line":81,"column":48,"nodeType":"1064","messageId":"1065","endLine":81,"endColumn":50},{"ruleId":"1066","severity":1,"message":"1067","line":48,"column":13,"nodeType":"1068","endLine":52,"endColumn":14},{"ruleId":"1058","severity":1,"message":"1069","line":14,"column":12,"nodeType":"1060","messageId":"1061","endLine":14,"endColumn":28},{"ruleId":"1058","severity":1,"message":"1070","line":17,"column":12,"nodeType":"1060","messageId":"1061","endLine":17,"endColumn":28},{"ruleId":"1071","severity":1,"message":"1072","line":107,"column":7,"nodeType":"1073","endLine":107,"endColumn":29,"suggestions":"1074"},{"ruleId":"1071","severity":1,"message":"1075","line":110,"column":8,"nodeType":"1073","endLine":110,"endColumn":10,"suggestions":"1076"},{"ruleId":"1058","severity":1,"message":"1077","line":150,"column":11,"nodeType":"1060","messageId":"1061","endLine":150,"endColumn":26},{"ruleId":"1058","severity":1,"message":"1078","line":153,"column":9,"nodeType":"1060","messageId":"1061","endLine":153,"endColumn":27},{"ruleId":"1058","severity":1,"message":"1079","line":162,"column":9,"nodeType":"1060","messageId":"1061","endLine":162,"endColumn":25},{"ruleId":"1071","severity":1,"message":"1075","line":172,"column":8,"nodeType":"1073","endLine":172,"endColumn":20,"suggestions":"1080"},{"ruleId":"1062","severity":1,"message":"1081","line":299,"column":62,"nodeType":"1064","messageId":"1065","endLine":299,"endColumn":64},{"ruleId":"1058","severity":1,"message":"1082","line":16,"column":7,"nodeType":"1060","messageId":"1061","endLine":16,"endColumn":15},{"ruleId":"1058","severity":1,"message":"1082","line":21,"column":7,"nodeType":"1060","messageId":"1061","endLine":21,"endColumn":15},{"ruleId":"1058","severity":1,"message":"1083","line":62,"column":24,"nodeType":"1060","messageId":"1061","endLine":62,"endColumn":39},{"ruleId":"1058","severity":1,"message":"1084","line":63,"column":26,"nodeType":"1060","messageId":"1061","endLine":63,"endColumn":43},{"ruleId":"1058","severity":1,"message":"1085","line":64,"column":25,"nodeType":"1060","messageId":"1061","endLine":64,"endColumn":41},{"ruleId":"1058","severity":1,"message":"1086","line":65,"column":25,"nodeType":"1060","messageId":"1061","endLine":65,"endColumn":41},{"ruleId":"1058","severity":1,"message":"1087","line":66,"column":23,"nodeType":"1060","messageId":"1061","endLine":66,"endColumn":37},{"ruleId":"1088","severity":1,"message":"1089","line":10,"column":13,"nodeType":"1068","endLine":10,"endColumn":49},{"ruleId":"1058","severity":1,"message":"1090","line":3,"column":8,"nodeType":"1060","messageId":"1061","endLine":3,"endColumn":14},{"ruleId":"1091","severity":1,"message":"1092","line":22,"column":33,"nodeType":"1093","messageId":"1094","endLine":22,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1095","line":33,"column":8,"nodeType":"1073","endLine":33,"endColumn":25,"suggestions":"1096"},{"ruleId":"1058","severity":1,"message":"1097","line":3,"column":10,"nodeType":"1060","messageId":"1061","endLine":3,"endColumn":28},{"ruleId":"1058","severity":1,"message":"1098","line":7,"column":8,"nodeType":"1060","messageId":"1061","endLine":7,"endColumn":29},{"ruleId":"1058","severity":1,"message":"1099","line":19,"column":12,"nodeType":"1060","messageId":"1061","endLine":19,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1085","line":19,"column":27,"nodeType":"1060","messageId":"1061","endLine":19,"endColumn":43},{"ruleId":"1058","severity":1,"message":"1100","line":20,"column":12,"nodeType":"1060","messageId":"1061","endLine":20,"endColumn":22},{"ruleId":"1058","severity":1,"message":"1101","line":21,"column":12,"nodeType":"1060","messageId":"1061","endLine":21,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1102","line":32,"column":11,"nodeType":"1060","messageId":"1061","endLine":32,"endColumn":22},{"ruleId":"1091","severity":1,"message":"1103","line":34,"column":41,"nodeType":"1093","messageId":"1094","endLine":34,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1104","line":55,"column":8,"nodeType":"1073","endLine":55,"endColumn":10,"suggestions":"1105"},{"ruleId":"1071","severity":1,"message":"1072","line":80,"column":8,"nodeType":"1073","endLine":80,"endColumn":23,"suggestions":"1106"},{"ruleId":"1091","severity":1,"message":"1103","line":186,"column":41,"nodeType":"1093","messageId":"1094","endLine":186,"endColumn":43},{"ruleId":"1107","severity":1,"message":"1108","line":240,"column":74,"nodeType":"1109","messageId":"1110","endLine":240,"endColumn":90},{"ruleId":"1107","severity":1,"message":"1108","line":241,"column":74,"nodeType":"1109","messageId":"1110","endLine":241,"endColumn":90},{"ruleId":"1107","severity":1,"message":"1111","line":258,"column":86,"nodeType":"1109","messageId":"1110","endLine":258,"endColumn":114},{"ruleId":"1107","severity":1,"message":"1111","line":259,"column":86,"nodeType":"1109","messageId":"1110","endLine":259,"endColumn":114},{"ruleId":"1062","severity":1,"message":"1081","line":512,"column":37,"nodeType":"1064","messageId":"1065","endLine":512,"endColumn":39},{"ruleId":"1058","severity":1,"message":"1112","line":11,"column":12,"nodeType":"1060","messageId":"1061","endLine":11,"endColumn":16},{"ruleId":"1058","severity":1,"message":"1113","line":11,"column":18,"nodeType":"1060","messageId":"1061","endLine":11,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1114","line":2,"column":8,"nodeType":"1060","messageId":"1061","endLine":2,"endColumn":17},{"ruleId":"1058","severity":1,"message":"1115","line":4,"column":8,"nodeType":"1060","messageId":"1061","endLine":4,"endColumn":20},{"ruleId":"1058","severity":1,"message":"1116","line":38,"column":10,"nodeType":"1060","messageId":"1061","endLine":38,"endColumn":21},{"ruleId":"1058","severity":1,"message":"1117","line":42,"column":10,"nodeType":"1060","messageId":"1061","endLine":42,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":51,"column":6,"nodeType":"1073","endLine":51,"endColumn":8,"suggestions":"1118"},{"ruleId":"1058","severity":1,"message":"1119","line":61,"column":7,"nodeType":"1060","messageId":"1061","endLine":61,"endColumn":24},{"ruleId":"1071","severity":1,"message":"1072","line":80,"column":6,"nodeType":"1073","endLine":80,"endColumn":8,"suggestions":"1120"},{"ruleId":"1062","severity":1,"message":"1063","line":85,"column":33,"nodeType":"1064","messageId":"1065","endLine":85,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":95,"column":6,"nodeType":"1073","endLine":95,"endColumn":20,"suggestions":"1121"},{"ruleId":"1058","severity":1,"message":"1102","line":138,"column":9,"nodeType":"1060","messageId":"1061","endLine":138,"endColumn":20},{"ruleId":"1091","severity":1,"message":"1092","line":155,"column":27,"nodeType":"1093","messageId":"1094","endLine":155,"endColumn":29},{"ruleId":"1071","severity":1,"message":"1072","line":171,"column":6,"nodeType":"1073","endLine":171,"endColumn":16,"suggestions":"1122"},{"ruleId":"1091","severity":1,"message":"1092","line":175,"column":29,"nodeType":"1093","messageId":"1094","endLine":175,"endColumn":31},{"ruleId":"1091","severity":1,"message":"1092","line":188,"column":29,"nodeType":"1093","messageId":"1094","endLine":188,"endColumn":31},{"ruleId":"1062","severity":1,"message":"1081","line":191,"column":41,"nodeType":"1064","messageId":"1065","endLine":191,"endColumn":43},{"ruleId":"1062","severity":1,"message":"1081","line":208,"column":31,"nodeType":"1064","messageId":"1065","endLine":208,"endColumn":33},{"ruleId":"1058","severity":1,"message":"1114","line":2,"column":8,"nodeType":"1060","messageId":"1061","endLine":2,"endColumn":17},{"ruleId":"1058","severity":1,"message":"1115","line":3,"column":8,"nodeType":"1060","messageId":"1061","endLine":3,"endColumn":20},{"ruleId":"1058","severity":1,"message":"1123","line":4,"column":8,"nodeType":"1060","messageId":"1061","endLine":4,"endColumn":13},{"ruleId":"1058","severity":1,"message":"1124","line":5,"column":8,"nodeType":"1060","messageId":"1061","endLine":5,"endColumn":13},{"ruleId":"1058","severity":1,"message":"1125","line":4,"column":8,"nodeType":"1060","messageId":"1061","endLine":4,"endColumn":18},{"ruleId":"1058","severity":1,"message":"1126","line":15,"column":12,"nodeType":"1060","messageId":"1061","endLine":15,"endColumn":28},{"ruleId":"1071","severity":1,"message":"1127","line":24,"column":8,"nodeType":"1073","endLine":24,"endColumn":10,"suggestions":"1128"},{"ruleId":"1058","severity":1,"message":"1069","line":35,"column":12,"nodeType":"1060","messageId":"1061","endLine":35,"endColumn":28},{"ruleId":"1058","severity":1,"message":"1077","line":36,"column":11,"nodeType":"1060","messageId":"1061","endLine":36,"endColumn":26},{"ruleId":"1058","severity":1,"message":"1129","line":61,"column":12,"nodeType":"1060","messageId":"1061","endLine":61,"endColumn":25},{"ruleId":"1091","severity":1,"message":"1092","line":63,"column":35,"nodeType":"1093","messageId":"1094","endLine":63,"endColumn":37},{"ruleId":"1071","severity":1,"message":"1127","line":85,"column":8,"nodeType":"1073","endLine":85,"endColumn":20,"suggestions":"1130"},{"ruleId":"1062","severity":1,"message":"1081","line":129,"column":50,"nodeType":"1064","messageId":"1065","endLine":129,"endColumn":52},{"ruleId":"1071","severity":1,"message":"1131","line":27,"column":7,"nodeType":"1073","endLine":27,"endColumn":9,"suggestions":"1132"},{"ruleId":"1062","severity":1,"message":"1081","line":45,"column":44,"nodeType":"1064","messageId":"1065","endLine":45,"endColumn":46},{"ruleId":"1071","severity":1,"message":"1131","line":56,"column":8,"nodeType":"1073","endLine":56,"endColumn":20,"suggestions":"1133"},{"ruleId":"1058","severity":1,"message":"1134","line":14,"column":12,"nodeType":"1060","messageId":"1061","endLine":14,"endColumn":30},{"ruleId":"1058","severity":1,"message":"1135","line":15,"column":12,"nodeType":"1060","messageId":"1061","endLine":15,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1136","line":15,"column":27,"nodeType":"1060","messageId":"1061","endLine":15,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1072","line":22,"column":8,"nodeType":"1073","endLine":22,"endColumn":10,"suggestions":"1137"},{"ruleId":"1071","severity":1,"message":"1104","line":25,"column":8,"nodeType":"1073","endLine":25,"endColumn":10,"suggestions":"1138"},{"ruleId":"1139","severity":1,"message":"1140","line":42,"column":45,"nodeType":"1064","messageId":"1141","endLine":42,"endColumn":46},{"ruleId":"1139","severity":1,"message":"1140","line":45,"column":45,"nodeType":"1064","messageId":"1141","endLine":45,"endColumn":46},{"ruleId":"1139","severity":1,"message":"1140","line":45,"column":51,"nodeType":"1064","messageId":"1141","endLine":45,"endColumn":52},{"ruleId":"1139","severity":1,"message":"1140","line":48,"column":45,"nodeType":"1064","messageId":"1141","endLine":48,"endColumn":46},{"ruleId":"1139","severity":1,"message":"1140","line":48,"column":51,"nodeType":"1064","messageId":"1141","endLine":48,"endColumn":52},{"ruleId":"1139","severity":1,"message":"1140","line":51,"column":45,"nodeType":"1064","messageId":"1141","endLine":51,"endColumn":46},{"ruleId":"1139","severity":1,"message":"1140","line":51,"column":51,"nodeType":"1064","messageId":"1141","endLine":51,"endColumn":52},{"ruleId":"1142","severity":1,"message":"1143","line":67,"column":17,"nodeType":"1060","messageId":"1144","endLine":67,"endColumn":19},{"ruleId":"1142","severity":1,"message":"1145","line":68,"column":17,"nodeType":"1060","messageId":"1144","endLine":68,"endColumn":19},{"ruleId":"1091","severity":1,"message":"1103","line":110,"column":41,"nodeType":"1093","messageId":"1094","endLine":110,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1072","line":57,"column":6,"nodeType":"1073","endLine":57,"endColumn":8,"suggestions":"1146"},{"ruleId":"1062","severity":1,"message":"1081","line":67,"column":52,"nodeType":"1064","messageId":"1065","endLine":67,"endColumn":54},{"ruleId":"1091","severity":1,"message":"1092","line":71,"column":23,"nodeType":"1093","messageId":"1094","endLine":71,"endColumn":25},{"ruleId":"1062","severity":1,"message":"1081","line":111,"column":31,"nodeType":"1064","messageId":"1065","endLine":111,"endColumn":33},{"ruleId":"1062","severity":1,"message":"1081","line":120,"column":31,"nodeType":"1064","messageId":"1065","endLine":120,"endColumn":33},{"ruleId":"1071","severity":1,"message":"1072","line":138,"column":6,"nodeType":"1073","endLine":138,"endColumn":8,"suggestions":"1147"},{"ruleId":"1058","severity":1,"message":"1148","line":18,"column":12,"nodeType":"1060","messageId":"1061","endLine":18,"endColumn":26},{"ruleId":"1091","severity":1,"message":"1092","line":31,"column":33,"nodeType":"1093","messageId":"1094","endLine":31,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1095","line":42,"column":8,"nodeType":"1073","endLine":42,"endColumn":34,"suggestions":"1149"},{"ruleId":"1071","severity":1,"message":"1150","line":59,"column":8,"nodeType":"1073","endLine":59,"endColumn":10,"suggestions":"1151"},{"ruleId":"1071","severity":1,"message":"1152","line":17,"column":5,"nodeType":"1073","endLine":17,"endColumn":18,"suggestions":"1153"},{"ruleId":"1058","severity":1,"message":"1154","line":4,"column":8,"nodeType":"1060","messageId":"1061","endLine":4,"endColumn":23},{"ruleId":"1071","severity":1,"message":"1155","line":31,"column":7,"nodeType":"1073","endLine":31,"endColumn":22,"suggestions":"1156"},{"ruleId":"1071","severity":1,"message":"1157","line":65,"column":7,"nodeType":"1073","endLine":65,"endColumn":20,"suggestions":"1158"},{"ruleId":"1071","severity":1,"message":"1159","line":30,"column":8,"nodeType":"1073","endLine":30,"endColumn":39,"suggestions":"1160"},{"ruleId":"1071","severity":1,"message":"1161","line":35,"column":7,"nodeType":"1073","endLine":35,"endColumn":22,"suggestions":"1162"},{"ruleId":"1071","severity":1,"message":"1163","line":40,"column":7,"nodeType":"1073","endLine":40,"endColumn":23,"suggestions":"1164"},{"ruleId":"1071","severity":1,"message":"1165","line":129,"column":8,"nodeType":"1073","endLine":129,"endColumn":21,"suggestions":"1166"},{"ruleId":"1058","severity":1,"message":"1167","line":15,"column":12,"nodeType":"1060","messageId":"1061","endLine":15,"endColumn":19},{"ruleId":"1058","severity":1,"message":"1069","line":18,"column":12,"nodeType":"1060","messageId":"1061","endLine":18,"endColumn":28},{"ruleId":"1058","severity":1,"message":"1168","line":24,"column":12,"nodeType":"1060","messageId":"1061","endLine":24,"endColumn":24},{"ruleId":"1071","severity":1,"message":"1169","line":41,"column":7,"nodeType":"1073","endLine":41,"endColumn":22,"suggestions":"1170"},{"ruleId":"1058","severity":1,"message":"1077","line":42,"column":11,"nodeType":"1060","messageId":"1061","endLine":42,"endColumn":26},{"ruleId":"1058","severity":1,"message":"1171","line":70,"column":11,"nodeType":"1060","messageId":"1061","endLine":70,"endColumn":20},{"ruleId":"1058","severity":1,"message":"1069","line":17,"column":12,"nodeType":"1060","messageId":"1061","endLine":17,"endColumn":28},{"ruleId":"1071","severity":1,"message":"1172","line":29,"column":7,"nodeType":"1073","endLine":29,"endColumn":22,"suggestions":"1173"},{"ruleId":"1071","severity":1,"message":"1174","line":44,"column":7,"nodeType":"1073","endLine":44,"endColumn":20,"suggestions":"1175"},{"ruleId":"1058","severity":1,"message":"1077","line":58,"column":13,"nodeType":"1060","messageId":"1061","endLine":58,"endColumn":28},{"ruleId":"1058","severity":1,"message":"1176","line":3,"column":8,"nodeType":"1060","messageId":"1061","endLine":3,"endColumn":26},{"ruleId":"1058","severity":1,"message":"1177","line":6,"column":8,"nodeType":"1060","messageId":"1061","endLine":6,"endColumn":14},{"ruleId":"1178","severity":1,"message":"1179","line":44,"column":16,"nodeType":"1180","messageId":"1181","endLine":44,"endColumn":24,"fix":"1182"},{"ruleId":"1178","severity":1,"message":"1179","line":83,"column":16,"nodeType":"1180","messageId":"1181","endLine":83,"endColumn":24,"fix":"1183"},{"ruleId":"1139","severity":1,"message":"1140","line":89,"column":57,"nodeType":"1064","messageId":"1141","endLine":89,"endColumn":58},{"ruleId":"1178","severity":1,"message":"1179","line":117,"column":16,"nodeType":"1180","messageId":"1181","endLine":117,"endColumn":24,"fix":"1184"},{"ruleId":"1139","severity":1,"message":"1140","line":123,"column":34,"nodeType":"1064","messageId":"1141","endLine":123,"endColumn":35},{"ruleId":"1139","severity":1,"message":"1140","line":123,"column":39,"nodeType":"1064","messageId":"1141","endLine":123,"endColumn":40},{"ruleId":"1139","severity":1,"message":"1140","line":123,"column":43,"nodeType":"1064","messageId":"1141","endLine":123,"endColumn":44},{"ruleId":"1066","severity":1,"message":"1185","line":150,"column":13,"nodeType":"1068","endLine":150,"endColumn":56},{"ruleId":"1066","severity":1,"message":"1185","line":153,"column":13,"nodeType":"1068","endLine":153,"endColumn":57},{"ruleId":"1066","severity":1,"message":"1185","line":156,"column":13,"nodeType":"1068","endLine":156,"endColumn":56},{"ruleId":"1178","severity":1,"message":"1179","line":44,"column":16,"nodeType":"1180","messageId":"1181","endLine":44,"endColumn":24,"fix":"1186"},{"ruleId":"1178","severity":1,"message":"1179","line":84,"column":16,"nodeType":"1180","messageId":"1181","endLine":84,"endColumn":24,"fix":"1187"},{"ruleId":"1139","severity":1,"message":"1140","line":90,"column":57,"nodeType":"1064","messageId":"1141","endLine":90,"endColumn":58},{"ruleId":"1178","severity":1,"message":"1179","line":117,"column":16,"nodeType":"1180","messageId":"1181","endLine":117,"endColumn":24,"fix":"1188"},{"ruleId":"1139","severity":1,"message":"1140","line":123,"column":34,"nodeType":"1064","messageId":"1141","endLine":123,"endColumn":35},{"ruleId":"1139","severity":1,"message":"1140","line":123,"column":39,"nodeType":"1064","messageId":"1141","endLine":123,"endColumn":40},{"ruleId":"1139","severity":1,"message":"1140","line":123,"column":43,"nodeType":"1064","messageId":"1141","endLine":123,"endColumn":44},{"ruleId":"1066","severity":1,"message":"1185","line":152,"column":13,"nodeType":"1068","endLine":152,"endColumn":56},{"ruleId":"1066","severity":1,"message":"1185","line":155,"column":13,"nodeType":"1068","endLine":155,"endColumn":57},{"ruleId":"1066","severity":1,"message":"1185","line":158,"column":13,"nodeType":"1068","endLine":158,"endColumn":56},{"ruleId":"1058","severity":1,"message":"1112","line":9,"column":12,"nodeType":"1060","messageId":"1061","endLine":9,"endColumn":16},{"ruleId":"1071","severity":1,"message":"1189","line":13,"column":7,"nodeType":"1073","endLine":13,"endColumn":9,"suggestions":"1190"},{"ruleId":"1071","severity":1,"message":"1072","line":98,"column":8,"nodeType":"1073","endLine":98,"endColumn":34,"suggestions":"1191"},{"ruleId":"1058","severity":1,"message":"1135","line":15,"column":10,"nodeType":"1060","messageId":"1061","endLine":15,"endColumn":23},{"ruleId":"1071","severity":1,"message":"1104","line":23,"column":6,"nodeType":"1073","endLine":23,"endColumn":8,"suggestions":"1192"},{"ruleId":"1058","severity":1,"message":"1193","line":45,"column":10,"nodeType":"1060","messageId":"1061","endLine":45,"endColumn":29},{"ruleId":"1091","severity":1,"message":"1092","line":49,"column":27,"nodeType":"1093","messageId":"1094","endLine":49,"endColumn":29},{"ruleId":"1091","severity":1,"message":"1092","line":59,"column":33,"nodeType":"1093","messageId":"1094","endLine":59,"endColumn":35},{"ruleId":"1062","severity":1,"message":"1081","line":83,"column":19,"nodeType":"1064","messageId":"1065","endLine":83,"endColumn":21},{"ruleId":"1091","severity":1,"message":"1103","line":138,"column":37,"nodeType":"1093","messageId":"1094","endLine":138,"endColumn":39},{"ruleId":"1062","severity":1,"message":"1081","line":471,"column":33,"nodeType":"1064","messageId":"1065","endLine":471,"endColumn":35},{"ruleId":"1058","severity":1,"message":"1099","line":12,"column":10,"nodeType":"1060","messageId":"1061","endLine":12,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1085","line":12,"column":25,"nodeType":"1060","messageId":"1061","endLine":12,"endColumn":41},{"ruleId":"1058","severity":1,"message":"1194","line":13,"column":25,"nodeType":"1060","messageId":"1061","endLine":13,"endColumn":41},{"ruleId":"1071","severity":1,"message":"1195","line":16,"column":6,"nodeType":"1073","endLine":16,"endColumn":8,"suggestions":"1196"},{"ruleId":"1058","severity":1,"message":"1197","line":17,"column":10,"nodeType":"1060","messageId":"1061","endLine":17,"endColumn":22},{"ruleId":"1091","severity":1,"message":"1092","line":23,"column":22,"nodeType":"1093","messageId":"1094","endLine":23,"endColumn":24},{"ruleId":"1058","severity":1,"message":"1198","line":29,"column":10,"nodeType":"1060","messageId":"1061","endLine":29,"endColumn":30},{"ruleId":"1058","severity":1,"message":"1199","line":30,"column":10,"nodeType":"1060","messageId":"1061","endLine":30,"endColumn":31},{"ruleId":"1058","severity":1,"message":"1200","line":31,"column":9,"nodeType":"1060","messageId":"1061","endLine":31,"endColumn":27},{"ruleId":"1058","severity":1,"message":"1201","line":34,"column":9,"nodeType":"1060","messageId":"1061","endLine":34,"endColumn":28},{"ruleId":"1058","severity":1,"message":"1202","line":15,"column":23,"nodeType":"1060","messageId":"1061","endLine":15,"endColumn":37},{"ruleId":"1071","severity":1,"message":"1195","line":18,"column":6,"nodeType":"1073","endLine":18,"endColumn":8,"suggestions":"1203"},{"ruleId":"1107","severity":1,"message":"1204","line":198,"column":52,"nodeType":"1109","messageId":"1110","endLine":198,"endColumn":74},{"ruleId":"1058","severity":1,"message":"1205","line":10,"column":25,"nodeType":"1060","messageId":"1061","endLine":10,"endColumn":41},{"ruleId":"1071","severity":1,"message":"1195","line":13,"column":6,"nodeType":"1073","endLine":13,"endColumn":8,"suggestions":"1206"},{"ruleId":"1207","severity":1,"message":"1208","line":32,"column":42,"nodeType":"1209","messageId":"1210","endLine":32,"endColumn":73,"fix":"1211"},{"ruleId":"1058","severity":1,"message":"1212","line":9,"column":26,"nodeType":"1060","messageId":"1061","endLine":9,"endColumn":41},{"ruleId":"1071","severity":1,"message":"1195","line":12,"column":8,"nodeType":"1073","endLine":12,"endColumn":10,"suggestions":"1213"},{"ruleId":"1058","severity":1,"message":"1214","line":5,"column":8,"nodeType":"1060","messageId":"1061","endLine":5,"endColumn":32},{"ruleId":"1058","severity":1,"message":"1215","line":11,"column":21,"nodeType":"1060","messageId":"1061","endLine":11,"endColumn":33},{"ruleId":"1058","severity":1,"message":"1078","line":12,"column":7,"nodeType":"1060","messageId":"1061","endLine":12,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1216","line":21,"column":7,"nodeType":"1060","messageId":"1061","endLine":21,"endColumn":17},{"ruleId":"1058","severity":1,"message":"1079","line":22,"column":7,"nodeType":"1060","messageId":"1061","endLine":22,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1205","line":10,"column":25,"nodeType":"1060","messageId":"1061","endLine":10,"endColumn":41},{"ruleId":"1058","severity":1,"message":"1078","line":11,"column":7,"nodeType":"1060","messageId":"1061","endLine":11,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1079","line":20,"column":7,"nodeType":"1060","messageId":"1061","endLine":20,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1059","line":19,"column":10,"nodeType":"1060","messageId":"1061","endLine":19,"endColumn":19},{"ruleId":"1058","severity":1,"message":"1217","line":2,"column":8,"nodeType":"1060","messageId":"1061","endLine":2,"endColumn":27},{"ruleId":"1058","severity":1,"message":"1069","line":14,"column":12,"nodeType":"1060","messageId":"1061","endLine":14,"endColumn":28},{"ruleId":"1058","severity":1,"message":"1070","line":17,"column":12,"nodeType":"1060","messageId":"1061","endLine":17,"endColumn":28},{"ruleId":"1071","severity":1,"message":"1075","line":56,"column":8,"nodeType":"1073","endLine":56,"endColumn":10,"suggestions":"1218"},{"ruleId":"1058","severity":1,"message":"1077","line":156,"column":11,"nodeType":"1060","messageId":"1061","endLine":156,"endColumn":26},{"ruleId":"1058","severity":1,"message":"1078","line":159,"column":9,"nodeType":"1060","messageId":"1061","endLine":159,"endColumn":27},{"ruleId":"1058","severity":1,"message":"1079","line":168,"column":9,"nodeType":"1060","messageId":"1061","endLine":168,"endColumn":25},{"ruleId":"1071","severity":1,"message":"1075","line":178,"column":8,"nodeType":"1073","endLine":178,"endColumn":20,"suggestions":"1219"},{"ruleId":"1058","severity":1,"message":"1220","line":179,"column":11,"nodeType":"1060","messageId":"1061","endLine":179,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1221","line":203,"column":11,"nodeType":"1060","messageId":"1061","endLine":203,"endColumn":30},{"ruleId":"1062","severity":1,"message":"1081","line":290,"column":63,"nodeType":"1064","messageId":"1065","endLine":290,"endColumn":65},{"ruleId":"1062","severity":1,"message":"1081","line":291,"column":63,"nodeType":"1064","messageId":"1065","endLine":291,"endColumn":65},{"ruleId":"1062","severity":1,"message":"1081","line":328,"column":62,"nodeType":"1064","messageId":"1065","endLine":328,"endColumn":64},{"ruleId":"1062","severity":1,"message":"1081","line":328,"column":95,"nodeType":"1064","messageId":"1065","endLine":328,"endColumn":97},{"ruleId":"1058","severity":1,"message":"1217","line":2,"column":8,"nodeType":"1060","messageId":"1061","endLine":2,"endColumn":27},{"ruleId":"1058","severity":1,"message":"1222","line":7,"column":8,"nodeType":"1060","messageId":"1061","endLine":7,"endColumn":21},{"ruleId":"1058","severity":1,"message":"1223","line":18,"column":12,"nodeType":"1060","messageId":"1061","endLine":18,"endColumn":22},{"ruleId":"1058","severity":1,"message":"1224","line":19,"column":23,"nodeType":"1060","messageId":"1061","endLine":19,"endColumn":35},{"ruleId":"1058","severity":1,"message":"1221","line":26,"column":11,"nodeType":"1060","messageId":"1061","endLine":26,"endColumn":30},{"ruleId":"1071","severity":1,"message":"1072","line":34,"column":7,"nodeType":"1073","endLine":34,"endColumn":9,"suggestions":"1225"},{"ruleId":"1062","severity":1,"message":"1063","line":105,"column":48,"nodeType":"1064","messageId":"1065","endLine":105,"endColumn":50},{"ruleId":"1066","severity":1,"message":"1067","line":50,"column":13,"nodeType":"1068","endLine":54,"endColumn":14},{"ruleId":"1058","severity":1,"message":"1082","line":16,"column":7,"nodeType":"1060","messageId":"1061","endLine":16,"endColumn":15},{"ruleId":"1058","severity":1,"message":"1082","line":21,"column":7,"nodeType":"1060","messageId":"1061","endLine":21,"endColumn":15},{"ruleId":"1058","severity":1,"message":"1083","line":62,"column":24,"nodeType":"1060","messageId":"1061","endLine":62,"endColumn":39},{"ruleId":"1058","severity":1,"message":"1084","line":63,"column":26,"nodeType":"1060","messageId":"1061","endLine":63,"endColumn":43},{"ruleId":"1058","severity":1,"message":"1085","line":64,"column":25,"nodeType":"1060","messageId":"1061","endLine":64,"endColumn":41},{"ruleId":"1058","severity":1,"message":"1086","line":65,"column":25,"nodeType":"1060","messageId":"1061","endLine":65,"endColumn":41},{"ruleId":"1058","severity":1,"message":"1087","line":66,"column":23,"nodeType":"1060","messageId":"1061","endLine":66,"endColumn":37},{"ruleId":"1058","severity":1,"message":"1090","line":3,"column":8,"nodeType":"1060","messageId":"1061","endLine":3,"endColumn":14},{"ruleId":"1058","severity":1,"message":"1217","line":2,"column":8,"nodeType":"1060","messageId":"1061","endLine":2,"endColumn":27},{"ruleId":"1071","severity":1,"message":"1131","line":29,"column":7,"nodeType":"1073","endLine":29,"endColumn":9,"suggestions":"1226"},{"ruleId":"1062","severity":1,"message":"1081","line":47,"column":44,"nodeType":"1064","messageId":"1065","endLine":47,"endColumn":46},{"ruleId":"1071","severity":1,"message":"1131","line":58,"column":8,"nodeType":"1073","endLine":58,"endColumn":20,"suggestions":"1227"},{"ruleId":"1058","severity":1,"message":"1228","line":69,"column":11,"nodeType":"1060","messageId":"1061","endLine":69,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1217","line":2,"column":8,"nodeType":"1060","messageId":"1061","endLine":2,"endColumn":27},{"ruleId":"1058","severity":1,"message":"1229","line":6,"column":8,"nodeType":"1060","messageId":"1061","endLine":6,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1090","line":8,"column":8,"nodeType":"1060","messageId":"1061","endLine":8,"endColumn":14},{"ruleId":"1058","severity":1,"message":"1126","line":17,"column":12,"nodeType":"1060","messageId":"1061","endLine":17,"endColumn":28},{"ruleId":"1071","severity":1,"message":"1127","line":27,"column":8,"nodeType":"1073","endLine":27,"endColumn":10,"suggestions":"1230"},{"ruleId":"1058","severity":1,"message":"1069","line":38,"column":12,"nodeType":"1060","messageId":"1061","endLine":38,"endColumn":28},{"ruleId":"1058","severity":1,"message":"1077","line":39,"column":11,"nodeType":"1060","messageId":"1061","endLine":39,"endColumn":26},{"ruleId":"1058","severity":1,"message":"1129","line":64,"column":12,"nodeType":"1060","messageId":"1061","endLine":64,"endColumn":25},{"ruleId":"1091","severity":1,"message":"1092","line":66,"column":35,"nodeType":"1093","messageId":"1094","endLine":66,"endColumn":37},{"ruleId":"1058","severity":1,"message":"1228","line":84,"column":11,"nodeType":"1060","messageId":"1061","endLine":84,"endColumn":25},{"ruleId":"1071","severity":1,"message":"1127","line":95,"column":8,"nodeType":"1073","endLine":95,"endColumn":20,"suggestions":"1231"},{"ruleId":"1062","severity":1,"message":"1081","line":149,"column":61,"nodeType":"1064","messageId":"1065","endLine":149,"endColumn":63},{"ruleId":"1062","severity":1,"message":"1081","line":150,"column":61,"nodeType":"1064","messageId":"1065","endLine":150,"endColumn":63},{"ruleId":"1062","severity":1,"message":"1081","line":152,"column":50,"nodeType":"1064","messageId":"1065","endLine":152,"endColumn":52},{"ruleId":"1058","severity":1,"message":"1217","line":2,"column":8,"nodeType":"1060","messageId":"1061","endLine":2,"endColumn":27},{"ruleId":"1058","severity":1,"message":"1154","line":4,"column":8,"nodeType":"1060","messageId":"1061","endLine":4,"endColumn":23},{"ruleId":"1071","severity":1,"message":"1155","line":32,"column":7,"nodeType":"1073","endLine":32,"endColumn":22,"suggestions":"1232"},{"ruleId":"1071","severity":1,"message":"1157","line":66,"column":7,"nodeType":"1073","endLine":66,"endColumn":20,"suggestions":"1233"},{"ruleId":"1058","severity":1,"message":"1234","line":77,"column":9,"nodeType":"1060","messageId":"1061","endLine":77,"endColumn":21},{"ruleId":"1058","severity":1,"message":"1228","line":90,"column":9,"nodeType":"1060","messageId":"1061","endLine":90,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1176","line":3,"column":8,"nodeType":"1060","messageId":"1061","endLine":3,"endColumn":26},{"ruleId":"1058","severity":1,"message":"1177","line":6,"column":8,"nodeType":"1060","messageId":"1061","endLine":6,"endColumn":14},{"ruleId":"1178","severity":1,"message":"1179","line":44,"column":16,"nodeType":"1180","messageId":"1181","endLine":44,"endColumn":24,"fix":"1235"},{"ruleId":"1178","severity":1,"message":"1179","line":83,"column":16,"nodeType":"1180","messageId":"1181","endLine":83,"endColumn":24,"fix":"1236"},{"ruleId":"1139","severity":1,"message":"1140","line":89,"column":57,"nodeType":"1064","messageId":"1141","endLine":89,"endColumn":58},{"ruleId":"1178","severity":1,"message":"1179","line":117,"column":16,"nodeType":"1180","messageId":"1181","endLine":117,"endColumn":24,"fix":"1237"},{"ruleId":"1139","severity":1,"message":"1140","line":123,"column":34,"nodeType":"1064","messageId":"1141","endLine":123,"endColumn":35},{"ruleId":"1139","severity":1,"message":"1140","line":123,"column":39,"nodeType":"1064","messageId":"1141","endLine":123,"endColumn":40},{"ruleId":"1139","severity":1,"message":"1140","line":123,"column":43,"nodeType":"1064","messageId":"1141","endLine":123,"endColumn":44},{"ruleId":"1066","severity":1,"message":"1185","line":150,"column":13,"nodeType":"1068","endLine":150,"endColumn":56},{"ruleId":"1066","severity":1,"message":"1185","line":153,"column":13,"nodeType":"1068","endLine":153,"endColumn":57},{"ruleId":"1066","severity":1,"message":"1185","line":156,"column":13,"nodeType":"1068","endLine":156,"endColumn":56},{"ruleId":"1058","severity":1,"message":"1217","line":2,"column":8,"nodeType":"1060","messageId":"1061","endLine":2,"endColumn":27},{"ruleId":"1071","severity":1,"message":"1159","line":31,"column":8,"nodeType":"1073","endLine":31,"endColumn":39,"suggestions":"1238"},{"ruleId":"1071","severity":1,"message":"1161","line":36,"column":7,"nodeType":"1073","endLine":36,"endColumn":22,"suggestions":"1239"},{"ruleId":"1071","severity":1,"message":"1163","line":41,"column":7,"nodeType":"1073","endLine":41,"endColumn":23,"suggestions":"1240"},{"ruleId":"1058","severity":1,"message":"1234","line":109,"column":11,"nodeType":"1060","messageId":"1061","endLine":109,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1228","line":123,"column":11,"nodeType":"1060","messageId":"1061","endLine":123,"endColumn":25},{"ruleId":"1071","severity":1,"message":"1165","line":137,"column":8,"nodeType":"1073","endLine":137,"endColumn":21,"suggestions":"1241"},{"ruleId":"1062","severity":1,"message":"1081","line":206,"column":61,"nodeType":"1064","messageId":"1065","endLine":206,"endColumn":63},{"ruleId":"1062","severity":1,"message":"1081","line":207,"column":61,"nodeType":"1064","messageId":"1065","endLine":207,"endColumn":63},{"ruleId":"1058","severity":1,"message":"1217","line":4,"column":8,"nodeType":"1060","messageId":"1061","endLine":4,"endColumn":27},{"ruleId":"1058","severity":1,"message":"1167","line":16,"column":12,"nodeType":"1060","messageId":"1061","endLine":16,"endColumn":19},{"ruleId":"1058","severity":1,"message":"1069","line":19,"column":12,"nodeType":"1060","messageId":"1061","endLine":19,"endColumn":28},{"ruleId":"1058","severity":1,"message":"1168","line":26,"column":12,"nodeType":"1060","messageId":"1061","endLine":26,"endColumn":24},{"ruleId":"1071","severity":1,"message":"1169","line":43,"column":8,"nodeType":"1073","endLine":43,"endColumn":23,"suggestions":"1242"},{"ruleId":"1058","severity":1,"message":"1077","line":44,"column":11,"nodeType":"1060","messageId":"1061","endLine":44,"endColumn":26},{"ruleId":"1058","severity":1,"message":"1171","line":72,"column":11,"nodeType":"1060","messageId":"1061","endLine":72,"endColumn":20},{"ruleId":"1058","severity":1,"message":"1234","line":97,"column":11,"nodeType":"1060","messageId":"1061","endLine":97,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1228","line":111,"column":11,"nodeType":"1060","messageId":"1061","endLine":111,"endColumn":25},{"ruleId":"1178","severity":1,"message":"1179","line":44,"column":16,"nodeType":"1180","messageId":"1181","endLine":44,"endColumn":24,"fix":"1243"},{"ruleId":"1178","severity":1,"message":"1179","line":84,"column":16,"nodeType":"1180","messageId":"1181","endLine":84,"endColumn":24,"fix":"1244"},{"ruleId":"1139","severity":1,"message":"1140","line":90,"column":57,"nodeType":"1064","messageId":"1141","endLine":90,"endColumn":58},{"ruleId":"1178","severity":1,"message":"1179","line":117,"column":16,"nodeType":"1180","messageId":"1181","endLine":117,"endColumn":24,"fix":"1245"},{"ruleId":"1139","severity":1,"message":"1140","line":123,"column":34,"nodeType":"1064","messageId":"1141","endLine":123,"endColumn":35},{"ruleId":"1139","severity":1,"message":"1140","line":123,"column":39,"nodeType":"1064","messageId":"1141","endLine":123,"endColumn":40},{"ruleId":"1139","severity":1,"message":"1140","line":123,"column":43,"nodeType":"1064","messageId":"1141","endLine":123,"endColumn":44},{"ruleId":"1066","severity":1,"message":"1185","line":152,"column":13,"nodeType":"1068","endLine":152,"endColumn":56},{"ruleId":"1066","severity":1,"message":"1185","line":155,"column":13,"nodeType":"1068","endLine":155,"endColumn":57},{"ruleId":"1066","severity":1,"message":"1185","line":158,"column":13,"nodeType":"1068","endLine":158,"endColumn":56},{"ruleId":"1058","severity":1,"message":"1217","line":2,"column":8,"nodeType":"1060","messageId":"1061","endLine":2,"endColumn":27},{"ruleId":"1058","severity":1,"message":"1069","line":18,"column":12,"nodeType":"1060","messageId":"1061","endLine":18,"endColumn":28},{"ruleId":"1071","severity":1,"message":"1172","line":31,"column":8,"nodeType":"1073","endLine":31,"endColumn":23,"suggestions":"1246"},{"ruleId":"1071","severity":1,"message":"1174","line":46,"column":8,"nodeType":"1073","endLine":46,"endColumn":21,"suggestions":"1247"},{"ruleId":"1058","severity":1,"message":"1234","line":57,"column":11,"nodeType":"1060","messageId":"1061","endLine":57,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1077","line":60,"column":11,"nodeType":"1060","messageId":"1061","endLine":60,"endColumn":26},{"ruleId":"1058","severity":1,"message":"1228","line":74,"column":11,"nodeType":"1060","messageId":"1061","endLine":74,"endColumn":25},{"ruleId":"1088","severity":1,"message":"1089","line":10,"column":13,"nodeType":"1068","endLine":10,"endColumn":49},{"ruleId":"1058","severity":1,"message":"1135","line":16,"column":10,"nodeType":"1060","messageId":"1061","endLine":16,"endColumn":23},{"ruleId":"1071","severity":1,"message":"1104","line":25,"column":6,"nodeType":"1073","endLine":25,"endColumn":8,"suggestions":"1248"},{"ruleId":"1058","severity":1,"message":"1193","line":47,"column":10,"nodeType":"1060","messageId":"1061","endLine":47,"endColumn":29},{"ruleId":"1091","severity":1,"message":"1092","line":51,"column":27,"nodeType":"1093","messageId":"1094","endLine":51,"endColumn":29},{"ruleId":"1091","severity":1,"message":"1092","line":61,"column":33,"nodeType":"1093","messageId":"1094","endLine":61,"endColumn":35},{"ruleId":"1062","severity":1,"message":"1081","line":90,"column":19,"nodeType":"1064","messageId":"1065","endLine":90,"endColumn":21},{"ruleId":"1091","severity":1,"message":"1103","line":155,"column":37,"nodeType":"1093","messageId":"1094","endLine":155,"endColumn":39},{"ruleId":"1062","severity":1,"message":"1081","line":516,"column":33,"nodeType":"1064","messageId":"1065","endLine":516,"endColumn":35},{"ruleId":"1091","severity":1,"message":"1092","line":17,"column":33,"nodeType":"1093","messageId":"1094","endLine":17,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1095","line":28,"column":8,"nodeType":"1073","endLine":28,"endColumn":25,"suggestions":"1249"},{"ruleId":"1058","severity":1,"message":"1250","line":4,"column":10,"nodeType":"1060","messageId":"1061","endLine":4,"endColumn":33},{"ruleId":"1058","severity":1,"message":"1116","line":39,"column":10,"nodeType":"1060","messageId":"1061","endLine":39,"endColumn":21},{"ruleId":"1058","severity":1,"message":"1117","line":43,"column":10,"nodeType":"1060","messageId":"1061","endLine":43,"endColumn":19},{"ruleId":"1058","severity":1,"message":"1251","line":44,"column":10,"nodeType":"1060","messageId":"1061","endLine":44,"endColumn":28},{"ruleId":"1058","severity":1,"message":"1252","line":45,"column":10,"nodeType":"1060","messageId":"1061","endLine":45,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1253","line":46,"column":10,"nodeType":"1060","messageId":"1061","endLine":46,"endColumn":29},{"ruleId":"1071","severity":1,"message":"1072","line":52,"column":6,"nodeType":"1073","endLine":52,"endColumn":8,"suggestions":"1254"},{"ruleId":"1058","severity":1,"message":"1078","line":53,"column":7,"nodeType":"1060","messageId":"1061","endLine":53,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1119","line":62,"column":7,"nodeType":"1060","messageId":"1061","endLine":62,"endColumn":24},{"ruleId":"1058","severity":1,"message":"1079","line":71,"column":7,"nodeType":"1060","messageId":"1061","endLine":71,"endColumn":23},{"ruleId":"1071","severity":1,"message":"1072","line":81,"column":6,"nodeType":"1073","endLine":81,"endColumn":8,"suggestions":"1255"},{"ruleId":"1062","severity":1,"message":"1063","line":86,"column":33,"nodeType":"1064","messageId":"1065","endLine":86,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":96,"column":6,"nodeType":"1073","endLine":96,"endColumn":20,"suggestions":"1256"},{"ruleId":"1058","severity":1,"message":"1257","line":99,"column":9,"nodeType":"1060","messageId":"1061","endLine":99,"endColumn":29},{"ruleId":"1058","severity":1,"message":"1258","line":100,"column":9,"nodeType":"1060","messageId":"1061","endLine":100,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1259","line":101,"column":9,"nodeType":"1060","messageId":"1061","endLine":101,"endColumn":21},{"ruleId":"1058","severity":1,"message":"1260","line":102,"column":9,"nodeType":"1060","messageId":"1061","endLine":102,"endColumn":21},{"ruleId":"1207","severity":1,"message":"1261","line":109,"column":24,"nodeType":"1209","messageId":"1210","endLine":109,"endColumn":63,"fix":"1262"},{"ruleId":"1058","severity":1,"message":"1102","line":156,"column":9,"nodeType":"1060","messageId":"1061","endLine":156,"endColumn":20},{"ruleId":"1091","severity":1,"message":"1092","line":173,"column":27,"nodeType":"1093","messageId":"1094","endLine":173,"endColumn":29},{"ruleId":"1071","severity":1,"message":"1072","line":189,"column":6,"nodeType":"1073","endLine":189,"endColumn":16,"suggestions":"1263"},{"ruleId":"1091","severity":1,"message":"1092","line":193,"column":29,"nodeType":"1093","messageId":"1094","endLine":193,"endColumn":31},{"ruleId":"1091","severity":1,"message":"1092","line":206,"column":29,"nodeType":"1093","messageId":"1094","endLine":206,"endColumn":31},{"ruleId":"1062","severity":1,"message":"1081","line":209,"column":41,"nodeType":"1064","messageId":"1065","endLine":209,"endColumn":43},{"ruleId":"1062","severity":1,"message":"1081","line":226,"column":31,"nodeType":"1064","messageId":"1065","endLine":226,"endColumn":33},{"ruleId":"1071","severity":1,"message":"1072","line":57,"column":6,"nodeType":"1073","endLine":57,"endColumn":8,"suggestions":"1264"},{"ruleId":"1062","severity":1,"message":"1081","line":67,"column":52,"nodeType":"1064","messageId":"1065","endLine":67,"endColumn":54},{"ruleId":"1091","severity":1,"message":"1092","line":71,"column":23,"nodeType":"1093","messageId":"1094","endLine":71,"endColumn":25},{"ruleId":"1062","severity":1,"message":"1081","line":111,"column":31,"nodeType":"1064","messageId":"1065","endLine":111,"endColumn":33},{"ruleId":"1062","severity":1,"message":"1081","line":120,"column":31,"nodeType":"1064","messageId":"1065","endLine":120,"endColumn":33},{"ruleId":"1071","severity":1,"message":"1072","line":138,"column":6,"nodeType":"1073","endLine":138,"endColumn":8,"suggestions":"1265"},{"ruleId":"1058","severity":1,"message":"1134","line":14,"column":12,"nodeType":"1060","messageId":"1061","endLine":14,"endColumn":30},{"ruleId":"1058","severity":1,"message":"1135","line":15,"column":12,"nodeType":"1060","messageId":"1061","endLine":15,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1136","line":15,"column":27,"nodeType":"1060","messageId":"1061","endLine":15,"endColumn":43},{"ruleId":"1058","severity":1,"message":"1266","line":17,"column":12,"nodeType":"1060","messageId":"1061","endLine":17,"endColumn":33},{"ruleId":"1071","severity":1,"message":"1072","line":23,"column":8,"nodeType":"1073","endLine":23,"endColumn":10,"suggestions":"1267"},{"ruleId":"1071","severity":1,"message":"1104","line":26,"column":8,"nodeType":"1073","endLine":26,"endColumn":10,"suggestions":"1268"},{"ruleId":"1139","severity":1,"message":"1140","line":43,"column":45,"nodeType":"1064","messageId":"1141","endLine":43,"endColumn":46},{"ruleId":"1139","severity":1,"message":"1140","line":46,"column":45,"nodeType":"1064","messageId":"1141","endLine":46,"endColumn":46},{"ruleId":"1139","severity":1,"message":"1140","line":46,"column":51,"nodeType":"1064","messageId":"1141","endLine":46,"endColumn":52},{"ruleId":"1139","severity":1,"message":"1140","line":49,"column":45,"nodeType":"1064","messageId":"1141","endLine":49,"endColumn":46},{"ruleId":"1139","severity":1,"message":"1140","line":49,"column":51,"nodeType":"1064","messageId":"1141","endLine":49,"endColumn":52},{"ruleId":"1139","severity":1,"message":"1140","line":52,"column":45,"nodeType":"1064","messageId":"1141","endLine":52,"endColumn":46},{"ruleId":"1139","severity":1,"message":"1140","line":52,"column":51,"nodeType":"1064","messageId":"1141","endLine":52,"endColumn":52},{"ruleId":"1142","severity":1,"message":"1143","line":68,"column":17,"nodeType":"1060","messageId":"1144","endLine":68,"endColumn":19},{"ruleId":"1142","severity":1,"message":"1145","line":69,"column":17,"nodeType":"1060","messageId":"1144","endLine":69,"endColumn":19},{"ruleId":"1091","severity":1,"message":"1103","line":126,"column":41,"nodeType":"1093","messageId":"1094","endLine":126,"endColumn":43},{"ruleId":"1058","severity":1,"message":"1205","line":10,"column":25,"nodeType":"1060","messageId":"1061","endLine":10,"endColumn":41},{"ruleId":"1071","severity":1,"message":"1195","line":13,"column":6,"nodeType":"1073","endLine":13,"endColumn":8,"suggestions":"1269"},{"ruleId":"1207","severity":1,"message":"1208","line":32,"column":42,"nodeType":"1209","messageId":"1210","endLine":32,"endColumn":73,"fix":"1270"},{"ruleId":"1058","severity":1,"message":"1099","line":12,"column":10,"nodeType":"1060","messageId":"1061","endLine":12,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1085","line":12,"column":25,"nodeType":"1060","messageId":"1061","endLine":12,"endColumn":41},{"ruleId":"1058","severity":1,"message":"1194","line":13,"column":25,"nodeType":"1060","messageId":"1061","endLine":13,"endColumn":41},{"ruleId":"1071","severity":1,"message":"1195","line":16,"column":6,"nodeType":"1073","endLine":16,"endColumn":8,"suggestions":"1271"},{"ruleId":"1058","severity":1,"message":"1197","line":17,"column":10,"nodeType":"1060","messageId":"1061","endLine":17,"endColumn":22},{"ruleId":"1091","severity":1,"message":"1092","line":23,"column":22,"nodeType":"1093","messageId":"1094","endLine":23,"endColumn":24},{"ruleId":"1058","severity":1,"message":"1198","line":29,"column":10,"nodeType":"1060","messageId":"1061","endLine":29,"endColumn":30},{"ruleId":"1058","severity":1,"message":"1199","line":30,"column":10,"nodeType":"1060","messageId":"1061","endLine":30,"endColumn":31},{"ruleId":"1058","severity":1,"message":"1200","line":31,"column":9,"nodeType":"1060","messageId":"1061","endLine":31,"endColumn":27},{"ruleId":"1058","severity":1,"message":"1201","line":34,"column":9,"nodeType":"1060","messageId":"1061","endLine":34,"endColumn":28},{"ruleId":"1058","severity":1,"message":"1205","line":10,"column":25,"nodeType":"1060","messageId":"1061","endLine":10,"endColumn":41},{"ruleId":"1058","severity":1,"message":"1078","line":11,"column":7,"nodeType":"1060","messageId":"1061","endLine":11,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1079","line":20,"column":7,"nodeType":"1060","messageId":"1061","endLine":20,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1272","line":2,"column":10,"nodeType":"1060","messageId":"1061","endLine":2,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1154","line":3,"column":8,"nodeType":"1060","messageId":"1061","endLine":3,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1176","line":4,"column":8,"nodeType":"1060","messageId":"1061","endLine":4,"endColumn":26},{"ruleId":"1058","severity":1,"message":"1273","line":5,"column":10,"nodeType":"1060","messageId":"1061","endLine":5,"endColumn":17},{"ruleId":"1058","severity":1,"message":"1148","line":18,"column":12,"nodeType":"1060","messageId":"1061","endLine":18,"endColumn":26},{"ruleId":"1091","severity":1,"message":"1092","line":31,"column":33,"nodeType":"1093","messageId":"1094","endLine":31,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1095","line":42,"column":8,"nodeType":"1073","endLine":42,"endColumn":34,"suggestions":"1274"},{"ruleId":"1071","severity":1,"message":"1150","line":59,"column":8,"nodeType":"1073","endLine":59,"endColumn":10,"suggestions":"1275"},{"ruleId":"1058","severity":1,"message":"1276","line":84,"column":11,"nodeType":"1060","messageId":"1061","endLine":84,"endColumn":20},{"ruleId":"1058","severity":1,"message":"1202","line":17,"column":23,"nodeType":"1060","messageId":"1061","endLine":17,"endColumn":37},{"ruleId":"1071","severity":1,"message":"1195","line":20,"column":6,"nodeType":"1073","endLine":20,"endColumn":8,"suggestions":"1277"},{"ruleId":"1107","severity":1,"message":"1204","line":209,"column":52,"nodeType":"1109","messageId":"1110","endLine":209,"endColumn":74},{"ruleId":"1058","severity":1,"message":"1212","line":9,"column":26,"nodeType":"1060","messageId":"1061","endLine":9,"endColumn":41},{"ruleId":"1071","severity":1,"message":"1195","line":12,"column":8,"nodeType":"1073","endLine":12,"endColumn":10,"suggestions":"1278"},{"ruleId":"1058","severity":1,"message":"1279","line":1,"column":17,"nodeType":"1060","messageId":"1061","endLine":1,"endColumn":26},{"ruleId":"1058","severity":1,"message":"1280","line":4,"column":8,"nodeType":"1060","messageId":"1061","endLine":4,"endColumn":26},{"ruleId":"1058","severity":1,"message":"1090","line":6,"column":8,"nodeType":"1060","messageId":"1061","endLine":6,"endColumn":14},{"ruleId":"1058","severity":1,"message":"1281","line":100,"column":11,"nodeType":"1060","messageId":"1061","endLine":100,"endColumn":37},{"ruleId":"1062","severity":1,"message":"1081","line":148,"column":66,"nodeType":"1064","messageId":"1065","endLine":148,"endColumn":68},{"ruleId":"1058","severity":1,"message":"1097","line":3,"column":10,"nodeType":"1060","messageId":"1061","endLine":3,"endColumn":28},{"ruleId":"1058","severity":1,"message":"1098","line":7,"column":8,"nodeType":"1060","messageId":"1061","endLine":7,"endColumn":29},{"ruleId":"1058","severity":1,"message":"1099","line":20,"column":12,"nodeType":"1060","messageId":"1061","endLine":20,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1085","line":20,"column":27,"nodeType":"1060","messageId":"1061","endLine":20,"endColumn":43},{"ruleId":"1058","severity":1,"message":"1100","line":21,"column":12,"nodeType":"1060","messageId":"1061","endLine":21,"endColumn":22},{"ruleId":"1058","severity":1,"message":"1101","line":22,"column":12,"nodeType":"1060","messageId":"1061","endLine":22,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1102","line":39,"column":11,"nodeType":"1060","messageId":"1061","endLine":39,"endColumn":22},{"ruleId":"1091","severity":1,"message":"1103","line":41,"column":41,"nodeType":"1093","messageId":"1094","endLine":41,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1104","line":62,"column":8,"nodeType":"1073","endLine":62,"endColumn":10,"suggestions":"1282"},{"ruleId":"1071","severity":1,"message":"1072","line":87,"column":8,"nodeType":"1073","endLine":87,"endColumn":23,"suggestions":"1283"},{"ruleId":"1091","severity":1,"message":"1103","line":193,"column":41,"nodeType":"1093","messageId":"1094","endLine":193,"endColumn":43},{"ruleId":"1107","severity":1,"message":"1108","line":248,"column":74,"nodeType":"1109","messageId":"1110","endLine":248,"endColumn":90},{"ruleId":"1107","severity":1,"message":"1108","line":249,"column":74,"nodeType":"1109","messageId":"1110","endLine":249,"endColumn":90},{"ruleId":"1107","severity":1,"message":"1111","line":267,"column":86,"nodeType":"1109","messageId":"1110","endLine":267,"endColumn":114},{"ruleId":"1107","severity":1,"message":"1111","line":268,"column":86,"nodeType":"1109","messageId":"1110","endLine":268,"endColumn":114},{"ruleId":"1062","severity":1,"message":"1081","line":561,"column":37,"nodeType":"1064","messageId":"1065","endLine":561,"endColumn":39},{"ruleId":"1062","severity":1,"message":"1081","line":563,"column":42,"nodeType":"1064","messageId":"1065","endLine":563,"endColumn":44},{"ruleId":"1058","severity":1,"message":"1214","line":5,"column":8,"nodeType":"1060","messageId":"1061","endLine":5,"endColumn":32},{"ruleId":"1058","severity":1,"message":"1215","line":11,"column":21,"nodeType":"1060","messageId":"1061","endLine":11,"endColumn":33},{"ruleId":"1058","severity":1,"message":"1078","line":12,"column":7,"nodeType":"1060","messageId":"1061","endLine":12,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1216","line":21,"column":7,"nodeType":"1060","messageId":"1061","endLine":21,"endColumn":17},{"ruleId":"1058","severity":1,"message":"1079","line":22,"column":7,"nodeType":"1060","messageId":"1061","endLine":22,"endColumn":23},{"ruleId":"1058","severity":1,"message":"1112","line":9,"column":12,"nodeType":"1060","messageId":"1061","endLine":9,"endColumn":16},{"ruleId":"1071","severity":1,"message":"1189","line":13,"column":7,"nodeType":"1073","endLine":13,"endColumn":9,"suggestions":"1284"},{"ruleId":"1071","severity":1,"message":"1152","line":17,"column":5,"nodeType":"1073","endLine":17,"endColumn":18,"suggestions":"1285"},{"ruleId":"1058","severity":1,"message":"1112","line":11,"column":12,"nodeType":"1060","messageId":"1061","endLine":11,"endColumn":16},{"ruleId":"1058","severity":1,"message":"1113","line":11,"column":18,"nodeType":"1060","messageId":"1061","endLine":11,"endColumn":25},{"ruleId":"1058","severity":1,"message":"1125","line":4,"column":8,"nodeType":"1060","messageId":"1061","endLine":4,"endColumn":18},{"ruleId":"1058","severity":1,"message":"1114","line":2,"column":8,"nodeType":"1060","messageId":"1061","endLine":2,"endColumn":17},{"ruleId":"1058","severity":1,"message":"1115","line":3,"column":8,"nodeType":"1060","messageId":"1061","endLine":3,"endColumn":20},{"ruleId":"1058","severity":1,"message":"1123","line":4,"column":8,"nodeType":"1060","messageId":"1061","endLine":4,"endColumn":13},{"ruleId":"1058","severity":1,"message":"1124","line":5,"column":8,"nodeType":"1060","messageId":"1061","endLine":5,"endColumn":13},{"ruleId":"1058","severity":1,"message":"1114","line":2,"column":8,"nodeType":"1060","messageId":"1061","endLine":2,"endColumn":17},{"ruleId":"1058","severity":1,"message":"1115","line":4,"column":8,"nodeType":"1060","messageId":"1061","endLine":4,"endColumn":20},{"ruleId":"1058","severity":1,"message":"1286","line":2,"column":8,"nodeType":"1060","messageId":"1061","endLine":2,"endColumn":27},"no-unused-vars","'logoutbtn' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'changedmodalview' is assigned a value but never used.","'rowdataonbooking' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.","ArrayExpression",["1287"],"React Hook useEffect has a missing dependency: 'displaycustomerfollowupevent'. Either include it or remove the dependency array.",["1288"],"'modalviewchange' is assigned a value but never used.","'finalCustomerRefNo' is assigned a value but never used.","'finalcurrentdate' is assigned a value but never used.",["1289"],"Expected '===' and instead saw '=='.","'navigate' is assigned a value but never used.","'setstatusselect' is assigned a value but never used.","'setDeliverystatus' is assigned a value but never used.","'setpaymentstatus' is assigned a value but never used.","'setProductstatus' is assigned a value but never used.","'setGstinstatus' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'toWords'. Either include it or remove the dependency array.",["1290"],"'purchasesuccessmsg' is defined but never used.","'CustomizedComboboxAll' is defined but never used.","'paymentstatus' is assigned a value but never used.","'bookeddate' is assigned a value but never used.","'productdata' is assigned a value but never used.","'selectevent' is assigned a value but never used.","Array.prototype.find() expects a return value from arrow function.","React Hook useEffect has a missing dependency: 'fetchalldatafromcust'. Either include it or remove the dependency array.",["1291"],["1292"],"no-self-assign","'data.booked_date' is assigned to itself.","MemberExpression","selfAssignment","'data.requested_delivery_date' is assigned to itself.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'TextField' is defined but never used.","'Autocomplete' is defined but never used.","'productname' is assigned a value but never used.","'statecode' is assigned a value but never used.",["1293"],"'finalpreInvoiceNo' is assigned a value but never used.",["1294"],["1295"],["1296"],"'parse' is defined but never used.","'match' is defined but never used.","'InputLabel' is defined but never used.","'currentinvoiceno' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'displayBookedCustomeerDataEvent'. Either include it or remove the dependency array.",["1297"],"'customerrefno' is assigned a value but never used.",["1298"],"React Hook useEffect has a missing dependency: 'displayDealersDetailsDatawithstatusactiveevent'. Either include it or remove the dependency array.",["1299"],["1300"],"'finalinvoicenumber' is assigned a value but never used.","'updaterowdata' is assigned a value but never used.","'setUpdaterowdata' is assigned a value but never used.",["1301"],["1302"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-redeclare","'y1' is already defined.","redeclared","'y2' is already defined.",["1303"],["1304"],"'listofinvoices' is assigned a value but never used.",["1305"],"React Hook useEffect has missing dependencies: 'custrefno' and 'invoiceno'. Either include them or remove the dependency array.",["1306"],"React Hook React.useEffect has a missing dependency: 'currentStatusEvent'. Either include it or remove the dependency array. If 'currentStatusEvent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1307"],"'CustomizedPrint' is defined but never used.","React Hook useEffect has missing dependencies: 'displayCustomerFollowUpData', 'filterflag', and 'statusfiltercustomerdata'. Either include them or remove the dependency array.",["1308"],"React Hook useEffect has a missing dependency: 'displayCustomerFollowUpData'. Either include it or remove the dependency array.",["1309"],"React Hook useEffect has missing dependencies: 'displayDeliveryReportsData', 'filterflag', and 'statusfilterdeliveryreport'. Either include them or remove the dependency array.",["1310"],"React Hook useEffect has a missing dependency: 'paymentstatusfilteronly'. Either include it or remove the dependency array.",["1311"],"React Hook useEffect has a missing dependency: 'deliverystatusfilteronly'. Either include it or remove the dependency array.",["1312"],"React Hook useEffect has a missing dependency: 'displayDeliveryReportsData'. Either include it or remove the dependency array.",["1313"],"'editRow' is assigned a value but never used.","'editFormData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filterflag' and 'productstatusfilter'. Either include them or remove the dependency array.",["1314"],"'editevent' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'displayDealersDetailsData', 'filterflag', and 'gstinstatusfilterdealersdata'. Either include them or remove the dependency array.",["1315"],"React Hook useEffect has a missing dependency: 'displayDealersDetailsData'. Either include it or remove the dependency array.",["1316"],"'CustomizedDownload' is defined but never used.","'moment' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"1317","text":"1318"},{"range":"1319","text":"1318"},{"range":"1320","text":"1318"},"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"range":"1321","text":"1318"},{"range":"1322","text":"1318"},{"range":"1323","text":"1318"},"React Hook useEffect has a missing dependency: 'resultDate'. Either include it or remove the dependency array.",["1324"],["1325"],["1326"],"'constantinvoicedata' is assigned a value but never used.","'setdeliverstatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'rowdata'. Either include it or remove the dependency array. If 'setUpdaterowdata' needs the current value of 'rowdata', you can also switch to useReducer instead of useState and read 'rowdata' in the reducer.",["1327"],"'comboboxdata' is assigned a value but never used.","'updatedPaymentstatus' is assigned a value but never used.","'updatedDeliverystatus' is assigned a value but never used.","'paymentstatusevent' is assigned a value but never used.","'deliverystatusevent' is assigned a value but never used.","'setfinalstatus' is assigned a value but never used.",["1328"],"'rowdata.follow_up_call' is assigned to itself.","'setproductstatus' is assigned a value but never used.",["1329"],"no-useless-computed-key","Unnecessarily computed property [\"product_status\"] found.","Property","unnecessarilyComputedProperty",{"range":"1330","text":"1331"},"'setdealerstatus' is assigned a value but never used.",["1332"],"'CustomizedComboboxForAll' is defined but never used.","'setgststatus' is assigned a value but never used.","'updatedate' is assigned a value but never used.","'CustomizedSearchBar' is defined but never used.",["1333"],["1334"],"'goEventClicked' is assigned a value but never used.","'onHandleChangeEvent' is assigned a value but never used.","'CustomizedBtn' is defined but never used.","'searchData' is assigned a value but never used.","'setModalview' is assigned a value but never used.",["1335"],["1336"],["1337"],"'handleKeypress' is assigned a value but never used.","'FullScreenModal' is defined but never used.",["1338"],["1339"],["1340"],["1341"],"'searchHandle' is assigned a value but never used.",{"range":"1342","text":"1318"},{"range":"1343","text":"1318"},{"range":"1344","text":"1318"},["1345"],["1346"],["1347"],["1348"],["1349"],{"range":"1350","text":"1318"},{"range":"1351","text":"1318"},{"range":"1352","text":"1318"},["1353"],["1354"],["1355"],["1356"],"'customeraddedsuccessmsg' is defined but never used.","'producthsncodeonly' is assigned a value but never used.","'productnameonly' is assigned a value but never used.","'productquantityonly' is assigned a value but never used.",["1357"],["1358"],["1359"],"'customerAddressError' is assigned a value but never used.","'stateNameError' is assigned a value but never used.","'productError' is assigned a value but never used.","'phonenoError' is assigned a value but never used.","Unnecessarily computed property [\"customerNameError\"] found.",{"range":"1360","text":"1361"},["1362"],["1363"],["1364"],"'rowdatadisplayedalter' is assigned a value but never used.",["1365"],["1366"],["1367"],{"range":"1368","text":"1331"},["1369"],"'useReactToPrint' is defined but never used.","'CSVLink' is defined but never used.",["1370"],["1371"],"'csvReport' is assigned a value but never used.",["1372"],["1373"],"'useEffect' is defined but never used.","'FullScreenModalTwo' is defined but never used.","'updatedownloadinvoiceevent' is assigned a value but never used.",["1374"],["1375"],["1376"],["1377"],"'AddFewCustomersForm' is defined but never used.",{"desc":"1378","fix":"1379"},{"desc":"1380","fix":"1381"},{"desc":"1382","fix":"1383"},{"desc":"1384","fix":"1385"},{"desc":"1386","fix":"1387"},{"desc":"1388","fix":"1389"},{"desc":"1390","fix":"1391"},{"desc":"1390","fix":"1392"},{"desc":"1393","fix":"1394"},{"desc":"1395","fix":"1396"},{"desc":"1397","fix":"1398"},{"desc":"1399","fix":"1400"},{"desc":"1401","fix":"1402"},{"desc":"1403","fix":"1404"},{"desc":"1390","fix":"1405"},{"desc":"1386","fix":"1406"},{"desc":"1390","fix":"1407"},{"desc":"1390","fix":"1408"},{"desc":"1409","fix":"1410"},{"desc":"1411","fix":"1412"},{"desc":"1413","fix":"1414"},{"desc":"1415","fix":"1416"},{"desc":"1417","fix":"1418"},{"desc":"1419","fix":"1420"},{"desc":"1421","fix":"1422"},{"desc":"1423","fix":"1424"},{"desc":"1425","fix":"1426"},{"desc":"1427","fix":"1428"},{"desc":"1429","fix":"1430"},{"desc":"1431","fix":"1432"},[1286,1286],"()",[2267,2267],[3109,3109],[1209,1209],[2191,2191],[3032,3032],{"desc":"1433","fix":"1434"},{"desc":"1435","fix":"1436"},{"desc":"1386","fix":"1437"},{"desc":"1438","fix":"1439"},{"desc":"1438","fix":"1440"},{"desc":"1438","fix":"1441"},[1130,1148],"\"product_status\"",{"desc":"1438","fix":"1442"},{"desc":"1380","fix":"1443"},{"desc":"1382","fix":"1444"},{"desc":"1390","fix":"1445"},{"desc":"1401","fix":"1446"},{"desc":"1403","fix":"1447"},{"desc":"1397","fix":"1448"},{"desc":"1399","fix":"1449"},{"desc":"1415","fix":"1450"},{"desc":"1417","fix":"1451"},[1289,1289],[2273,2273],[3118,3118],{"desc":"1419","fix":"1452"},{"desc":"1421","fix":"1453"},{"desc":"1423","fix":"1454"},{"desc":"1425","fix":"1455"},{"desc":"1427","fix":"1456"},[1212,1212],[2197,2197],[3041,3041],{"desc":"1429","fix":"1457"},{"desc":"1431","fix":"1458"},{"desc":"1386","fix":"1459"},{"desc":"1384","fix":"1460"},{"desc":"1390","fix":"1461"},{"desc":"1390","fix":"1462"},{"desc":"1393","fix":"1463"},[3554,3575],"\"customerNameError\"",{"desc":"1395","fix":"1464"},{"desc":"1390","fix":"1465"},{"desc":"1390","fix":"1466"},{"desc":"1390","fix":"1467"},{"desc":"1386","fix":"1468"},{"desc":"1438","fix":"1469"},[1133,1151],{"desc":"1438","fix":"1470"},{"desc":"1409","fix":"1471"},{"desc":"1411","fix":"1472"},{"desc":"1438","fix":"1473"},{"desc":"1438","fix":"1474"},{"desc":"1386","fix":"1475"},{"desc":"1388","fix":"1476"},{"desc":"1433","fix":"1477"},{"desc":"1413","fix":"1478"},"Update the dependencies array to be: [api, temprowdataonbooking]",{"range":"1479","text":"1480"},"Update the dependencies array to be: [displaycustomerfollowupevent]",{"range":"1481","text":"1482"},"Update the dependencies array to be: [displaycustomerfollowupevent, searchData]",{"range":"1483","text":"1484"},"Update the dependencies array to be: [invoiceFormData, toWords]",{"range":"1485","text":"1486"},"Update the dependencies array to be: [fetchalldatafromcust]",{"range":"1487","text":"1488"},"Update the dependencies array to be: [api, updaterowdata]",{"range":"1489","text":"1490"},"Update the dependencies array to be: [api]",{"range":"1491","text":"1492"},{"range":"1493","text":"1492"},"Update the dependencies array to be: [api, customerdata]",{"range":"1494","text":"1495"},"Update the dependencies array to be: [api, products]",{"range":"1496","text":"1497"},"Update the dependencies array to be: [displayBookedCustomeerDataEvent]",{"range":"1498","text":"1499"},"Update the dependencies array to be: [displayBookedCustomeerDataEvent, searchData]",{"range":"1500","text":"1501"},"Update the dependencies array to be: [displayDealersDetailsDatawithstatusactiveevent]",{"range":"1502","text":"1503"},"Update the dependencies array to be: [displayDealersDetailsDatawithstatusactiveevent, searchData]",{"range":"1504","text":"1505"},{"range":"1506","text":"1492"},{"range":"1507","text":"1488"},{"range":"1508","text":"1492"},{"range":"1509","text":"1492"},"Update the dependencies array to be: [fetchdealersdatatoverify, toWords]",{"range":"1510","text":"1511"},"Update the dependencies array to be: [custrefno, invoiceno]",{"range":"1512","text":"1513"},"Update the dependencies array to be: [currentStatusEvent, finalstatus]",{"range":"1514","text":"1515"},"Update the dependencies array to be: [currentstatus, displayCustomerFollowUpData, filterflag, statusfiltercustomerdata]",{"range":"1516","text":"1517"},"Update the dependencies array to be: [displayCustomerFollowUpData, searchvalue]",{"range":"1518","text":"1519"},"Update the dependencies array to be: [deliverystatus, displayDeliveryReportsData, filterflag, paymentstatus, statusfilterdeliveryreport]",{"range":"1520","text":"1521"},"Update the dependencies array to be: [paymentstatus, paymentstatusfilteronly]",{"range":"1522","text":"1523"},"Update the dependencies array to be: [deliverystatus, deliverystatusfilteronly]",{"range":"1524","text":"1525"},"Update the dependencies array to be: [displayDeliveryReportsData, searchvalue]",{"range":"1526","text":"1527"},"Update the dependencies array to be: [currentstatus, filterflag, productstatusfilter]",{"range":"1528","text":"1529"},"Update the dependencies array to be: [currentstatus, displayDealersDetailsData, filterflag, gstinstatusfilterdealersdata]",{"range":"1530","text":"1531"},"Update the dependencies array to be: [displayDealersDetailsData, searchvalue]",{"range":"1532","text":"1533"},"Update the dependencies array to be: [resultDate]",{"range":"1534","text":"1535"},"Update the dependencies array to be: [api, fetchdealersdatatoverify]",{"range":"1536","text":"1537"},{"range":"1538","text":"1488"},"Update the dependencies array to be: [rowdata]",{"range":"1539","text":"1540"},{"range":"1541","text":"1540"},{"range":"1542","text":"1540"},{"range":"1543","text":"1540"},{"range":"1544","text":"1482"},{"range":"1545","text":"1484"},{"range":"1546","text":"1492"},{"range":"1547","text":"1503"},{"range":"1548","text":"1505"},{"range":"1549","text":"1499"},{"range":"1550","text":"1501"},{"range":"1551","text":"1517"},{"range":"1552","text":"1519"},{"range":"1553","text":"1521"},{"range":"1554","text":"1523"},{"range":"1555","text":"1525"},{"range":"1556","text":"1527"},{"range":"1557","text":"1529"},{"range":"1558","text":"1531"},{"range":"1559","text":"1533"},{"range":"1560","text":"1488"},{"range":"1561","text":"1486"},{"range":"1562","text":"1492"},{"range":"1563","text":"1492"},{"range":"1564","text":"1495"},{"range":"1565","text":"1497"},{"range":"1566","text":"1492"},{"range":"1567","text":"1492"},{"range":"1568","text":"1492"},{"range":"1569","text":"1488"},{"range":"1570","text":"1540"},{"range":"1571","text":"1540"},{"range":"1572","text":"1511"},{"range":"1573","text":"1513"},{"range":"1574","text":"1540"},{"range":"1575","text":"1540"},{"range":"1576","text":"1488"},{"range":"1577","text":"1490"},{"range":"1578","text":"1535"},{"range":"1579","text":"1515"},[3812,3834],"[api, temprowdataonbooking]",[3905,3907],"[displaycustomerfollowupevent]",[5950,5962],"[displaycustomerfollowupevent, searchData]",[1395,1412],"[invoiceFormData, toWords]",[2154,2156],"[fetchalldatafromcust]",[2962,2977],"[api, updaterowdata]",[1708,1710],"[api]",[2566,2568],[2952,2966],"[api, customerdata]",[5395,5405],"[api, products]",[942,944],"[displayBookedCustomeerDataEvent]",[2852,2864],"[displayBookedCustomeerDataEvent, searchData]",[961,963],"[displayDealersDetailsDatawithstatusactiveevent]",[1778,1790],"[displayDealersDetailsDatawithstatusactiveevent, searchData]",[881,883],[946,948],[1869,1871],[4259,4261],[1787,1813],"[fetchdealersdatatoverify, toWords]",[2357,2359],"[custrefno, invoiceno]",[623,636],"[currentStatusEvent, finalstatus]",[1110,1125],"[currentstatus, displayCustomerFollowUpData, filterflag, statusfiltercustomerdata]",[2297,2310],"[displayCustomerFollowUpData, searchvalue]",[1070,1101],"[deliverystatus, displayDeliveryReportsData, filterflag, paymentstatus, statusfilterdeliveryreport]",[1206,1221],"[paymentstatus, paymentstatusfilteronly]",[1327,1343],"[deliverystatus, deliverystatusfilteronly]",[4344,4357],"[displayDeliveryReportsData, searchvalue]",[1505,1520],"[currentstatus, filterflag, productstatusfilter]",[1165,1180],"[currentstatus, displayDealersDetailsData, filterflag, gstinstatusfilterdealersdata]",[1572,1585],"[displayDealersDetailsData, searchvalue]",[331,333],"[resultDate]",[4117,4143],"[api, fetchdealersdatatoverify]",[816,818],[793,795],"[rowdata]",[724,726],[606,608],[610,612],[1970,1972],[6105,6117],[1352,1354],[1108,1110],[1925,1937],[1108,1110],[3202,3214],[1154,1169],[2341,2354],[1114,1145],[1250,1265],[1371,1387],[4571,4584],[1572,1587],[1227,1242],[1656,1669],[885,887],[1192,1209],[1828,1830],[2686,2688],[3072,3086],[6189,6199],[1880,1882],[4270,4272],[955,957],[1020,1022],[606,608],[793,795],[1791,1817],[2367,2369],[764,766],[610,612],[2394,2396],[3202,3217],[331,333],[623,636]]