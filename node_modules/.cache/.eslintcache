[{"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/index.js":"1","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/App.js":"2","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/reportWebVitals.js":"3","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/NavigationTiles/NavigationTiles.js":"4","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/ViewInvoicePage/ViewInvoicePage.js":"5","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/LoginPage/LoginPage.js":"6","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/AddCustomerPage/AddCustomerPage.js":"7","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/GenerateInvoice/GenerateInvoice.js":"8","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/GenerateReport/GenerateReport.js":"9","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/Header/Header.js":"10","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedLogOutIcon/CustomizedLogOutIcon.js":"11","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedLogo/CustomizedLogo.js":"12","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/Footer/Footer.js":"13","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/TextAndTextInput/TextAndTextInput.js":"14","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedText/CustomizedText.js":"15","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedTextInput/CustomizedTextInput.js":"16","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCard/CustomizedCard.js":"17","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedSearchBar/CustomizedSearchBar.js":"18","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedBtn/CustomizedBtn.js":"19","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/OpenModal/OpenModal.js":"20","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/InvoiceFormat/InvoiceFormat.js":"21","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedPrint/CustomizedPrint.js":"22","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddCustomersForm/AddCustomersForm.js":"23","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/organisms/SuccessMsg/SuccessMsg.js":"24","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDatepicker/SelectDate.js":"25","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCombobox/CustomizedComboboxAll.js":"26","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddFewCustomersForm/AddFewCustomersForm.js":"27","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCombobox/CustomizedComboboxForState.js":"28","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect.js":"29","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/organisms/CustomerInvoice/CustomerInvoice.js":"30","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/organisms/DealersInvoice/DealersInvoice.js":"31","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/CustomerInvoiceForm/CustomerInvoiceForm.js":"32","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersInvoiceForm/DealersInvoiceForm.js":"33","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedReadOnlyTextInput/CustomizedReadOnlyTextInput.js":"34","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate.js":"35","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDownload/CustomizedDownload.js":"36","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/TextAndSelect/TextAndSelect.js":"37","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedSelect/CustomizedSelect.js":"38","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayCustomerTable/DisplayCustomerTable.js":"39","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedEditIcon/CustomizedEditIcon.js":"40","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable.js":"41","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable.js":"42","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDeleteIcon/CustomizedDeleteIcon.js":"43","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable.js":"44","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/Download/DownloadCustomer.js":"45","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/Download/DownloadDelivery.js":"46","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDatepicker/CustomizedDatepicker.js":"47","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersInvoicesListForm/DealersInvoicesListForm.js":"48","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersDetailsForm/DealersDetailsForm.js":"49","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DeliveryDetailsForm/DeliveryDetailsForm.js":"50","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCombobox/CustomizedComboboxForAll.js":"51","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/CustomerFollowUpForm/CustomerFollowUpForm.js":"52","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/ProductsDetailsForm/ProductsDetailsForm.js":"53","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedComboboxwithdefaultvalue/CustomizedComboboxwithdefaultvalue.js":"54","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/EditDealersReportForm/EditDealersReportForm.js":"55","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddDealersForm/AddDealersForm.js":"56","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddProductForm/AddProductForm.js":"57","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/Header/HeaderWithLogout.js":"58","/Users/rashmishrees/Desktop/sdd/src/index.js":"59","/Users/rashmishrees/Desktop/sdd/src/App.js":"60","/Users/rashmishrees/Desktop/sdd/src/reportWebVitals.js":"61","/Users/rashmishrees/Desktop/sdd/src/pages/AddCustomerPage/AddCustomerPage.js":"62","/Users/rashmishrees/Desktop/sdd/src/pages/ViewInvoicePage/ViewInvoicePage.js":"63","/Users/rashmishrees/Desktop/sdd/src/pages/LoginPage/LoginPage.js":"64","/Users/rashmishrees/Desktop/sdd/src/pages/NavigationTiles/NavigationTiles.js":"65","/Users/rashmishrees/Desktop/sdd/src/pages/GenerateInvoice/GenerateInvoice.js":"66","/Users/rashmishrees/Desktop/sdd/src/pages/Footer/Footer.js":"67","/Users/rashmishrees/Desktop/sdd/src/pages/GenerateReport/GenerateReport.js":"68","/Users/rashmishrees/Desktop/sdd/src/pages/Header/HeaderWithLogout.js":"69","/Users/rashmishrees/Desktop/sdd/src/pages/Header/Header.js":"70","/Users/rashmishrees/Desktop/sdd/src/components/molecules/OpenModal/OpenModal.js":"71","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCard/CustomizedCard.js":"72","/Users/rashmishrees/Desktop/sdd/src/components/molecules/TextAndTextInput/TextAndTextInput.js":"73","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedBtn/CustomizedBtn.js":"74","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedSearchBar/CustomizedSearchBar.js":"75","/Users/rashmishrees/Desktop/sdd/src/components/organisms/DealersInvoice/DealersInvoice.js":"76","/Users/rashmishrees/Desktop/sdd/src/components/organisms/CustomerInvoice/CustomerInvoice.js":"77","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayCustomerTable/DisplayCustomerTable.js":"78","/Users/rashmishrees/Desktop/sdd/src/components/molecules/Download/DownloadCustomer.js":"79","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable.js":"80","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable.js":"81","/Users/rashmishrees/Desktop/sdd/src/components/molecules/Download/DownloadDelivery.js":"82","/Users/rashmishrees/Desktop/sdd/src/components/molecules/TextAndSelect/TextAndSelect.js":"83","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable.js":"84","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedLogOutIcon/CustomizedLogOutIcon.js":"85","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedLogo/CustomizedLogo.js":"86","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersDetailsForm/DealersDetailsForm.js":"87","/Users/rashmishrees/Desktop/sdd/src/components/molecules/InvoiceFormat/InvoiceFormat.js":"88","/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddFewCustomersForm/AddFewCustomersForm.js":"89","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersInvoiceForm/DealersInvoiceForm.js":"90","/Users/rashmishrees/Desktop/sdd/src/components/molecules/CustomerInvoiceForm/CustomerInvoiceForm.js":"91","/Users/rashmishrees/Desktop/sdd/src/components/molecules/ProductsDetailsForm/ProductsDetailsForm.js":"92","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DeliveryDetailsForm/DeliveryDetailsForm.js":"93","/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddProductForm/AddProductForm.js":"94","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate.js":"95","/Users/rashmishrees/Desktop/sdd/src/components/molecules/CustomerFollowUpForm/CustomerFollowUpForm.js":"96","/Users/rashmishrees/Desktop/sdd/src/components/molecules/EditDealersReportForm/EditDealersReportForm.js":"97","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersInvoicesListForm/DealersInvoicesListForm.js":"98","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedText/CustomizedText.js":"99","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedTextInput/CustomizedTextInput.js":"100","/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddCustomersForm/AddCustomersForm.js":"101","/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddDealersForm/AddDealersForm.js":"102","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedEditIcon/CustomizedEditIcon.js":"103","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedDownload/CustomizedDownload.js":"104","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedPrint/CustomizedPrint.js":"105","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedDatepicker/CustomizedDatepicker.js":"106","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedSelect/CustomizedSelect.js":"107","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedDatepicker/SelectDate.js":"108","/Users/rashmishrees/Desktop/sdd/src/components/organisms/SuccessMsg/SuccessMsg.js":"109","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect.js":"110","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForState.js":"111","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxAll.js":"112","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForAll.js":"113","/Users/rashmishrees/Desktop/sdd/src/components/molecules/FullScreenModal/FullScreenModal.js":"114","/Users/rashmishrees/Desktop/sdd/src/components/molecules/FullScreenModalOne/FullScreenModalOne.js":"115","/Users/rashmishrees/Desktop/sdd/src/components/molecules/FullScreenModalTwo/FullScreenModalTwo.js":"116"},{"size":322,"mtime":1656828163816,"results":"117","hashOfConfig":"118"},{"size":1935,"mtime":1656394595739,"results":"119","hashOfConfig":"118"},{"size":362,"mtime":1655205578447,"results":"120","hashOfConfig":"118"},{"size":1969,"mtime":1656496539715,"results":"121","hashOfConfig":"118"},{"size":5314,"mtime":1656930242665,"results":"122","hashOfConfig":"118"},{"size":1547,"mtime":1656495174476,"results":"123","hashOfConfig":"118"},{"size":13642,"mtime":1658489977400,"results":"124","hashOfConfig":"118"},{"size":3120,"mtime":1656930523475,"results":"125","hashOfConfig":"118"},{"size":6653,"mtime":1658147625339,"results":"126","hashOfConfig":"118"},{"size":644,"mtime":1656394852130,"results":"127","hashOfConfig":"118"},{"size":340,"mtime":1655215070802,"results":"128","hashOfConfig":"118"},{"size":311,"mtime":1656394355955,"results":"129","hashOfConfig":"118"},{"size":828,"mtime":1655216101363,"results":"130","hashOfConfig":"118"},{"size":649,"mtime":1655216828234,"results":"131","hashOfConfig":"118"},{"size":276,"mtime":1655216910136,"results":"132","hashOfConfig":"118"},{"size":675,"mtime":1656395675632,"results":"133","hashOfConfig":"118"},{"size":358,"mtime":1655277388434,"results":"134","hashOfConfig":"118"},{"size":741,"mtime":1656395635772,"results":"135","hashOfConfig":"118"},{"size":457,"mtime":1656395694732,"results":"136","hashOfConfig":"118"},{"size":7514,"mtime":1658489854940,"results":"137","hashOfConfig":"118"},{"size":10167,"mtime":1658062163478,"results":"138","hashOfConfig":"118"},{"size":243,"mtime":1647601435902,"results":"139","hashOfConfig":"118"},{"size":25529,"mtime":1658489676243,"results":"140","hashOfConfig":"118"},{"size":1134,"mtime":1654409279732,"results":"141","hashOfConfig":"118"},{"size":1080,"mtime":1658151251176,"results":"142","hashOfConfig":"118"},{"size":1013,"mtime":1658160365352,"results":"143","hashOfConfig":"118"},{"size":11026,"mtime":1658488826034,"results":"144","hashOfConfig":"118"},{"size":2043,"mtime":1658234790527,"results":"145","hashOfConfig":"118"},{"size":1893,"mtime":1658234108705,"results":"146","hashOfConfig":"118"},{"size":8001,"mtime":1658067234698,"results":"147","hashOfConfig":"118"},{"size":6392,"mtime":1657713528950,"results":"148","hashOfConfig":"118"},{"size":21105,"mtime":1658155756694,"results":"149","hashOfConfig":"118"},{"size":10867,"mtime":1658155809037,"results":"150","hashOfConfig":"118"},{"size":741,"mtime":1651760457266,"results":"151","hashOfConfig":"152"},{"size":12157,"mtime":1658062223990,"results":"153","hashOfConfig":"118"},{"size":328,"mtime":1656159237794,"results":"154","hashOfConfig":"118"},{"size":659,"mtime":1656160971533,"results":"155","hashOfConfig":"118"},{"size":1451,"mtime":1656160952498,"results":"156","hashOfConfig":"118"},{"size":6918,"mtime":1658151527848,"results":"157","hashOfConfig":"118"},{"size":304,"mtime":1656161064737,"results":"158","hashOfConfig":"118"},{"size":10202,"mtime":1658139662025,"results":"159","hashOfConfig":"118"},{"size":7440,"mtime":1658151694649,"results":"160","hashOfConfig":"118"},{"size":396,"mtime":1656161178350,"results":"161","hashOfConfig":"118"},{"size":5892,"mtime":1656730801653,"results":"162","hashOfConfig":"118"},{"size":4686,"mtime":1656848944115,"results":"163","hashOfConfig":"118"},{"size":4644,"mtime":1656848610042,"results":"164","hashOfConfig":"118"},{"size":607,"mtime":1647604826716,"results":"165","hashOfConfig":"118"},{"size":7316,"mtime":1657717589774,"results":"166","hashOfConfig":"118"},{"size":18124,"mtime":1658488829673,"results":"167","hashOfConfig":"118"},{"size":14408,"mtime":1658146528648,"results":"168","hashOfConfig":"118"},{"size":1275,"mtime":1656828209928,"results":"169","hashOfConfig":"118"},{"size":7253,"mtime":1658160526004,"results":"170","hashOfConfig":"118"},{"size":5909,"mtime":1658160948476,"results":"171","hashOfConfig":"118"},{"size":1133,"mtime":1652341941653,"results":"172","hashOfConfig":"152"},{"size":6054,"mtime":1658161531470,"results":"173","hashOfConfig":"118"},{"size":4630,"mtime":1658161803193,"results":"174","hashOfConfig":"118"},{"size":5798,"mtime":1658161723742,"results":"175","hashOfConfig":"118"},{"size":866,"mtime":1656398545731,"results":"176","hashOfConfig":"118"},{"size":322,"mtime":1656828163816,"results":"177","hashOfConfig":"178"},{"size":1938,"mtime":1659344186033,"results":"179","hashOfConfig":"178"},{"size":362,"mtime":1655205578447,"results":"180","hashOfConfig":"178"},{"size":14200,"mtime":1660138325081,"results":"181","hashOfConfig":"178"},{"size":6907,"mtime":1660152791466,"results":"182","hashOfConfig":"178"},{"size":1617,"mtime":1660365852061,"results":"183","hashOfConfig":"178"},{"size":1969,"mtime":1656496539715,"results":"184","hashOfConfig":"178"},{"size":3120,"mtime":1656930523475,"results":"185","hashOfConfig":"178"},{"size":828,"mtime":1655216101363,"results":"186","hashOfConfig":"178"},{"size":6674,"mtime":1659773860429,"results":"187","hashOfConfig":"178"},{"size":866,"mtime":1656398545731,"results":"188","hashOfConfig":"178"},{"size":644,"mtime":1656394852130,"results":"189","hashOfConfig":"178"},{"size":7613,"mtime":1660367070489,"results":"190","hashOfConfig":"178"},{"size":358,"mtime":1655277388434,"results":"191","hashOfConfig":"178"},{"size":727,"mtime":1660365829565,"results":"192","hashOfConfig":"178"},{"size":457,"mtime":1656395694732,"results":"193","hashOfConfig":"178"},{"size":741,"mtime":1656395635772,"results":"194","hashOfConfig":"178"},{"size":6588,"mtime":1660366958563,"results":"195","hashOfConfig":"178"},{"size":9377,"mtime":1660152868333,"results":"196","hashOfConfig":"178"},{"size":6918,"mtime":1658151527848,"results":"197","hashOfConfig":"178"},{"size":4698,"mtime":1659344186172,"results":"198","hashOfConfig":"178"},{"size":10202,"mtime":1658139662025,"results":"199","hashOfConfig":"178"},{"size":9241,"mtime":1660137326363,"results":"200","hashOfConfig":"178"},{"size":4656,"mtime":1659344186172,"results":"201","hashOfConfig":"178"},{"size":659,"mtime":1656160971533,"results":"202","hashOfConfig":"178"},{"size":7702,"mtime":1660137331588,"results":"203","hashOfConfig":"178"},{"size":340,"mtime":1655215070802,"results":"204","hashOfConfig":"178"},{"size":311,"mtime":1656394355955,"results":"205","hashOfConfig":"178"},{"size":18773,"mtime":1660367663744,"results":"206","hashOfConfig":"178"},{"size":9881,"mtime":1659789224298,"results":"207","hashOfConfig":"178"},{"size":11016,"mtime":1660137968800,"results":"208","hashOfConfig":"178"},{"size":10867,"mtime":1660132624577,"results":"209","hashOfConfig":"178"},{"size":21105,"mtime":1658155756694,"results":"210","hashOfConfig":"178"},{"size":5912,"mtime":1659344186192,"results":"211","hashOfConfig":"178"},{"size":14414,"mtime":1659344186130,"results":"212","hashOfConfig":"178"},{"size":5801,"mtime":1659344186171,"results":"213","hashOfConfig":"178"},{"size":13443,"mtime":1660151422667,"results":"214","hashOfConfig":"178"},{"size":7560,"mtime":1660132614155,"results":"215","hashOfConfig":"178"},{"size":6057,"mtime":1659344186172,"results":"216","hashOfConfig":"178"},{"size":10699,"mtime":1660367035279,"results":"217","hashOfConfig":"178"},{"size":276,"mtime":1655216910136,"results":"218","hashOfConfig":"178"},{"size":717,"mtime":1660365856826,"results":"219","hashOfConfig":"178"},{"size":25529,"mtime":1658489676243,"results":"220","hashOfConfig":"178"},{"size":4633,"mtime":1659344186172,"results":"221","hashOfConfig":"178"},{"size":304,"mtime":1656161064737,"results":"222","hashOfConfig":"178"},{"size":328,"mtime":1656159237794,"results":"223","hashOfConfig":"178"},{"size":243,"mtime":1647601435902,"results":"224","hashOfConfig":"178"},{"size":607,"mtime":1647604826716,"results":"225","hashOfConfig":"178"},{"size":1451,"mtime":1656160952498,"results":"226","hashOfConfig":"178"},{"size":1080,"mtime":1658151251176,"results":"227","hashOfConfig":"178"},{"size":1134,"mtime":1654409279732,"results":"228","hashOfConfig":"178"},{"size":1893,"mtime":1658234108705,"results":"229","hashOfConfig":"178"},{"size":2043,"mtime":1658234790527,"results":"230","hashOfConfig":"178"},{"size":1013,"mtime":1658160365352,"results":"231","hashOfConfig":"178"},{"size":1275,"mtime":1656828209928,"results":"232","hashOfConfig":"178"},{"size":1892,"mtime":1660150918392,"results":"233","hashOfConfig":"178"},{"size":1296,"mtime":1660145756508,"results":"234","hashOfConfig":"178"},{"size":1771,"mtime":1660151374976,"results":"235","hashOfConfig":"178"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"le1inw",{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322"},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"327"},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335"},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343"},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"348"},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352"},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},"5eio7m",{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"327"},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374"},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378"},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385"},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","suppressedMessages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396"},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":3,"source":"400"},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":3,"source":"404"},{"filePath":"405","messages":"406","suppressedMessages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408"},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"348"},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416"},{"filePath":"417","messages":"418","suppressedMessages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"327"},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"327"},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"431"},{"filePath":"432","messages":"433","suppressedMessages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"435","messages":"436","suppressedMessages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438"},{"filePath":"439","messages":"440","suppressedMessages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442"},{"filePath":"443","messages":"444","suppressedMessages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446"},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","suppressedMessages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"208a7n",{"filePath":"453","messages":"454","suppressedMessages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456"},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","suppressedMessages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463"},{"filePath":"464","messages":"465","suppressedMessages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467"},{"filePath":"468","messages":"469","suppressedMessages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471"},{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"478","messages":"479","suppressedMessages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","suppressedMessages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484"},{"filePath":"485","messages":"486","suppressedMessages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","suppressedMessages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","suppressedMessages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494"},{"filePath":"495","messages":"496","suppressedMessages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","suppressedMessages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","suppressedMessages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","suppressedMessages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"507","messages":"508","suppressedMessages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510"},{"filePath":"511","messages":"512","suppressedMessages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514"},{"filePath":"515","messages":"516","suppressedMessages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378"},{"filePath":"518","messages":"519","suppressedMessages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":3,"source":"521"},{"filePath":"522","messages":"523","suppressedMessages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385"},{"filePath":"525","messages":"526","suppressedMessages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528"},{"filePath":"529","messages":"530","suppressedMessages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":3,"source":"532"},{"filePath":"533","messages":"534","suppressedMessages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","suppressedMessages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539"},{"filePath":"540","messages":"541","suppressedMessages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"543","messages":"544","suppressedMessages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"546","messages":"547","suppressedMessages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"549","messages":"550","suppressedMessages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552"},{"filePath":"553","messages":"554","suppressedMessages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556"},{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560"},{"filePath":"561","messages":"562","suppressedMessages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352"},{"filePath":"564","messages":"565","suppressedMessages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"567"},{"filePath":"568","messages":"569","suppressedMessages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571"},{"filePath":"572","messages":"573","suppressedMessages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575"},{"filePath":"576","messages":"577","suppressedMessages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579"},{"filePath":"580","messages":"581","suppressedMessages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583"},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587"},{"filePath":"588","messages":"589","suppressedMessages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591"},{"filePath":"592","messages":"593","suppressedMessages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"595","messages":"596","suppressedMessages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","suppressedMessages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"601","messages":"602","suppressedMessages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604"},{"filePath":"605","messages":"606","suppressedMessages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","suppressedMessages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"611","messages":"612","suppressedMessages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","suppressedMessages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408"},{"filePath":"617","messages":"618","suppressedMessages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374"},{"filePath":"620","messages":"621","suppressedMessages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322"},{"filePath":"623","messages":"624","suppressedMessages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","suppressedMessages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"629","messages":"630","suppressedMessages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335"},{"filePath":"632","messages":"633","suppressedMessages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"635","messages":"636","suppressedMessages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"638","messages":"639","suppressedMessages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"641"},{"filePath":"642","messages":"643","suppressedMessages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"645","messages":"646","suppressedMessages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/index.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/App.js",["648"],[],"import LoginPage from './pages/LoginPage/LoginPage';\nimport NavigationTiles from './pages/NavigationTiles/NavigationTiles';\nimport ViewInvoicePage from './pages/ViewInvoicePage/ViewInvoicePage';\nimport AddCustomerPage from './pages/AddCustomerPage/AddCustomerPage';\nimport GenerateInvoice from './pages/GenerateInvoice/GenerateInvoice';\nimport GenerateReport from './pages/GenerateReport/GenerateReport';\nimport Footer from './pages/Footer/Footer';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from 'react-router-dom';\nimport axios from 'axios';\nimport { useState } from 'react';\nconst api = axios.create({\n  baseURL: `http://localhost:3000/`\n})\nfunction App() {\n  const [logoutbtn, setlogoutbtn] = useState(false);\n  const logoutbuttonevent = (e) => {\n    setlogoutbtn(e);\n  }\n  return (\n    <Router>\n        <Routes>\n          <Route path=\"/\" element={<LoginPage \n                                      api={api} \n                                      logoutbuttonevent={logoutbuttonevent}\n                                    />\n                                  }\n          />\n          <Route path=\"/main\" element={<NavigationTiles/>}/>\n          <Route path=\"/viewinvoice\" element={<ViewInvoicePage\n                                        api={api}\n                                      />}\n          />\n          <Route path=\"/addcustomerpage\" element={<AddCustomerPage\n                                          api={api}\n                                        />}\n          />\n          <Route path=\"/generateinvoice\" element={<GenerateInvoice\n                                          api={api}\n                                        />}/>\n          <Route path=\"/generatereport\" element={<GenerateReport\n                                          api={api}\n                                        />}/>\n        </Routes>\n        <div>\n          <Footer />\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/reportWebVitals.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/NavigationTiles/NavigationTiles.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/ViewInvoicePage/ViewInvoicePage.js",["649"],[],"import React, { useState } from \"react\";\nimport CustomizedSearchBar from '../../components/atoms/CustomizedSearchBar/CustomizedSearchBar';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport OpenModal from '../../components/molecules/OpenModal/OpenModal';\nimport { useNavigate } from 'react-router-dom';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport CustomizedBtn from \"../../components/atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport '../../style/style.css';\n\nconst ViewInvoicePage = ({\n    api\n}) => {\n    const [invoiceData, setInvoiceData] = useState([]);\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [searchData, setSearchData] = useState('');\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    let navigate = useNavigate();\n    const onHandleChangeEvent = (event) => {\n        setSearchData(event.target.value);\n    }\n    const goEventClicked = () => {\n        api.post('/delivery/getInvoices', {\n            params: {\n                searchData\n            }\n        }\n        )\n        .then((res) => {\n            setInvoiceData(res.data);\n        })\n    }\n    const openinvoiceevent = (invoiceNo) => {\n        api.post('/delivery/getDeliveryReportData', {\n            params: {\n                invoiceNo\n            }\n        }\n        )\n            .then((res) => {\n                setInvoiceFormData(res.data);\n            })\n    }\n    return (\n        <div>\n            <div>\n                <HeaderWithLogout />\n            </div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                invoiceFormData={invoiceFormData}\n            />\n            <div className=\"viewInvoicePageContainer\">\n                <div className=\"pageheading\">\n                    View Your Invoices\n                </div>\n                <CustomizedSearchBar\n                    onHandleChangeEvent={onHandleChangeEvent}\n                    type=\"search\"\n                    goEventClicked={goEventClicked}\n                    labelname=\"phone number / Invoice Number\"\n                    Btnname=\"search\"\n                />\n                <div className=\"displayContainer\">\n                    <div className=\"backarrow\">\n                        <p\n                            onClick={() => {\n                                navigate(\"/main\");\n                            }}\n                        ><ArrowBackIcon /></p>\n                    </div>\n                    <div className=\"table-responsive\">\n                        {\n                            invoiceData.length != 0 &&\n                            <table className=\"table table-striped table-bordered\">\n                                <thead className=\"theadalter\">\n                                    <tr>\n                                        <th>Invoice date</th>\n                                        <th>Invoice no</th>\n                                        <th>Customer name</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        invoiceData.map((data, i) => (\n                                            <tr key={i}>\n                                                <td>\n                                                    {\n                                                        data.delivery_date != null ?\n                                                        moment(data.delivery_date).format('YYYY-MM-DD'):\n                                                        data.delivery_date\n                                                    }\n                                                </td>\n                                                <td>{data.invoice_no}</td>\n                                                <td>{data.customer_name}</td>\n                                                <td>\n                                                <CustomizedBtn \n                                                    BtnName=\"View Invoice\"\n                                                    onClick={()=>{\n                                                        openinvoiceevent(data.invoice_no);\n                                                        setModalview(\"invoiceformat\");\n                                                        openevent(true);\n                                                    }}\n                                                />\n                                                </td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                        }\n                    </div>\n                    {\n                        invoiceData.length === 0 &&\n                        <p> no data found! </p>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default ViewInvoicePage;",[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/LoginPage/LoginPage.js",["650"],[],"import React, { useState } from \"react\";\nimport TextAndTextInput from \"../../components/molecules/TextAndTextInput/TextAndTextInput\";\nimport { useNavigate } from 'react-router-dom';\nimport Header from \"../Header/Header\";\nimport '../../style/style.css';\n\nconst LoginPage = ({ \n  api,\n  logoutbuttonevent\n }) => {\n  let navigate = useNavigate();\n  const [logindata, setlogindata] = useState();\n  const onChangeEvent = (event) => {\n    setlogindata({ ...logindata, [event.target.name]: event.target.value });\n  }\n  const onSubmitLogin = () => {\n    api.post('/users/login', {\n      params: {\n        logindata\n      }\n    }\n    )\n      .then((res) => {\n        if (res) {\n          logoutbuttonevent(true);\n          navigate('/main');\n        }\n      })\n  }\n  return (\n    <div>\n      <div>\n        <Header />\n      </div>\n      <div className=\"loginPageContainer\">\n        <div className=\"loginPageContainerChild\">\n          <div className=\"usernameandpass\">\n            <TextAndTextInput\n              onChangeEvent={onChangeEvent}\n              type=\"username\"\n              textname=\"USER NAME:-\" />\n            <TextAndTextInput\n              onChangeEvent={onChangeEvent}\n              type=\"password\"\n              textname=\"PASSWORD:-\" />\n          </div>\n          <div className=\"loginPageBtnContainer\">\n            <a\n              onClick={() => {\n                onSubmitLogin();\n              }}\n            >\n              Login\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default LoginPage;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/AddCustomerPage/AddCustomerPage.js",["651","652","653","654","655","656","657","658","659"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedSearchBar from \"../../components/atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport moment from 'moment';\nimport OpenModal from \"../../components/molecules/OpenModal/OpenModal\";\nimport '../../style/style.css';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport CustomizedBtn from \"../../components/atoms/CustomizedBtn/CustomizedBtn\";\nimport {useNavigate} from 'react-router-dom';\nconst AddCustomerPage = ({\n    api\n}) => {\n    let navigate = useNavigate();\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [customertable, setCustomertable] = useState([]);\n    const [currentCustomerReferenceNo, setCurrentCustomerReferenceNo] = useState('');\n    const [rowdataonbooking, setrowdataonbooking] = useState();\n    const [temprowdataonbooking, settemprowdataonbooking] = useState();\n    const [purchasestatus, setpurchasestatus] = useState();\n    const [searchData, setSearchData] = useState('');\n    const [modalview, setModalview] = useState('');\n    const [purchasemsg, setpurchasemsg] = useState();\n    const setpurchasemsgevent = (e) =>{\n      setpurchasemsg(e)\n    }\n    const fetchpurchasestatusevent = (e) => {\n      api.post('/delivery/getpurchasestatus', {\n        params: {\n          e\n        }\n      })\n      .then((res) => {\n        setpurchasestatus(res.data);\n      })\n    }\n    const currentCustomerRefNo = (e) => {\n        setCurrentCustomerReferenceNo(e)\n    }\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(()=>{\n        if(temprowdataonbooking){\n          api.put('/jointables/updaterateofdeliverytableonbook', {\n            params: {\n              data:temprowdataonbooking\n            }\n          })\n          .then((res) => {\n          })\n          api.post('/delivery/getstatecodefromdeliverytableonbook', {\n            params: {\n              data:temprowdataonbooking\n            }\n          })\n          .then((res) => {\n            const data = res.data;\n            for (var i =0; i< data.length; i++){\n              if (data[i].state_code === 29){\n                api.put('/jointables/updatekarnatakagstratesdeliverytableonbook', {\n                  params: {\n                    data:temprowdataonbooking\n                  }\n                })\n                api.put('/jointables/updatefinalamountdeliverytableonbook', {\n                  params: {\n                    data:temprowdataonbooking\n                  }\n                })\n                api.put('/jointables/updatebalanceamountdeliverytableonbook',{\n                  params:{\n                    data:temprowdataonbooking\n                  }\n                })\n                api.put('/jointables/updatepaymentstatusdeliverytableonbook',{\n                  params:{\n                    data:temprowdataonbooking\n                  }\n                })\n            }\n            else {\n              api.put('/jointables/updateotherstatesgstratesdeliverytableonbook', {\n                params: {\n                  data:temprowdataonbooking\n                }\n              })\n              api.put('/jointables/updatefinalamountdeliverytableonbook', {\n                params: {\n                  data:temprowdataonbooking\n                }\n              })\n              api.put('/jointables/updatebalanceamountdeliverytableonbook',{\n                params:{\n                  data:temprowdataonbooking\n                }\n              })\n              api.put('/jointables/updatepaymentstatusdeliverytableonbook',{\n                params:{\n                  data:temprowdataonbooking\n                }\n              })\n          }\n            }\n          })\n        }\n    },[temprowdataonbooking])\n    useEffect(() => {\n        displaycustomerfollowupevent();\n    }, [])\n    const fetchalldatafromcust = (currentCustomerReferenceNo) => {\n      api.post('/delivery/getalldataofcustomer', {\n        params: {\n          currentCustomerReferenceNo\n        }\n      })\n      .then((res) => {\n        settemprowdataonbooking(res.data);\n      })\n    }\n    const fetchupdateddatafromcust = (currentCustomerReferenceNo) => {\n      api.post('/delivery/getalldataofcustomer', {\n        params: {\n          currentCustomerReferenceNo\n        }\n      })\n      .then((res) => {\n        setrowdataonbooking(res.data);\n      })\n    }\n    const displaycustomerfollowupevent = () => {\n      api.get('/customer/displayCustomerFollowUpData', {})\n        .then((res) => {\n          const data = res.data;\n          const tempdata = [...new Set(data.map((e) => e.customer_reference_no))];\n          const tabledata = tempdata.map((temp) => {\n              let filterByTempData = data.filter(dataObject => dataObject.customer_reference_no === temp)\n              var fixedstrings = filterByTempData[0];\n              let displayString = filterByTempData.map((x) => {\n                  return x.product + '-' + x.quantity + '(Nos)'\n              })\n              return {\n                  ...fixedstrings,\n                  displayDetails: displayString\n              }\n          })\n          setCustomertable(tabledata);\n        })\n    }\n    const modalviewchange = () => {\n        setChangedmodalview(\"addcustomerform\");\n    }\n    let finalCustomerRefNo = '';\n    const generateCustomerReferenceNo = () => {\n        let s1 = \"CUST2022\";\n        let min = 0;\n        let max = 1000;\n        let random = Math.floor(Math.random() * (max - min + 1)) + min;\n        finalCustomerRefNo = s1 + random;\n    }\n    generateCustomerReferenceNo();\n    let finalcurrentdate = \"\";\n    const currentDate = () => {\n        let date = new Date();\n        finalcurrentdate = moment(date).format('YYYY-MM-DD');\n    }\n    currentDate();\n    useEffect(() => {\n        if (searchData === \"\") {\n            displaycustomerfollowupevent();\n        }\n    }, [searchData])\n    const goEventClicked = () => {\n      api.post('/customer/getCustomerFollowUpData', {\n        params: {\n          searchData\n        }\n      }\n      )\n        .then((res) => {\n          const custdata = res.data;\n          const tempdata = [...new Set(custdata.map((e) => e.customer_reference_no))];\n          const tabledata = tempdata.map((temp) => {\n              let filterByTempData = custdata.filter(dataObject => dataObject.customer_reference_no === temp)\n              var fixedstrings = filterByTempData[0];\n              let displayString = filterByTempData.map((x) => {\n                  return x.product + '-' + x.quantity + '(Nos)'\n              })\n              return {\n                  ...fixedstrings,\n                  displayDetails: displayString\n              }\n          })\n          setCustomertable(tabledata)\n        })\n    }\n    const onHandleChangeEvent = (event) => {\n        setSearchData(event.target.value);\n    }\n    return (\n      <div>\n        <div>\n          <HeaderWithLogout/>\n        </div>\n        <div className=\"addcustpagecontainer\">\n          <div className=\"addcustpagesubcontainer\">\n            <div className=\"pageheading\">\n                Manage Customer Data\n            </div>\n            <CustomizedSearchBar\n                onHandleChangeEvent={onHandleChangeEvent}\n                goEventClicked={goEventClicked}\n                labelname=\"phone number/ customer name\"\n                Btnname=\"search\"\n            />\n            <div className=\"modalandback\">\n              <CustomizedBtn \n              BtnName=\"Add Customer\"\n              onClick={()=>{\n                setModalview(\"addcustomerform\");\n                openevent(true);\n              }}\n              />\n                  <OpenModal\n                    api={api}\n                    modalview={modalview}\n                    displaycustomerfollowupevent={displaycustomerfollowupevent}\n                    open={open}\n                    openevent={openevent}\n                    purchasestatus={purchasestatus}\n                    currentCustomerReferenceNo={currentCustomerReferenceNo}\n                    setpurchasemsgevent={setpurchasemsgevent}\n                />\n                  <p onClick={() => { navigate('/main') }}><ArrowBackIcon /></p>\n            </div>\n            <div className='table-responsive tableContainer'>\n              <p>\n                  {purchasemsg\n                      ? <p>{purchasemsg}</p>\n                      : <></>\n                  }\n              </p>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Enquiry Date</th>\n                            <th>Customer Name</th>\n                            <th>Customer Address</th>\n                            <th>Phone Number</th>\n                            <th>Phone Number Alter one</th>\n                            <th>Phone Number Alter two</th>\n                            <th>Enquired Product And Details</th>\n                            <th>Comments</th>\n                            <th>Follow Up Call </th>\n                            <th>Final Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            customertable && customertable.length\n                                ? customertable.map((data, i) => (\n                                    <tr key={i}>\n                                        <td>{data.customer_reference_no}</td>\n                                        <td>\n                                            {\n                                                data.booked_date != null ?\n                                                moment(data.booked_date).format('YYYY-MM-DD'):\n                                                data.booked_date\n                                            }\n                                        </td>\n                                        <td>{data.customer_name}</td>\n                                        <td>{data.customer_address}</td>\n                                        <td>{data.phone_number}</td>\n                                        <td>{data.phone_number_alter_one}</td>\n                                        <td>{data.phone_number_alter_two}</td>\n                                        <td>\n                                            <ul>\n                                                {\n                                                    data.displayDetails\n                                                        ?\n                                                        data.displayDetails.map((d) => (\n                                                            <li>{d}</li>\n                                                        ))\n                                                        : <></>\n                                                }\n                                            </ul>\n                                        </td>\n                                        <td>{data.comments}</td>\n                                        <td>{\n                                            data.follow_up_call != null ?\n                                            moment(data.follow_up_call).format('YYYY-MM-DD'):\n                                                data.follow_up_call\n                                        }\n                                        </td>\n                                        <td>{data.final_status}</td>\n                                        <td>\n                                          {data.final_status == \"Booked\"\n                                          ? <CustomizedBtn \n                                          BtnName=\"View\"\n                                          onClick={()=>{\n                                            setModalview(\"customerdetailsform\");\n                                            currentCustomerRefNo(data.customer_reference_no);\n                                            fetchpurchasestatusevent(data.customer_reference_no);\n                                            openevent(true);\n                                          }}\n                                          />\n                                          :\n                                          <CustomizedBtn \n                                            BtnName=\"Book Order\"\n                                            onClick={()=>{\n                                              currentCustomerRefNo(data.customer_reference_no);\n                                              fetchalldatafromcust(data.customer_reference_no);\n                                              fetchupdateddatafromcust(data.customer_reference_no);\n                                              setModalview(\"customerdetailsform\");\n                                              openevent(true);\n                                            }}\n                                            />\n                                          }\n                                        </td>\n                                    </tr>\n                                ))\n                                : <tr>\n                                    <td colSpan={12}>No Record!</td>\n                                  </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n            </div>\n        </div>\n        </div>\n    );\n}\nexport default AddCustomerPage;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/GenerateInvoice/GenerateInvoice.js",["660"],[],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport CustomerInvoice from '../../components/organisms/CustomerInvoice/CustomerInvoice';\nimport DealersInvoice from '../../components/organisms/DealersInvoice/DealersInvoice';\nimport { useNavigate } from 'react-router-dom';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport '../../style/style.css';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  let navigate = useNavigate();\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\nconst GenerateInvoice = ({\n  modalview,\n  api\n}) => {\n  const [value, setValue] = React.useState(0);\n  const [searchData, setSearchData] = useState('');\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const style = {\n    color: 'black'\n  }\n  const onHandleChangeEvent = (event) => {\n    setSearchData(event.target.value);\n  }\n  let navigate = useNavigate();\n  return (\n    <div>\n      <div>\n        <HeaderWithLogout />\n      </div>\n      <div className=\"reportcontainer\">\n        <div className=\"pageheading\">\n          Generate Invoices\n        </div>\n        <div className=\"backarrow generateinvoicebackarrow\">\n          <p onClick={() => { navigate('/main') }}><ArrowBackIcon /></p>\n        </div>\n        <Box sx={{ width: '100%', color: 'white' }}>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n              <Tab style={style} label=\"Customer Invoice\" {...a11yProps(0)} />\n              <Tab style={style} label=\"Dealers Invoice\" {...a11yProps(1)} />\n            </Tabs>\n          </Box>\n          <TabPanel value={value} index={0}>\n            <div>\n              <CustomerInvoice\n                api={api}\n                onHandleChangeEvent={onHandleChangeEvent}\n                searchData={searchData}\n                modalview={modalview}\n              />\n            </div>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <div>\n              <DealersInvoice\n                api={api}\n                onHandleChangeEvent={onHandleChangeEvent}\n                searchData={searchData}\n              />\n            </div>\n          </TabPanel>\n        </Box>\n      </div>\n    </div>\n  );\n}\nexport default GenerateInvoice;\n\n","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/GenerateReport/GenerateReport.js",["661","662","663","664","665","666"],[],"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport TextAndSelect from '../../components/molecules/TextAndSelect/TextAndSelect';\nimport DisplayCustomerTable from '../../components/molecules/DisplayCustomerTable/DisplayCustomerTable';\nimport DisplayDeliveryReportsTable from '../../components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable';\nimport DisplayProductDetailsTable from '../../components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable';\nimport DisplayDealersDetailsTable from '../../components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable';\nimport DownloadCustomer from '../../components/molecules/Download/DownloadCustomer';\nimport DownloadDelivery from '../../components/molecules/Download/DownloadDelivery';\nimport { useNavigate } from 'react-router-dom';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport '../../style/style.css';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  let navigate = useNavigate();\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\nconst GenerateReport = ({\n  modalview,\n  api\n}) => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const style = {\n    color: 'black'\n  }\n\n  const [statusselect, setstatusselect] = React.useState(['Booked', 'Cancelled', 'Follow Up In Progress']);\n  const [deliverystatus, setDeliverystatus] = React.useState(['Delivered', 'Not Delivered', 'Cancelled']);\n  const [paymentstatus, setpaymentstatus] = React.useState(['Paid', 'Pending']);\n  const [productstatus, setProductstatus] = React.useState(['Available', 'Not Available'])\n  const [gstinstatus, setGstinstatus] = React.useState(['Active', 'In Active']);\n  const [currentstatus, setCurrentstatus] = React.useState('');\n  const [currentstatusAlter, setCurrentstatusAlter] = React.useState('');\n  const [tabledata, setTabledata] = React.useState({});\n  const setTableDataEvent = (e) => {\n    setTabledata(e);\n  }\n  const currentStatusEvent = (e) => {\n    setCurrentstatus(e);\n  }\n  const currentPaymentStatusEvent = (e) => {\n    setCurrentstatusAlter(e)\n  }\n  let navigate = useNavigate();\n  return (\n    <div>\n      <div>\n        <HeaderWithLogout />\n      </div>\n      <div className=\"reportcontainer\">\n        <div className=\"pageheading\">\n          Generate Report\n        </div>\n        <div className=\"backarrow generatereportbackarrow\">\n          <p onClick={() => { navigate('/main') }}><ArrowBackIcon /></p>\n        </div>\n        <Box sx={{ width: '100%', color: 'white' }}>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n              <Tab style={style} label=\"Delivery Reports\" {...a11yProps(0)} />\n              <Tab style={style} label=\"Customer Follow Up Report\" {...a11yProps(1)} />\n              <Tab style={style} label=\"Product Details Report\" {...a11yProps(2)} />\n              <Tab style={style} label=\"Dealers Details Report\" {...a11yProps(3)} />\n            </Tabs>\n          </Box>\n          <TabPanel value={value} index={0}>\n            <div className='tabpanelheader'>\n              <DownloadDelivery\n                setTableDataEvent={setTableDataEvent}\n              />\n              <div classname=\"paymentdeliveryfiltercontainer\">\n                <TextAndSelect\n                  currentStatusEvent={currentPaymentStatusEvent}\n                  statusselect={paymentstatus}\n                  selectlabelname=\"Payment status\"\n                />\n                <TextAndSelect\n                  currentStatusEvent={currentStatusEvent}\n                  statusselect={deliverystatus}\n                  selectlabelname=\"Delivery status\"\n                />\n              </div>\n            </div>\n            <DisplayDeliveryReportsTable\n              api={api}\n              setTableDataEvent={setTableDataEvent}\n              tabledata={tabledata}\n              modalview={modalview}\n              deliverystatus={currentstatus}\n              paymentstatus={currentstatusAlter}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <div className='tabpanelheader'>\n              <DownloadCustomer\n                setTableDataEvent={setTableDataEvent}\n              />\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={statusselect}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayCustomerTable\n              api={api}\n              setTableDataEvent={setTableDataEvent}\n              modalview={modalview}\n              tabledata={tabledata}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <div className='tabpanelheader'>\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={productstatus}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayProductDetailsTable\n              api={api}\n              modalview={modalview}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={3}>\n            <div className='tabpanelheader'>\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={gstinstatus}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayDealersDetailsTable\n              api={api}\n              modalview={modalview}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n        </Box>\n      </div>\n    </div>\n  );\n}\nexport default GenerateReport;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/Header/Header.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedLogOutIcon/CustomizedLogOutIcon.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedLogo/CustomizedLogo.js",["667"],[],"import React from 'react';\nimport logo from '../../../images/logo.png';\nimport '../../../style/style.css';\n\nconst CustomizedLogo = ({\n    onClick\n}) => {\n    return(\n        <div className='imagecontainer'>\n            <img src={logo} onClick={onClick} />\n        </div>\n    );\n}\nexport default CustomizedLogo;\n","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/Footer/Footer.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/TextAndTextInput/TextAndTextInput.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedText/CustomizedText.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedTextInput/CustomizedTextInput.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCard/CustomizedCard.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedSearchBar/CustomizedSearchBar.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedBtn/CustomizedBtn.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/OpenModal/OpenModal.js",["668"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport InvoiceFormat from '../InvoiceFormat/InvoiceFormat';\nimport AddCustomersForm from '../AddCustomersForm/AddCustomersForm';\nimport AddFewCustomersForm from '../AddFewCustomersForm/AddFewCustomersForm';\nimport CustomerInvoiceForm from '../CustomerInvoiceForm/CustomerInvoiceForm';\nimport DealersInvoiceForm from '../DealersInvoiceForm/DealersInvoiceForm';\nimport DealersDetailsForm from '../DealersDetailsForm/DealersDetailsForm';\nimport ProductsDetailsForm from '../ProductsDetailsForm/ProductsDetailsForm';\nimport DeliveryDetailsForm from '../DeliveryDetailsForm/DeliveryDetailsForm';\nimport AddProductForm from '../AddProductForm/AddProductForm';\nimport AddDealersForm from '../AddDealersForm/AddDealersForm';\nimport CustomerFollowUpForm from '../CustomerFollowUpForm/CustomerFollowUpForm';\nimport DealersInvoiceFormGenerate from '../../molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate';\nimport DealersInvoicesListForm from '../../molecules/DealersInvoicesListForm/DealersInvoicesListForm';\nimport EditDealersReportForm from '../../molecules/EditDealersReportForm/EditDealersReportForm';\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 900,\n  height: 700,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  overflow: \"scroll\"\n};\nconst OpenModal = ({\n  api,\n  displayDealersDetailsData,\n  displayProductDetailsData,\n  displayDeliveryReportsData,\n  invoiceFormData,\n  modalbuttonname,\n  modalview,\n  rowdata,\n  currentCustomerReferenceNo,\n  displayCustomerFollowUpData,\n  displaycustomerfollowupevent,\n  custrefno,\n  openinvoiceevent,\n  invoiceno,\n  formdisplaydata,\n  dealersdata,\n  deliveryinvoices,\n  fetchdealersdatatoverify,\n  changeevent,\n  verificationstatus,\n  currentInvoiceno,\n  purchasestatus,\n  open,\n  openevent,\n  currentCustomerReferenceNoCustomerInvoice,\n  setpurchasemsgevent\n}) => {\n  const handleClose = () => {\n    openevent(false);\n    if (modalview === 'productdetailsform') {\n      displayProductDetailsData();\n    }\n    else if (modalview === 'deliverydetailsform') {\n      displayDeliveryReportsData();\n    }\n    else if (modalview === 'editdealersreport') {\n      displayDealersDetailsData();\n    }\n    else if (modalview === 'addproductform') {\n      displayProductDetailsData();\n    }\n    else if (modalview === 'adddealersform') {\n      displayDealersDetailsData();\n    }\n    else if (modalview === 'customerfollowupform') {\n      displayCustomerFollowUpData();\n    }\n    else if (modalview === 'customerdetailsform') {\n      displaycustomerfollowupevent();\n    }\n    else if (modalview === 'addcustomerform') {\n      displaycustomerfollowupevent();\n    }\n  };\n  return (\n    <div>\n      <div className='modalbutton'>\n      </div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {\n              modalview === 'invoiceformat' &&\n              <InvoiceFormat\n                api={api}\n                invoiceFormData={invoiceFormData}\n                invoiceno={invoiceno}\n              />\n            }\n            {\n              modalview === 'customerdetailsform' &&\n              <AddCustomersForm\n                setpurchasemsgevent={setpurchasemsgevent}\n                api={api}\n                purchasestatus={purchasestatus}\n                handleClose={handleClose}\n                displayCustomerFollowUpData={displayCustomerFollowUpData}\n                currentCustomerReferenceNo={currentCustomerReferenceNo}\n                displaycustomerfollowupevent={displaycustomerfollowupevent}\n              />\n            }\n            {\n              modalview === 'addcustomerform' &&\n              <AddFewCustomersForm\n                api={api}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'customerInvoiceForm' &&\n              <CustomerInvoiceForm\n                api={api}\n                invoiceFormData={invoiceFormData}\n                custrefno={custrefno}\n                currentCustomerReferenceNoCustomerInvoice={currentCustomerReferenceNoCustomerInvoice}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'DealersInvoiceForm' &&\n              <DealersInvoiceForm\n                api={api}\n                dealersdata={dealersdata}\n                invoiceFormData={invoiceFormData}\n                handleClose={handleClose}\n                formdisplaydata={formdisplaydata}\n              />\n            }\n            {\n              modalview === 'generatecustomerinvoiceform' &&\n              <InvoiceFormat\n                api={api}\n                invoiceFormData={invoiceFormData}\n                custrefno={custrefno}\n                openinvoiceevent={openinvoiceevent}\n              />\n            }\n\n            {\n              modalview === 'DealersInvoiceFormGenerateFormat' &&\n              <DealersInvoiceFormGenerate\n                api={api}\n                modalview={modalview}\n                invoiceFormData={invoiceFormData}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n              />\n            }\n            {\n              modalview === \"DealersInvoicesListForm\" &&\n              <DealersInvoicesListForm\n                api={api}\n                deliveryinvoices={deliveryinvoices}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === \"dealersdetailsform\" &&\n              <DealersDetailsForm\n                api={api}\n                currentInvoiceno={currentInvoiceno}\n                verificationstatus={verificationstatus}\n                changeevent={changeevent}\n                handleClose={handleClose}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n              />\n            }\n            {\n              modalview === 'deliverydetailsform' &&\n              <DeliveryDetailsForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'customerfollowupform' &&\n              <CustomerFollowUpForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'productdetailsform' &&\n              <ProductsDetailsForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'editdealersreport' &&\n              <EditDealersReportForm\n                rowdata={rowdata}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'adddealersform' &&\n              <AddDealersForm\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'addproductform' &&\n              <AddProductForm\n                handleClose={handleClose}\n              />\n            }\n          </Typography>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\nexport default OpenModal;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/InvoiceFormat/InvoiceFormat.js",["669","670"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from \"../../atoms/CustomizedPrint/CustomizedPrint\";\nimport { ToWords } from 'to-words';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst InvoiceFormat = ({\n    invoiceFormData\n}) => {\n    const [constantinvoicedata, setconstantinvoicedata] = useState();\n    const [totalamount, settotalamount] = useState();\n    const [totalinwords, settotalinwords] = useState();\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n    const toWords = new ToWords();\n    useEffect(() => {\n        if (invoiceFormData) {\n            const tempdata = [...new Set(invoiceFormData.map((e) => e.customer_reference_no))];\n            tempdata.map((temp) => {\n                let filterByTempData = invoiceFormData.filter(dataObject => dataObject.customer_reference_no === temp)\n                var fixedstrings = filterByTempData[0];\n                setconstantinvoicedata(fixedstrings);\n                let temptotal = 0;\n                invoiceFormData.map((data) => temptotal = temptotal + data.final_amount);\n                settotalamount(temptotal);\n                let words = toWords.convert(temptotal);\n                settotalinwords(words);\n            })\n        }\n    }, [invoiceFormData])\n    return (\n        <div className=\"invoiceformatcontainer\">\n            <div className=\"invoiceheader\">\n                <div><CustomizedPrint\n                    onClick={handlePrint}\n                />\n                </div>\n            </div>\n            <div className=\"table-responsive\" id=\"tableprint\" >\n                {\n                    constantinvoicedata\n                        ?\n                        <div ref={componentRef}>\n                            <table className=\"tbl\">\n                                <thead>\n                                    <tr>\n                                        <th colspan=\"6\" scope=\"col\">\n                                            <div className=\"theaddiv\">\n                                                <h6>TAX INVOICE</h6>\n                                                <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n                                                <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,Opp Anna Building,Hosur Main Road Bangalore-560099,Mobile: 9035757145/9902880851/9141070705</p>\n                                                <p>Email ID:shreeparamananda@gmail.com</p>\n                                                <p>GSTIN/UIN:29AYSPB6397D1ZX,{constantinvoicedata.state} State Code:{constantinvoicedata.state_code}</p>\n                                            </div>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td rowSpan=\"3\">Buyer:</td>\n                                        <td rowSpan=\"3\">{constantinvoicedata.customer_address}\n                                        </td>\n                                        <td colspan=\"3\">Invoice No:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.invoice_no}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\">Date of supply:-</td>\n                                        <td colspan=\"7\">\n                                            {constantinvoicedata.delivery_date != null ?\n                                             moment(constantinvoicedata.delivery_date).format('YYYY-MM-DD'):\n                                             constantinvoicedata.delivery_date\n                                            }\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\">PO no:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.po_number}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>GSTIN/UIN:</td>\n                                        <td>{constantinvoicedata.gst}</td>\n                                        <td colspan=\"3\">Vehicle No:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.vehicle_number}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>State Code:</td>\n                                        <td>{constantinvoicedata.state_code}</td>\n                                        <td colspan=\"3\">Pan Number:</td>\n                                        <td colspan=\"7\">pan 567jkhasdfkj67rt8</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Place of supply : </td>\n                                        <td colspan=\"11\">{constantinvoicedata.state}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Contact NO :</td>\n                                        <td colspan=\"2\">{constantinvoicedata.phone_number} </td>\n                                        <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                        <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Sl</td>\n                                        <td>Discription of Product</td>\n                                        <td>HSN CODE</td>\n                                        <td>Qty</td>\n                                        <td>Rate</td>\n                                        <td>Amount</td>\n                                        <td>CGST</td>\n                                        <td>SGST</td>\n                                        <td>IGST</td>\n                                        <td>Discount</td>\n                                    </tr>\n                                    {\n                                        invoiceFormData && invoiceFormData.length &&\n                                        invoiceFormData.map((d, index) => (\n                                            <tr>\n                                                <td >{index + 1}</td>\n                                                <td >{d.product}</td>\n                                                <td >{d.product_hsn_code}</td>\n                                                <td >{d.quantity}</td>\n                                                <td >{d.rate/d.quantity}</td>\n                                                <td >{d.rate}</td>\n                                                <td >{d.cgst}</td>\n                                                <td >{d.sgst}</td>\n                                                <td >{d.igst}</td>\n                                                <td >{d.discount}</td>\n                                            </tr>\n                                        ))\n                                    }\n                                    <tr>\n                                        <td colspan=\"3\">Total</td>\n                                        <td colspan=\"7\">{totalamount}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\" rowSpan=\"5\">\n                                            Terms &Conditions :\n                                            <ol>\n                                                <li>Payment only by DD/CHQ,In faver of Shree Paramananda Enterprises</li>\n                                                <li>In Case of Cash payment contact the above phone number Before Making Payment</li>\n                                                <li>Goods once sold Cannot return Back</li>\n                                            </ol>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">Round off:</td>\n                                        <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">TOTAL:</td>\n                                        <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">Final Payble Amount :- </td>\n                                        <td colSpan=\"3\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"1\">Amount in Words: </td>\n                                        <td colSpan=\"6\">Rupees {totalinwords} Only</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"3\">Received The goods in good condition </td>\n                                        <td colSpan=\"7\">certified that the particulars given above are true and correct For Shree Paramananda Enterprises</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"3\">Receivers Signature: </td>\n                                        <td colSpan=\"7\">Authorised Signatory:</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        : <></>\n                }\n            </div>\n        </div>\n    );\n}\nexport default InvoiceFormat;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedPrint/CustomizedPrint.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddCustomersForm/AddCustomersForm.js",["671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport CustomizedBtn from '../../atoms/CustomizedBtn/CustomizedBtn';\nimport { purchasesuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from \"../../atoms/CustomizedPrint/CustomizedPrint\";\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport '../../../style/style.css';\n\nconst AddCustomersForm = ({\n    currentCustomerReferenceNo,\n    handleClose,\n    displaycustomerfollowupevent,\n    purchasestatus,\n    api,\n    setpurchasemsgevent\n}) => {\n    const [rowdatadisplayed, setRowdatadisplayed] = useState();\n    const [paymentstatus, setpaymentstatus] = useState([\"paid\", \"pending\"]);\n    const [bookeddate, setbookeddate] = useState('');\n    const [productdata, setproductdata] = useState({});\n    const [finalpurchasestatus, setfinalpurchasestatus] = useState();\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n    useEffect(() => {\n        if (purchasestatus) {\n            setfinalpurchasestatus(purchasestatus[0].purchase_status);\n        }\n    }, [purchasestatus])\n    const selectevent = (event, index) => {\n        let updateRowDataByIndex = [...rowdatadisplayed];\n        rowdatadisplayed.find((item, i) => {\n            if (item.delivery_id === index) {\n                updateRowDataByIndex[i][\"payment_status\"] = event.target.innerHTML;\n                setRowdatadisplayed(() => [...updateRowDataByIndex]);\n            }\n        })\n    }\n    const bookeddateevent = () => {\n        let newDate = new Date()\n        let date = newDate.getDate();\n        let month = newDate.getMonth() + 1;\n        let year = newDate.getFullYear();\n        let finaldate = year + \"-\" + month + \"-\" + date;\n        setbookeddate(finaldate);\n    }\n    const [updaterowdata, setUpdaterowdata] = useState();\n    useEffect(() => {\n        bookeddateevent();\n    }, [])\n    useEffect(() => {\n        fetchalldatafromcust();\n    }, [])\n    const fetchalldatafromcust = () => {\n        api.post('/delivery/getalldataofcustomer', {\n            params: {\n                currentCustomerReferenceNo\n            }\n        })\n            .then((res) => {\n                const data = res.data;\n                setRowdatadisplayed(data);\n                setUpdaterowdata(data[0]);\n            })\n    }\n    useEffect(() => {\n        if (updaterowdata && updaterowdata.product_hsn_code) {\n            api.post('/product/displayProductDetailsDatabasedonproducthsn', {\n                params: {\n                    product_hsn_code: updaterowdata.product_hsn_code\n                }\n            })\n                .then((res) => {\n                    const data = res.data;\n                    setproductdata(data);\n                })\n        }\n    }, [updaterowdata]);\n    const submiteventclicked = () => {\n        api.put('/customer/updatefinalstatuscustomertable', {\n            params: {\n                final_status: \"Booked\",\n                customer_reference_no: currentCustomerReferenceNo\n            }\n        })\n            .then((res) => {\n                displaycustomerfollowupevent();\n            })\n        api.put('/delivery/updatepurchasestatusofdeliverytable', {\n            params: {\n                customer_reference_no: currentCustomerReferenceNo\n            }\n        })\n            .then((res) => {\n                displaycustomerfollowupevent();\n            })\n        api.put('/delivery/updateDeliveryData', {\n            params: {\n                rowdatadisplayed: rowdatadisplayed\n            }\n        })\n            .then((res) => {\n            })\n        api.put('/delivery/updaterateofdelivery', {\n            params: {\n                rowdatadisplayed: rowdatadisplayed\n            }\n        })\n            .then((res) => {\n            })\n        api.post('/delivery/getstatecodefromdelivery', {\n            params: {\n                rowdatadisplayed: rowdatadisplayed\n            }\n        })\n            .then((res) => {\n                const data = res.data;\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i].state_code === 29) {\n                        api.put('/jointables/updatekarnatakagstrates', {\n                            params: {\n                                customer_reference_no: data[i].customer_reference_no,\n                                product_hsn_code: data[i].product_hsn_code\n                            }\n                        })\n                            .then((res) => {\n                            })\n                        api.put('/jointables/updatefinalamountdelivery', {\n                            params: {\n                                rowdatadisplayed: rowdatadisplayed\n                            }\n                        })\n                            .then((res) => {\n                            })\n                        api.put('/delivery/updatebalanceamountdelivery', {\n                            params: {\n                                rowdatadisplayed: rowdatadisplayed\n                            }\n                        })\n                            .then((res) => {\n                                if (res) {\n                                    setpurchasemsgevent(\"Order Placed Successfully\");\n                                    // alert(res.msg);\n                                    // const res = purchasesuccessmsg({});\n                                    handleClose();\n                                }\n                            })\n                    }\n                    else {\n                        api.put('/delivery/updateotherstatesgstrates', {\n                            params: {\n                                customer_reference_no: data[i].customer_reference_no,\n                                product_hsn_code: data[i].product_hsn_code\n                            }\n                        })\n                            .then((res) => {\n                            })\n                        api.put('/jointables/updatefinalamountdelivery', {\n                            params: {\n                                rowdatadisplayed: rowdatadisplayed\n                            }\n                        })\n                            .then((res) => {\n                            })\n                        api.put('/delivery/updatebalanceamountdelivery', {\n                            params: {\n                                rowdatadisplayed: rowdatadisplayed\n                            }\n                        })\n                            .then((res) => {\n                                if (res) {\n                                    setpurchasemsgevent(\"Order Placed Successfully\");\n                                    // const res = purchasesuccessmsg({});\n                                    // alert(res.msg);\n                                    handleClose();\n                                }\n                            })\n                    }\n                }\n            })\n    }\n    const changeevent = (event, index) => {\n        let updateRowDataByIndex = [...rowdatadisplayed];\n        rowdatadisplayed.find((item, i) => {\n            if (item.delivery_id === index) {\n                updateRowDataByIndex[i][event.target.name] = event.target.value;\n                setRowdatadisplayed(() => [...updateRowDataByIndex]);\n            }\n        })\n    }\n    return (\n        <div>\n            <div>\n                <CustomizedPrint\n                    onClick={handlePrint}\n                />\n            </div>\n            <div ref={componentRef}>\n                <div className=\"formheading\">\n                    <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n                    <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,\n                        Opp Anna\n                        Building,Hosur Main Road Bangalore-560099,\n                        <br></br>Mobile: 9035757145/9902880851/9141070705</p>\n                </div>\n                <div className=\"pageheading\">\n                    Purchase Order\n                </div>\n                {\n                    rowdatadisplayed && rowdatadisplayed.length &&\n                    rowdatadisplayed.map((data, i) => (\n                        <form className=\"formcontainer\">\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Customer Reference Number:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={currentCustomerReferenceNo}\n                                            type=\"text\"\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Booked date:\n                                    </div>\n                                    <div>\n                                        <SelectDate\n                                            type=\"booked_date\"\n                                            typeOne=\"booked_date\"\n                                            incomingdate={\n                                                data.booked_date != null\n                                                    ? data.booked_date = data.booked_date\n                                                    : data.booked_date = data.booked_date\n                                            }\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Requested delivery date:\n                                    </div>\n                                    <div>\n                                        <SelectDate\n                                            typeOne=\"requested_delivery_date\"\n                                            onHandleChangeEvent={(event) => changeevent(event, data.delivery_id)}\n                                            incomingdate={\n                                                data.requested_delivery_date != null\n                                                    ? data.requested_delivery_date = data.requested_delivery_date\n                                                    : data.requested_delivery_date = data.requested_delivery_date\n                                            }\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Customer Address:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={data.customer_address}\n                                            name=\"customer_address\"\n                                            type=\"text\"\n                                            onChange={(event) => changeevent(event, data.delivery_id)}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        State:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            defaultValue={data.state}\n                                            type=\"text\"\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Phone number:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"phone_number\"\n                                            defaultValue={data.phone_number}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product hsn code:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            defaultValue={data.product_hsn_code}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.product}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Quantity:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"quantity\"\n                                            defaultValue={data.quantity}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Product Rate:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.rate}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Discount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.discount}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                      Rate After Extended Discount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"extended_discount\"\n                                            onChange={(event) => changeevent(event, data.delivery_id)}\n                                            defaultValue={data.extended_discount}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        CGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.cgst}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        SGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.sgst}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        IGST:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.igst}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Rate:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.rate}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Final amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.final_amount}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Balance amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            defaultValue={data.balance_amount}\n                                            readOnly\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Payment status:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={data.payment_status}\n                                            readOnly\n                                        />\n                                    </div> \n                                </label>\n                            </div>\n                            <div className=\"nameandinputcontainer\">\n                                <label className=\"formdatalabelstyle\">\n                                    <div className=\"formnamestyle\">\n                                        Booking advance amount:\n                                    </div>\n                                    <div className=\"formdatainputstyle\">\n                                        <input\n                                            type=\"number\"\n                                            name=\"booking_advance_amount\"\n                                            defaultValue={data.booking_advance_amount}\n                                            onChange={(event) => changeevent(event, data.delivery_id)}\n                                        />\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"divider\"></div>\n                        </form>\n                    ))\n                }\n            </div>\n            {\n                finalpurchasestatus == 1\n                    ? <p className=\"verificationstyle\">Purchase completed!</p>\n                    : <div className=\"submitcontainee\">\n                        <CustomizedBtn\n                            BtnName=\"submit\"\n                            onClick={submiteventclicked}\n                        />\n                    </div>\n            }\n        </div>\n    )\n}\nexport default AddCustomersForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/organisms/SuccessMsg/SuccessMsg.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDatepicker/SelectDate.js",["687","688"],[],"import React, {useState, useEffect } from 'react';\nimport moment from 'moment';\n\nconst SelectDate = ({\n    incomingdate,\n    typeOne,\n    onHandleChangeEvent,\n    disable,\n    selectevent\n}) => {\n    const [date, setDate] = useState();\n    const [defaultvalue, setdefaultvalue] = useState();\n    useEffect(()=>{\n        const resultDate=moment(incomingdate).format('YYYY-MM-DD');\n        setdefaultvalue(resultDate);\n      },[incomingdate]);\n    const handleChange = (e) =>{\n        setdefaultvalue(e.target.value);\n        selectevent(e.target.value);\n    }\n    return(\n        <div>\n            {\n                disable ?\n                    <input \n                        value={defaultvalue}\n                        type=\"date\" \n                        disabled\n                    />\n                    :\n                    <input \n                        value={defaultvalue}\n                        type=\"date\"\n                        onChange={(e)=>{handleChange(e)}}\n                    />\n            }\n            \n        </div>\n    );\n}\nexport default SelectDate;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCombobox/CustomizedComboboxAll.js",["689","690"],[],"import React, {useEffect, useState} from 'react';\nimport TextField from '@mui/material/TextField';\nimport Select from 'react-select';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport '../../../style/style.css';\n\nconst CustomizedComboboxAll = ({\n  comboboxdata,\n  onChange,\n  dvalue,\n  selectevent\n}) => {\n  const [status, setstatus] = useState();\n  const [defaultvalue, setdefaultvalue] = useState();\n  useEffect(()=>{\n    setdefaultvalue({value:dvalue, label:dvalue})\n  },[dvalue])\n  useEffect(()=>{\n    let ds = comboboxdata.map((data)=>{\n      return {value:data, label:data}\n    })\n    setstatus(ds);\n  },[comboboxdata, dvalue])\n  const handleChange = e => {\n    setdefaultvalue(e);\n    selectevent(e);\n  }\n  return (\n    <div className='comboboxselectstyle'>\n    <Select\n      placeholder=\"Select Option\"\n      value={defaultvalue}\n      options={status} // set list of the data\n      onChange={handleChange} // assign onChange function\n  />\n  </div>\n  );\n}\nexport default CustomizedComboboxAll;",[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddFewCustomersForm/AddFewCustomersForm.js",["691","692","693","694","695","696","697","698","699","700","701","702","703","704"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport { customeraddedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxForState from '../../atoms/CustomizedCombobox/CustomizedComboboxForState';\nimport CustomizedComboboxMultipleSelect from '../../atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect';\nimport '../../../style/style.css';\n\nconst AddFewCustomersForm = ({\n  handleClose,\n  api\n}) => {\n  const [customerdata, setcustomerdata] = useState(\n    {\n      customerReferenceNo: \"\",\n      enquiryDate: \"\",\n      customerName: \"\",\n      customerAddress: \"\",\n      statename: { value: 29, label: 'Karnataka' },\n      phoneno: \"\",\n      phonenoalterone: \"\",\n      phonenoaltertwo: \"\",\n      finalStatus: \"\",\n\n\n\n      \n      phone_number: \"\",\n      phone_number_alter_one: \"\",\n      phone_number_alter_two: \"\",\n      product_hsn_code: \"\",\n      product: \"\",\n      quantity: \"\",\n      customer_name: \"\"\n    }\n  );\n  const [comboboxdata, setComboboxdata] = useState([]);\n  const [productname, setProductname] = useState(\"\");\n  const [producthsn, setProducthsn] = useState();\n  const [state, setstate] = useState([]);\n  const [products, setproducts] = useState([]);\n  const [statecode, setstatecode] = useState(\"\");\n  const [producthsncodeonly, setproducthsncodeonly] = useState();\n  const [productnameonly, setproductnameonly] = useState();\n  const [productquantityonly, setproductquantityonly] = useState();\n  useEffect(() => {\n    api.get('/stateandstatecodes/getstateandstatecodes', {})\n      .then((res) => {\n        setstate(res.data);\n      })\n  }, [])\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let finalpreInvoiceNo = '';\n  const generatePreInvoiceNo = () => {\n    let s1 = 'p';\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalpreInvoiceNo = s1 + \"2022\" + random;\n  }\n  generatePreInvoiceNo();\n  let finalcurrentdate = \"\";\n  const currentDate = () => {\n    let date = new Date();\n    finalcurrentdate = moment(date).format('YYYY-MM-DD');\n  }\n  useEffect(() => {\n    api.get('product/displayProductDetailsDataforcombobox', {})\n      .then((res) => {\n        setComboboxdata(res.data);\n      })\n  }, [])\n  currentDate();\n  useEffect(() => {\n    api.post('stateandstatecodes/fetchstatecode', {\n      params:{\n        statename: customerdata != undefined ? customerdata.statename : null\n      }\n\n      // params: {\n      //   statename: customerdata != undefined ? customerdata.statename.value : null\n      // }\n    })\n      .then((res) => {\n        setstatecode(res.data);\n      })\n  }, [customerdata])\n  const submiteventclicked = () => {\n    api.post('/customer/addCustomerFollowUpData',\n      {\n        params: {\n          customerReferenceNo: finalCustomerRefNo,\n          enquiryDate: finalcurrentdate,\n          customerName: customerdata.customer_name,\n          customerAddress: customerdata.customer_address,\n          statename: customerdata.statename,\n          phoneno: customerdata.phone_number,\n          phonenoalterone: customerdata.phone_number_alter_one,\n          phonenoaltertwo: customerdata.phone_number_alter_two,\n          finalStatus: 'Follow up in progress'\n        }\n      })\n      .then((res) => {\n      })\n    api.post('delivery/addDeliveryData', {\n      params: {\n        customerReferenceNo: finalCustomerRefNo,\n        customerAddress: customerdata.customer_address,\n        statename: customerdata.statename,\n        phone_number: customerdata.phone_number,\n        phone_number_alter_one: customerdata.phone_number_alter_one,\n        phone_number_alter_two: customerdata.phone_number_alter_two,\n        product_hsn_code: producthsncodeonly,\n        product: productnameonly,\n        quantity: productquantityonly,\n        customer_name: customerdata.customer_name\n      }\n    })\n      .then((res) => {\n        if (res) {\n          const res = customeraddedsuccessmsg({})\n          alert(res.msg);\n          handleClose();\n        }\n      })\n      api.put('product/updateProductsDetailsProductData',{\n        params:products\n      })\n  }\n  const selectevent = (e) => {\n    setProductname(e.target.outerText);\n  }\n  const selecteventforstate = (e) => {\n    setcustomerdata({ ...customerdata, \"statename\": e })\n  }\n  const selectedproducts = (e) => {\n    let selectedproducts = e.map((data) => {\n      return { productname: data, quantity: 1 }\n    })\n    setproducts(selectedproducts);\n  }\n  useEffect(() => {\n    if (products != null) {\n      let s = \"\";\n      let tempproductname = [];\n      let tempproductquantity = [];\n      products.map((data) => {\n        tempproductname.push(data.productname);\n        tempproductquantity.push(data.quantity);\n        s += data.productname + \",\";\n      })\n      setproductnameonly(tempproductname);\n      setproductquantityonly(tempproductquantity);\n      api.post('product/fetchproducthsnfromproductdetails', {\n        params: {\n          product_name: s\n        }\n      })\n        .then((res) => {\n          setProducthsn(res.data);\n        })\n    }\n  }, [products])\n  useEffect(() => {\n    let temparray = [];\n    if (producthsn != null) {\n      producthsn.map((data) => {\n        temparray.push(data.product_hsn_code)\n      })\n    }\n    setproducthsncodeonly(temparray);\n  }, [producthsn])\n  const incrementclicked = (data) => {\n    var productstock;\n    api.post('product/getquantitybasedonproductname',{\n        params:data\n    })\n    .then((res)=>{\n        productstock = res.data\n        productstock.map((d)=>{\n            var stock = d.stock;\n            let selectedproductdetails = products.map((product) => {\n                if (product.productname == data.productname) {\n                    if (stock >product.quantity){\n                        product.quantity += 1;\n                    }\n                    else{\n                        alert(`only ${stock} stocks available`);\n                    }\n                }\n                return product;\n              });\n              setproducts(selectedproductdetails);\n        })\n    })\n\n  }\n  const decrementclicked = (data) => {\n    let selectedproductdetails = products.map((product) => {\n      if (product.productname == data.productname) {\n        if (product.quantity >= 2) {\n          product.quantity -= 1;\n        }\n      }\n      return product;\n    });\n    setproducts(selectedproductdetails);\n  }\n  const changeevent = (event) => {\n    setcustomerdata({ ...customerdata, [event.target.name]: event.target.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Add New Customer\n      </div>\n      <React.Fragment>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_address\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              State:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxForState\n                comboboxdata={state}\n                // type=\"state\"\n                selectevent={selecteventforstate}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Ph no:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Ph no (Alter - 1):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Ph no (Alter - 2):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxMultipleSelect\n                comboboxdata={comboboxdata}\n                selectedproducts={selectedproducts}\n              />\n            </div>\n          </label>\n        </div>\n        <div>\n          <div className=\"selectedproductheading\">Selected products:-\n            <ul>\n              {products && products.length &&\n                products.map((data, i) => (\n                  <li key={i} className=\"productnamedesign\">\n                    <div>{data.productname}</div>\n                    <div className=\"incrementdecrement\">\n                      <CustomizedBtn BtnName=\"+\" onClick={() => { incrementclicked(data) }} />\n                      {data.quantity}\n                      <CustomizedBtn BtnName=\"-\" onClick={() => { decrementclicked(data) }} />\n                    </div>\n                  </li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </React.Fragment>\n    </div>\n  )\n}\nexport default AddFewCustomersForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCombobox/CustomizedComboboxForState.js",["705","706","707","708"],[],"import React, {useEffect, useState} from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport Select from 'react-select';\n\nconst CustomizedCombobox = ({\n  comboboxdata,\n  selectevent\n}) => {\n  const [statedata, setstatedata] = useState();\n  const [defaultvalue, setdefaultvalue] = useState();\n  useEffect(()=>{\n    let temp = comboboxdata.map((d)=>{\n      return {value:d.statecode, label:d.statename}\n    })\n    setstatedata(temp);\n  },[comboboxdata])\n  useEffect(()=>{\n    setdefaultvalue({label: 'Karnataka', value: 29})\n  },[comboboxdata])\n  const handleChange = e => {\n    setdefaultvalue(e);\n    selectevent(e);\n  }\n  return (\n    <div className='comboboxselectstyle'>\n      <Select\n        placeholder=\"Select Option\"\n        value={defaultvalue}\n        options={statedata} // set list of the data\n        onChange={handleChange} // assign onChange function\n    />\n  </div>\n    // <Autocomplete\n    //   onChange={selectevent}\n    //   id=\"highlights-demo\"\n    //   sx={{ width: 300 }}\n    //   options={comboboxdata}\n    //   getOptionLabel={(option) => option.statename}\n    //   renderInput={(params) => (\n    //     <TextField {...params} margin=\"normal\" />\n    //   )}\n    //   renderOption={(props, option, { inputValue }) => {\n    //     const matches = match(option.statename, inputValue);\n    //     const parts = parse(option.statename, matches);\n\n    //     return (\n    //       <li {...props}>\n    //         <div>\n    //           {parts.map((part, index) => (\n    //             <span\n    //               key={index}\n    //               style={{\n    //                 fontWeight: part.highlight ? 700 : 400,\n    //               }}\n    //             >\n    //               {part.text}\n    //             </span>\n    //           ))}\n    //         </div>\n    //       </li>\n    //     );\n    //   }}\n    // />\n  );\n}\nexport default CustomizedCombobox;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect.js",["709"],[],"import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(name, productName, theme) {\n  return {\n    fontWeight:\n      productName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nconst CustomizedComboboxMultipleSelect = ({\n  comboboxdata,\n  selectedproducts\n}) => {\n  const theme = useTheme();\n  const [productName, setProductName] = React.useState([]);\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setProductName(\n      typeof value === 'string' ? value.split(',') : value,\n    );\n    selectedproducts(\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <Select\n          labelId=\"demo-multiple-name-label\"\n          id=\"demo-multiple-name\"\n          multiple\n          value={productName}\n          onChange={handleChange}\n          input={<OutlinedInput />}\n          MenuProps={MenuProps}\n        >\n          {comboboxdata.map((name) => (\n            <MenuItem\n              key={name.product_name}\n              value={name.product_name}\n              style={getStyles(name, productName, theme)}\n            >\n              {name.product_name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default CustomizedComboboxMultipleSelect;\n","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/organisms/CustomerInvoice/CustomerInvoice.js",["710","711","712","713","714","715","716","717"],[],"import React, { useState, useEffect } from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst CustomerInvoice = ({\n    searchData,\n    onHandleChangeEvent,\n    api\n}) => {\n    const [customertable, setCustomertable] = useState([]);\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [currentinvoiceno, setcurrentinvoiceno] = useState();\n    const [currentCustomerReferenceNoCustomerInvoice, setcurrentCustomerReferenceNoCustomerInvoice] = useState();\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(() => {\n        displayBookedCustomeerDataEvent();\n    }, [])\n    const displayBookedCustomeerDataEvent = () => {\n        api.post('customer/displayBookedCustomeerData', {\n            params:{\n                final_status: 'Booked'\n            }\n        })\n        .then((res)=>{\n            setCustomertable(res.data);\n        })\n    }\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const modalviewchange = () => {\n        setChangedmodalview(\"generatecustomerinvoiceform\");\n    }\n    const openCustomerInvoiceEvent = (customer_reference_no, product_hsn_code) => {\n        api.post('delivery/getDeliveryDataForVerification', {\n            params:{\n                customer_reference_no: customer_reference_no,\n                    product_hsn_code:product_hsn_code\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n        }\n    const openinvoiceevent = (customer_reference_no) => {\n        api.post('delivery/getDeliveryReportData',{\n            params:{\n                customer_reference_no\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n        }\n    \n    const [customerrefno, setcustomerrefno] = useState();\n    useEffect(()=>{\n        invoiceFormData.map((data)=>{\n            setcustomerrefno(data.customer_reference_no);\n            setcurrentinvoiceno(data.invoice_no);\n        })\n    },[invoiceFormData])\n    const goEventClicked = () => {\n        api.post('jointables/getCustomerFollowUpDataBooked', {\n            params:{\n                phoneno: searchData,\n                customer_name: searchData,\n                phone_number_alter_one:searchData,\n                phone_number_alter_two:searchData\n            }\n        })\n        .then((res)=>{\n            setCustomertable(res.data);\n        })\n    }\n    useEffect(() => {\n        if (searchData === \"\") {\n            displayBookedCustomeerDataEvent();\n        }\n    }, [searchData])\n    return (\n        <div className=\"generateinvoicecontainer\">\n            <CustomizedSearchBar\n                onHandleChangeEvent={onHandleChangeEvent}\n                goEventClicked={goEventClicked}\n                labelname=\"phone number/ customer name\"\n                Btnname=\"search\"\n            />\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                invoiceFormData={invoiceFormData}\n                openinvoiceevent={openinvoiceevent}\n                currentCustomerReferenceNoCustomerInvoice={currentCustomerReferenceNoCustomerInvoice}\n            />\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Enquiry Date</th>\n                            <th>Customer Name</th>\n                            <th>Customer Address</th>\n                            <th>Phone Number</th>\n                            <th>Phone Number Alter - 1</th>\n                            <th>Phone Number Alter - 2</th>\n                            <th>Enquired Product Hsn Code</th>\n                            <th>Enquired Product</th>\n                            <th>Quantity</th>\n                            <th>Comments</th>\n                            <th>Follow Up Call </th>\n                            <th>Final Status</th>\n                            <th>Action</th>\n                            <th>Generate</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            customertable && customertable.length \n                            ? \n                            customertable.map((data, i) => (\n                                data.from_dealer == 1 \n                                ? <></>\n                                :  <tr key={i}>\n                                <td>{data.customer_reference_no}</td>\n                                <td>{\n                                    data.enquiry_date != null ?\n                                    moment(data.enquiry_date).format('YYYY-MM-DD'):\n                                    data.enquiry_date\n                                }\n                                </td>\n                                <td>{data.customer_name}</td>\n                                <td>{data.customer_address}</td>\n                                <td>{data.phone_number}</td>\n                                <td>{data.phone_number_alter_one}</td>\n                                <td>{data.phone_number_alter_two}</td>\n                                <td>{data.product_hsn_code}</td>\n                                <td>{data.product}</td>\n                                <td>{data.quantity}</td>\n                                <td>{data.comments}</td>\n                                <td>{\n                                    data.follow_up_call != null ?\n                                    moment(data.follow_up_call).format('YYYY-MM-DD'):\n                                    data.follow_up_call \n                                }\n                                </td>\n                                <td>{data.final_status}</td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"Verify Invoice\"\n                                        onClick={()=>{\n                                            setcurrentCustomerReferenceNoCustomerInvoice(data.customer_reference_no);\n                                            openCustomerInvoiceEvent(data.customer_reference_no, data.product_hsn_code);\n                                            setModalview(\"customerInvoiceForm\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                </td>\n                                <td>\n                                <CustomizedBtn \n                                        BtnName=\"Generate Invoice\"\n                                        onClick={()=>{\n                                            openinvoiceevent(data.customer_reference_no);\n                                            setModalview(\"generatecustomerinvoiceform\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                \n                                    \n                                </td>\n                                </tr>\n                              ))\n                              : <tr>\n                                <td colspan=\"15\">No Record!</td>\n                              </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default CustomerInvoice;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/organisms/DealersInvoice/DealersInvoice.js",["718","719","720"],[],"import React,{useState, useEffect} from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport '../../../style/style.css';\n\nconst DealersInvoice = ({\n    searchData,\n    onHandleChangeEvent,\n    api\n}) => {\n    const [dealersDetails, setdealersDetails] = useState({});\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    const displayDealersDetailsDatawithstatusactiveevent = () =>{\n        api.get('dealers/displayDealersDetailsDatawithstatusactive')\n        .then((res)=>{\n            setdealersDetails(res.data);\n        })\n    }\n    useEffect(()=>{\n        displayDealersDetailsDatawithstatusactiveevent();\n    },[])\n    const openinvoiceevent = (gstin_number) => {\n        api.post('dealers/getdealersfromgst',{\n            params:{\n                gstin_Number:gstin_number\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n    }\n    const fetchdeliverydatamatchinggstevent = (gstin_number) => {\n        api.post('delivery/fetchdeliverymatchinggstno',{\n            params:{\n                gst:gstin_number\n            }\n        })\n        .then((res)=>{\n            if(res.data && res.data.length == 0){\n                res.data.push(\n                    {'state':''})\n            }\n            setInvoiceFormData(res.data);\n        })\n    }\n    useEffect(() => {\n        if (searchData === \"\") {\n            displayDealersDetailsDatawithstatusactiveevent();\n        }\n    }, [searchData])\n    const goEventClicked = () => {\n        api.post('dealers/getDealersDetailsData',{\n            params:{\n                searchData\n            }\n        })\n        .then((res)=>{\n            setdealersDetails(res.data);\n        })\n    }\n    const [dealersdata,setdealersdata] = useState();\n    const dealersdataevent = (e) => {\n        setdealersdata(e)\n    };\n    const [deliveryinvoices, setdeliveryinvoices] = useState();\n    const fetchinvoicesfromdelivery = (e) => {\n        api.post('delivery/fetchinvoicesfromdelivery', {\n            params:{\n                gst:e\n            }\n        })\n        .then((res)=>{\n            setdeliveryinvoices(res.data);\n        })\n    }\n    return(\n        <div className=\"generateinvoicecontainer\">\n            <OpenModal \n                api={api}\n                open={open}\n                openevent={openevent}\n                dealersdata={dealersdata}\n                modalview={modalview}\n                invoiceFormData={invoiceFormData} \n                deliveryinvoices={deliveryinvoices}\n            />\n            <CustomizedSearchBar \n                onHandleChangeEvent={onHandleChangeEvent}\n                goEventClicked={goEventClicked}\n                labelname=\"phone number/ name\" \n                Btnname=\"Search\"\n            />\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>GSTIN Number</th>\n                            <th>Enterprise Name</th>\n                            <th>Enterprise Address</th>\n                            <th>Enterprise State</th>\n                            <th>Proprietor Name</th>\n                            <th>Proprietor Phone Number</th>\n                            <th>GST Status</th>\n                            <th>Action</th>\n                            <th>Generate</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        dealersDetails && dealersDetails.length \n                        ? dealersDetails.map((data, i)=>(\n                            <tr key={i}>\n                                <td>{data.gstin_number}</td>\n                                <td>{data.enterprise_name}</td>\n                                <td>{data.enterprise_address}</td>\n                                <td>{data.enterprise_state}</td>\n                                <td>{data.proprietor_name}</td>\n                                <td>{data.proprietor_phone_number}</td>\n                                <td>{data.gstin_status}</td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"Generate Invoice\"\n                                        onClick={()=>{\n                                            dealersdataevent(data);\n                                            openinvoiceevent(data.gstin_number);\n                                            fetchdeliverydatamatchinggstevent(data.gstin_number);\n                                            setModalview(\"DealersInvoiceForm\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                </td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"View Invoice\"\n                                        onClick={()=>{\n                                            dealersdataevent(data);\n                                            openinvoiceevent(data.gstin_number);\n                                            fetchdeliverydatamatchinggstevent(data.gstin_number);\n                                            setModalview(\"DealersInvoicesListForm\");\n                                            fetchinvoicesfromdelivery(data.gstin_number);\n                                            openevent(true);\n                                        }}\n                                    />\n                                </td>\n                            </tr>\n                        ))\n                        : \n                            <tr>\n                                <td colspan=\"15\">No Record!</td>\n                            </tr>\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoice;",[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/CustomerInvoiceForm/CustomerInvoiceForm.js",["721","722","723","724","725","726","727","728","729","730","731","732","733","734","735"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { invoicedataverificationsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport '../../../style/style.css';\n\nconst CustomerInvoiceForm = ({\n    handleClose,\n    invoiceFormData,\n    api,\n    currentCustomerReferenceNoCustomerInvoice\n}) => {\n    const [listofinvoices, setlistofinvoices] = useState([]);\n    const [finalinvoicenumber, setfinalinvoicenumber] = useState('');\n    const [updaterowdata, setUpdaterowdata] = useState();\n    const [rowdatadisplayed, setRowdatadisplayed] = useState();\n    useEffect(() => {\n        api.get('delivery/fetchinvoicesfromdeliverytable')\n            .then((res) => {\n                setlistofinvoices(res.data);\n            })\n    }, [])\n    useEffect(() => {\n        fetchalldatafromcust();\n    }, [])\n    const fetchalldatafromcust = () => {\n        api.post('/delivery/getalldataofcustomer', {\n            params: {\n                currentCustomerReferenceNoCustomerInvoice\n            }\n        })\n            .then((res) => {\n                const data = res.data;\n                setRowdatadisplayed(data);\n            })\n    }\n    useEffect(() => {\n        var numbers = [];\n        var maximum = Math.max(...numbers);\n        var newmaximum = maximum + 1;\n        if (newmaximum.toString().length === 4) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + newmaximum);\n        }\n        else if (newmaximum.toString().length === 3) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + \"0\" + newmaximum);\n        }\n        else if (newmaximum.toString().length === 2) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + \"00\" + newmaximum);\n        }\n        else if (newmaximum.toString().length === 1) {\n            setfinalinvoicenumber(\"22-2023\" + \"/\" + \"000\" + newmaximum);\n        }\n    }, [listofinvoices])\n    const submiteventclicked = (customer_reference_no) => {\n        let date = new Date();\n        var date1 = date.toISOString();\n        var date2 = date1.split(\"-\");\n        var month = Number(date2[1]);\n        var year = Number(date2[0]);\n        var yearstring = \"\";\n        if(month >= 4 && month <= 12){\n            var y1 = year;\n            var y2 =year+1; \n            yearstring = y1+\"-\"+y2;\n        }\n        if(month>=1 && month <= 3){\n            var y1 = year;\n            var y2 = year-1;\n            yearstring = y2+\"-\"+y1;\n        }\n        let finalInvoiceNo = '';\n        let s1 = \"In\"+yearstring+\"/\";\n        let min = 0;\n        let max = 1000;\n        let random = Math.floor(Math.random() * (max - min + 1)) + min;\n        let notostring = random.toString();\n        let size = notostring.length;\n        if (size === 4) {\n            finalInvoiceNo = s1 + random;\n        }\n        else if (size === 3) {\n            finalInvoiceNo = s1 + \"0\" + random;\n        }\n        else if (size === 2) {\n            finalInvoiceNo = s1 + \"00\" + random;\n        }\n        else if (size === 1) {\n            finalInvoiceNo = s1 + \"000\" + random;\n        }\n        api.put('delivery/updateDeliveryDataafterverify', {\n            params: {\n                invoice_no: finalInvoiceNo,\n                customer_reference_no: customer_reference_no,\n                po_number: rowdatadisplayed[0].po_number,\n                vehicle_no: rowdatadisplayed[0].vehicle_number,\n                pan_number: rowdatadisplayed[0].pan_number,\n                place_of_supply: rowdatadisplayed[0].place_of_supply\n            }\n        })\n            .then((res) => {\n                if (res) {\n                    const res = invoicedataverificationsuccessmsg({});\n                    alert(res.msg);\n                    handleClose();\n                }\n            })\n    }\n    const changeevent = (event, index) => {\n        let updateRowDataByIndex = [...rowdatadisplayed];\n        rowdatadisplayed.find((item, i) => {\n            if (item.delivery_id === index) {\n                updateRowDataByIndex[i][event.target.name] = event.target.value;\n                setRowdatadisplayed(() => [...updateRowDataByIndex]);\n            }\n        })\n    }\n    return (\n        <div>\n            <div className=\"pageheading\">\n                verify invoice and submit\n            </div>\n            {\n                invoiceFormData && invoiceFormData.length &&\n                invoiceFormData.map((data, i) => (\n                    <form className=\"formcontainer\">\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Buyer:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.customer_address}\n                                        type=\"text\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    State code:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.state}\n                                        type=\"text\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Place of supply:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.place_of_supply}\n                                        type=\"text\"\n                                        onChange={(event) => changeevent(event, data.delivery_id)}\n                                        index={i}\n                                        name=\"place_of_supply\"\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Invoice No:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.invoice_no}\n                                        type=\"text\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Date of supply:\n                                </div>\n                                <div>\n                                    <SelectDate\n                                        type=\"delivery_date\"\n                                        typeOne=\"delivery_date\"\n                                        onHandleChangeEvent={(event) => changeevent(event, data.delivery_id)}\n                                        incomingdate={\n                                            data.delivery_date != null\n                                                ? data.delivery_date \n                                                : data.delivery_date\n                                        }\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    PO no:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        onChange={(event) => changeevent(event, data.delivery_id)}\n                                        index={i}\n                                        defaultValue={data.po_number}\n                                        type=\"text\"\n                                        name=\"po_number\"\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Vehicle No:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        onChange={(event) => changeevent(event, data.delivery_id)}\n                                        index={i}\n                                        defaultValue={data.vehicle_number}\n                                        type=\"text\"\n                                        name=\"vehicle_number\"\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Contact Number - 1:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.phone_number}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Contact Number - 2:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.phone_number_alter_one}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Contact Number - 3:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.phone_number_alter_two}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Discription of Product:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.product}\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Product HSN Code:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.product_hsn_code}\n                                        type=\"text\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Quantity:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.quantity}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Rate:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.rate}\n                                        type=\"text\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Amount:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Total:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    CGST:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.cgst}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    SGST:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.sgst}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    IGST:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.igst}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    Round off:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        <div className=\"nameandinputcontainer\">\n                            <label className=\"formdatalabelstyle\">\n                                <div className=\"formnamestyle\">\n                                    TOTAL:\n                                </div>\n                                <div className=\"formdatainputstyle\">\n                                    <input\n                                        defaultValue={data.final_amount}\n                                        type=\"number\"\n                                        readOnly\n                                    />\n                                </div>\n                            </label>\n                        </div>\n                        {\n                            data.verification_status\n                                ? <p className=\"verificationstyle\">Invoice Data Verification Completed!</p>\n                                :\n                                <div className=\"submitcontainee\">\n                                    <CustomizedBtn\n                                        BtnName=\"submit\"\n                                        onClick={() => {\n                                            submiteventclicked(data.customer_reference_no)\n                                        }}\n                                    />\n                                </div>\n                        }\n                    </form>\n                ))\n            }\n\n        </div>\n    )\n}\nexport default CustomerInvoiceForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersInvoiceForm/DealersInvoiceForm.js",["736","737","738","739","740","741"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport CustomizedComboboxMultipleSelect from '../../atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect';\nimport CustomizedComboboxForState from '../../atoms/CustomizedCombobox/CustomizedComboboxForState';\nimport { generateinvoicesuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport '../../../style/style.css';\nconst DealersInvoiceForm = ({\n  dealersdata,\n  handleClose,\n  api\n}) => {\n  const [comboboxdata, setComboboxdata] = useState([]);\n  const [products, setproducts] = useState({\n    productname: '',\n    quantity: \"\",\n    product_status: \"\"\n  });\n  const [state, setstate] = useState([]);\n  const [selectedstate, setselectedstate] = useState();\n  const [changeddata, setchangeddata] = useState();\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let finalInvoiceNo = '';\n  const generateInvoiceNo = () => {\n    let s1 = \"In22-2023/\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    let notostring = random.toString();\n    let size = notostring.length;\n    if (size === 4) {\n      finalInvoiceNo = s1 + random;\n    }\n    else if (size === 3) {\n      finalInvoiceNo = s1 + \"0\" + random;\n    }\n    else if (size === 2) {\n      finalInvoiceNo = s1 + \"00\" + random;\n    }\n    else if (size === 1) {\n      finalInvoiceNo = s1 + \"000\" + random;\n    }\n  }\n  generateInvoiceNo();\n  useEffect(() => {\n    api.get('stateandstatecodes/getstateandstatecodes')\n      .then((res) => {\n        setstate(res.data);\n      })\n  }, [])\n  const submiteventclicked = () => {\n    api.post('product/fetchallproductdetails', {\n      params: {\n        productsdata: products\n      }\n    })\n      .then((res) => {\n        var data = res.data;\n        let prod = products.map((d) => {\n          let temp = data.find(a => a.product_name == d.productname)\n          return { ...d, ...temp }\n        })\n        let selectedstatecode = \"\";\n        state.map((d) => {\n          if (d.statename === selectedstate) {\n            selectedstatecode = d.statecode;\n          }\n        })\n        api.post('customer/insertdealerscustomertable', {\n          params: {\n            customer_reference_no: finalCustomerRefNo,\n            dealersdata: dealersdata,\n            state: selectedstate,\n            changed_data: changeddata\n          }\n        })\n          .then((res) => {\n          })\n        api.post('dealers/insertdealersdataintodeliverytable', {\n          params: {\n            customer_reference_no: finalCustomerRefNo,\n            invoice_no: finalInvoiceNo,\n            dealersdata: dealersdata,\n            productsdata: prod,\n            state: selectedstate,\n            state_code: selectedstatecode,\n            changed_data: changeddata\n          }\n        })\n          .then((res) => {\n            if (res) {\n              const res = generateinvoicesuccessmsg({})\n              alert(res.msg);\n              handleClose();\n            }\n          })\n      })\n      api.put('product/updateProductsDetailsProductData',{\n        params:products\n      })\n  }\n  const incrementclicked = (data) => {\n    let selectedproductdetails = products.map((product) => {\n      if (product.productname == data.productname) {\n        product.quantity += 1;\n      }\n      return product;\n    });\n    setproducts(selectedproductdetails);\n  }\n  const decrementclicked = (data) => {\n    let selectedproductdetails = products.map((product) => {\n      if (product.productname == data.productname) {\n        product.quantity -= 1;\n      }\n      return product;\n    });\n    setproducts(selectedproductdetails);\n  }\n  const selectedproducts = (e) => {\n    let selectedproducts = e.map((data) => {\n      return { productname: data, quantity: 1 }\n    })\n    setproducts(selectedproducts);\n  }\n  useEffect(() => {\n    api.get('product/displayProductDetailsDataforcombobox')\n      .then((res) => {\n        setComboboxdata(res.data);\n      })\n  }, [])\n  const selecteventforstate = (e) => {\n    setselectedstate(e.target.outerText);\n  }\n  const changeevent = (e) => {\n    setchangeddata({ ...changeddata, [e.target.name]: e.target.value });\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Generate Invoice\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              GSTIN Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.gstin_number}\n                readOnly\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.enterprise_name}\n                readOnly\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.enterprise_address}\n                readOnly\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Proprietor Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.proprietor_phone_number}\n                readOnly\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxMultipleSelect\n                comboboxdata={comboboxdata}\n                selectedproducts={selectedproducts}\n              />\n            </div>\n          </label>\n        </div>\n        <div>\n          <p>Selected products:-\n            <ul>\n              {products && products.length &&\n                products.map((data) => (\n                  <li className=\"productnamedesign\">\n                    <div>{data.productname}</div>\n                    <div className=\"incrementdecrement\">\n                      <CustomizedBtn BtnName=\"+\" onClick={() => { incrementclicked(data) }} />\n                      {data.quantity}\n                      <CustomizedBtn BtnName=\"-\" onClick={() => { decrementclicked(data) }} />\n                    </div>\n                  </li>\n                ))\n              }\n            </ul>\n          </p>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              PO Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"po_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        {/* <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Pan Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"pan_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div> */}\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Vehicle Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"vehicle_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Place of Supply:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"place_of_supply\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              State:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxForState\n                className=\"select\"\n                comboboxdata={state}\n                type=\"state\"\n                selectevent={selecteventforstate}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone number (Alter-1):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone number (Alter-2):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default DealersInvoiceForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedReadOnlyTextInput/CustomizedReadOnlyTextInput.js",[],[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate.js",["742","743","744","745"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from \"../../atoms/CustomizedPrint/CustomizedPrint\";\nimport CustomizedDownload from \"../../atoms/CustomizedDownload/CustomizedDownload\";\nimport { CSVLink } from \"react-csv\";\nimport { ToWords } from 'to-words';\nimport axios from 'axios';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst DealersInvoiceFormGenerate = ({\n    invoiceFormData,\n    modalview,\n    custrefno,\n    invoiceno,\n    fetchdealersdatatoverify\n}) => {\n    const [listofinvoices, setlistofinvoices] = useState([]);\n    const [tabledata, setTabledata] = React.useState({});\n    const componentRef = useRef();\n    const [constantinvoicedata, setconstantinvoicedata] = useState();\n    const [totalamount, settotalamount] = useState();\n    const [totalinwords, settotalinwords] = useState();\n    const toWords = new ToWords();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n    useEffect(() => {\n        if (fetchdealersdatatoverify) {\n            const tempdata = [...new Set(fetchdealersdatatoverify.map((e) => e.customer_reference_no))];\n            tempdata.map((temp) => {\n                let filterByTempData = fetchdealersdatatoverify.filter(dataObject => dataObject.customer_reference_no === temp)\n                var fixedstrings = filterByTempData[0];\n                setconstantinvoicedata(fixedstrings);\n                let temptotal = 0;\n                fetchdealersdatatoverify.map((data) => temptotal = temptotal + data.final_amount);\n                settotalamount(temptotal);\n                let words = toWords.convert(temptotal);\n                settotalinwords(words);\n            })\n        }\n    }, [fetchdealersdatatoverify])\n    useEffect(() => {\n        axios.get('http://localhost:3000/delivery/fetchinvoicesfromdeliverytable')\n            .then((res) => {\n                setlistofinvoices(res.data);\n            })\n    }, [])\n    useEffect(() => {\n        axios.post('http://localhost:3000/jointables/downloadinvoicedisplayedastable', {\n            params: {\n                invoice_no: invoiceno,\n                customer_reference_no: custrefno\n            }\n        })\n            .then((res) => {\n                setTabledata(res.data);\n            })\n    }, [])\n    const headers = [\n        { label: 'customer reference no', key: 'customer_reference_no' },\n        { label: 'booked date', key: 'booked_date' },\n        { label: 'requested delivery date', key: 'requested_delivery_date' },\n        { label: 'delivery date', key: 'delivery_date' },\n        { label: 'invoice no', key: 'invoice_no' },\n        { label: 'customer address', key: 'customer_address' },\n        { label: 'gst', key: 'gst' },\n        { label: 'phone number', key: 'phone_number' },\n        { label: 'product hsn code', key: 'product_hsn_code' },\n        { label: 'product', key: 'product' },\n        { label: 'quantity', key: 'quantity' },\n        { label: 'rate', key: 'rate' },\n        { label: 'discount', key: 'discount' },\n        { label: 'cgst', key: 'cgst' },\n        { label: 'sgst', key: 'sgst' },\n        { label: 'igst', key: 'igst' },\n        { label: 'final amount', key: 'final_amount' },\n        { label: 'balance amount', key: 'balance_amount' },\n        { label: 'payment status', key: 'payment_status' },\n        { label: 'booking advance amount', key: 'booking_advance_amount' },\n        { label: 'delivery status', key: 'delivery_status' },\n        { label: 'customer name', key: 'customer_name' },\n    ];\n    const csvReport = {\n        filename: 'DeliveryReports.csv',\n        headers: headers,\n        data: tabledata\n    }\n    return (\n        <div className=\"invoiceformatcontainer\">\n            <div className=\"invoiceheader\">\n                <div><CustomizedPrint\n                    onClick={handlePrint}\n                />\n                </div>\n                <div>\n                    {\n                        tabledata && tabledata.length ?\n                            <CSVLink {...csvReport}><CustomizedDownload /></CSVLink> : null\n                    }\n                </div>\n            </div>\n            <div className=\"table-responsive\" id=\"tableprint\">\n                {\n                    constantinvoicedata\n                        ?\n                        <table className=\"tbl\" ref={componentRef}>\n                            <thead>\n                                <tr>\n                                    <th colspan=\"6\" scope=\"col\">\n                                        <div className=\"theaddiv\">\n                                            <h6>TAX INVOICE</h6>\n                                            <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n                                            <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,Opp Anna Building,Hosur Main Road Bangalore-560099,Mobile: 9035757145/9902880851/9141070705</p>\n                                            <p>Email ID:shreeparamananda@gmail.com</p>\n                                            <p>GSTIN/UIN:29AYSPB6397D1ZX ,Karnataka State Code:29</p>\n                                        </div>\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td rowSpan=\"3\">Buyer:</td>\n                                    <td rowSpan=\"3\">{constantinvoicedata.customer_address}\n                                    </td>\n                                    <td colspan=\"3\">Invoice No:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.invoice_no}</td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\">Date of supply:-</td>\n                                    <td colspan=\"7\">\n                                        {\n                                        constantinvoicedata.delivery_date != null ?\n                                        moment(constantinvoicedata.delivery_date).format('YYYY-MM-DD'):\n                                        constantinvoicedata.delivery_date\n                                        }\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\">PO no:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.po_number}</td>\n                                </tr>\n                                <tr>\n                                    <td>GSTIN/UIN:</td>\n                                    <td>{constantinvoicedata.gst}</td>\n                                    <td colspan=\"3\">Vehicle No:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.vehicle_number}</td>\n                                </tr>\n                                <tr>\n                                    <td>State Code:</td>\n                                    <td>{constantinvoicedata.state}</td>\n                                    <td colspan=\"3\">Pan Number:</td>\n                                    <td colspan=\"7\">pan 567jkhasdfkj67rt8</td>\n                                </tr>\n                                <tr>\n                                    <td>Place of supply : </td>\n                                    <td colspan=\"11\">{constantinvoicedata.state}</td>\n                                </tr>\n                                <tr>\n                                    <td>Contact NO :</td>\n                                    <td colspan=\"2\">{constantinvoicedata.phone_number} </td>\n                                    <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                    <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                </tr>\n                                <tr>\n                                    <td>Sl</td>\n                                    <td>Discription of Product</td>\n                                    <td>HSN CODE</td>\n                                    <td>Qty</td>\n                                    <td>Rate</td>\n                                    <td>Amount</td>\n                                    <td>CGST</td>\n                                    <td>SGST</td>\n                                    <td>IGST</td>\n                                    <td>Discount</td>\n                                </tr>\n                                {\n                                    fetchdealersdatatoverify && fetchdealersdatatoverify.length &&\n                                    fetchdealersdatatoverify.map((d) => (\n                                        <tr>\n                                            <td >1</td>\n                                            <td >{d.product}</td>\n                                            <td >{d.product_hsn_code}</td>\n                                            <td >{d.quantity}</td>\n                                            <td >{d.rate/d.quantity}</td>\n                                            <td >{d.rate}</td>\n                                            <td >{d.cgst}</td>\n                                            <td >{d.sgst}</td>\n                                            <td >{d.igst}</td>\n                                            <td >{d.discount}</td>\n                                        </tr>\n                                    ))\n                                }\n                                <tr>\n                                    <td colspan=\"3\">Total</td>\n                                    <td colspan=\"7\">{totalamount}</td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\" rowSpan=\"5\">\n                                        Terms &Conditions :\n                                        <ol>\n                                            <li>Payment only by DD/CHQ,In faver of Shree Paramananda Enterprises</li>\n                                            <li>In Case of Cash payment contact the above phone number Before Making Payment</li>\n                                            <li>Goods once sold Cannot return Back</li>\n                                        </ol>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">Round off:</td>\n                                    <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">TOTAL:</td>\n                                    <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">Final Payble Amount :- </td>\n                                    <td colSpan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"1\">Amount in Words: </td>\n                                    <td colSpan=\"6\">Rupees {totalinwords} Only</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"3\">Received The goods in good condition </td>\n                                    <td colSpan=\"7\">certified that the particulars given above are true and correct For Shree Paramananda Enterprises</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"3\">Receivers Signature: </td>\n                                    <td colSpan=\"7\">Authorised Signatory:</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        : <></>\n                }\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoiceFormGenerate;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDownload/CustomizedDownload.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/TextAndSelect/TextAndSelect.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedSelect/CustomizedSelect.js",["746"],[],"import * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport '../../../style/style.css';\n\nconst CustomizedSelect = ({statusselect,selectlabelname,currentStatusEvent})=> {\n  const [age, setAge] = React.useState('');\n  const [finalstatus, setFinalstatus] = React.useState();\n  const handleChange = (event) => {\n    setAge(event.target.value);\n    setFinalstatus(event.target.value);\n  };\n  React.useEffect(()=>{\n    currentStatusEvent(finalstatus);\n  },[finalstatus])\n  return (\n    <div className='customizedselectcontainer'>\n      <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"demo-simple-select-standard-label\">{selectlabelname}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-standard-label\"\n          id=\"demo-simple-select-standard\"\n          value={age}\n          onChange={handleChange}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {\n            statusselect && statusselect.length &&\n            statusselect.map((data)=>(\n            <MenuItem \n              value={data}  \n              onChange={handleChange}\n            >{data}</MenuItem>\n            ))\n          }\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\nexport default CustomizedSelect;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayCustomerTable/DisplayCustomerTable.js",["747","748","749"],[],"import React, { useEffect, useState } from 'react';\nimport CustomizedSearchBar from '../../atoms/CustomizedSearchBar/CustomizedSearchBar';\nimport CustomizedDownload from '../../atoms/CustomizedDownload/CustomizedDownload';\nimport CustomizedPrint from '../../atoms/CustomizedPrint/CustomizedPrint';\nimport {CSVLink} from \"react-csv\";\nimport OpenModal from '../../molecules/OpenModal/OpenModal';\nimport CustomizedEditIcon from '../../atoms/CustomizedEditIcon/CustomizedEditIcon';\nimport moment from 'moment';\n\n\nconst DisplayCustomerTable = ({\n    currentstatus,\n    setTableDataEvent,\n    tabledata,\n    api\n}) => {\n    const [filterflag, setfilterflag] = useState(false);\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [rowdata, setrowdata] = useState({});\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(()=>{\n        if (filterflag && currentstatus ){\n            statusfiltercustomerdata();\n        }else {\n            displayCustomerFollowUpData();   \n        }\n    },[currentstatus])\n\n    const headers =[\n        {label:'Comments', key:'comments'},\n        {label:'Customer address', key:'customer_address'},\n        {label:'Customer name', key:'customer_name'},\n        {label:'Customer reference No', key:'customer_reference_no'},\n        {label:'Enquired product', key:'enquired_product'},\n        {label:'Enquired product hsn code', key:'enquired_product_hsn_code'},\n        {label:'Enquired date', key:'enquiry_date'},\n        {label:'Final status', key:'final_status'},\n        {label:'Follow up call', key:'follow_up_call'},\n        {label:'Phone number', key:'phone_number'},\n        {label:'Quantity', key:'quantity'}\n      ];\n      const csvReport = {\n        filename:'CustomerReports.csv',\n        headers:headers,\n        data:tabledata\n      }\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    const displayCustomerFollowUpData = () => {\n        api.get('customer/displayCustomerFollowUpData')\n        .then((res)=>{\n            setTableDataEvent(res.data);\n              setfilterflag(true);\n        })\n    }\n    useEffect(()=>{\n        if (searchvalue === \"\"){\n            displayCustomerFollowUpData();\n        }\n    },[searchvalue])\n    const statusfiltercustomerdata = () => {\n        api.post('customer/statusfiltercustomerdata',{\n            params:{\n                status:currentstatus\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n  }\n  const searchHandle = (e) => {\n    setSearchvalue(e.target.value);\n  }\n  const searchclicked = () => {\n    api.post('customer/getCustomerFollowUpDataCustomer',{\n        params:{\n            searchvalue\n        }\n    })\n    .then((res)=>{\n        setTableDataEvent(res.data);\n    })\n  }\n    return(\n        <div>\n             <OpenModal \n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayCustomerFollowUpData={displayCustomerFollowUpData}\n                rowdata={rowdata} \n            />\n            <CustomizedSearchBar \n                labelname=\"customer :- phone number / name\"\n                Btnname=\"search\"\n                onHandleChangeEvent={searchHandle}\n                goEventClicked={searchclicked}\n            />\n            <div>\n                {\n                    tabledata && tabledata.length ? \n                    <CSVLink {...csvReport}><CustomizedDownload/></CSVLink> : null\n                }\n                {/* <CustomizedPrint /> */}\n            </div>\n            <div className='table-responsive'>\n                <table className='table table-striped table-bordered tablebackground'>\n                    <thead className='theadalter'>\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Enquiry Date</th>\n                            <th>Customer Name</th>\n                            <th>Customer Address</th>\n                            <th>Phone Number</th>\n                            <th>Enquired Product Hsn Code</th>\n                            <th>Enquired Product</th>\n                            <th>Quantity</th>\n                            <th>Comments</th>\n                            <th>Follow Up Call </th>\n                            <th>Final Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            tabledata && tabledata.length \n                            ? tabledata.map((data, i)=>(\n                                <tr key={i}>\n                                <td>{data.customer_reference_no} </td>\n                                <td>\n                                    {\n                                        data.enquiry_date != null ?\n                                        moment(data.enquiry_date).format('YYYY-MM-DD'):\n                                        data.enquiry_date\n                                    }\n                                </td>\n                                <td>{data.customer_name}</td>\n                                <td>{data.customer_address} </td>\n                                <td>{data.phone_number} </td>\n                                <td>{data.product_hsn_code} </td>\n                                <td>{data.product} </td>\n                                <td>{data.quantity} </td>\n                                <td>{data.comments} </td>\n                                <td>\n                                    {\n                                        data.follow_up_call != null ? \n                                        moment(data.follow_up_call).format('YYYY-MM-DD'):\n                                        data.follow_up_call\n                                    } \n                                </td>\n                                <td>{data.final_status} </td>\n                                <td>\n                                <CustomizedEditIcon \n                                    onClick={()=>{\n                                        rowdataevent(data);\n                                        setmodalview(\"customerfollowupform\");\n                                        openevent(true);\n                                    }}\n                                />\n                                </td>\n                            </tr>\n                            ))\n                            : \n                                <tr>\n                                    <td colSpan={12}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DisplayCustomerTable;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedEditIcon/CustomizedEditIcon.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable.js",["750","751","752","753"],[],"import React, { useState, useEffect } from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from '../OpenModal/OpenModal';\nimport CustomizedEditIcon from \"../../atoms/CustomizedEditIcon/CustomizedEditIcon\";\nimport { CSVLink } from \"react-csv\";\nimport CustomizedDownload from \"../../atoms/CustomizedDownload/CustomizedDownload\";\nimport moment from 'moment';\n\nconst DisplayDeliveryReportsTable = ({\n    deliverystatus,\n    paymentstatus,\n    setTableDataEvent,\n    tabledata,\n    api\n}) => {\n    const [filterflag, setfilterflag] = useState(false);\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [rowdata, setrowdata] = useState({});\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(() => {\n        if (filterflag && deliverystatus && paymentstatus) {\n            statusfilterdeliveryreport();\n        } else {\n            displayDeliveryReportsData();\n        }\n    }, [deliverystatus, paymentstatus])\n    useEffect(()=>{\n        if (paymentstatus){\n            paymentstatusfilteronly();\n        }\n    },[paymentstatus])\n    useEffect(()=>{\n        if(deliverystatus){\n            deliverystatusfilteronly();\n        }\n    },[deliverystatus])\n    const headers = [\n        { label: 'customer reference no', key: 'customer_reference_no' },\n        { label: 'booked date', key: 'booked_date' },\n        { label: 'requested delivery date', key: 'requested_delivery_date' },\n        { label: 'delivery date', key: 'delivery_date' },\n        { label: 'invoice no', key: 'invoice_no' },\n        { label: 'customer address', key: 'customer_address' },\n        { label: 'gst', key: 'gst' },\n        { label: 'phone number', key: 'phone_number' },\n        { label: 'product hsn code', key: 'product_hsn_code' },\n        { label: 'product', key: 'product' },\n        { label: 'quantity', key: 'quantity' },\n        { label: 'rate', key: 'rate' },\n        { label: 'discount', key: 'discount' },\n        { label: 'cgst', key: 'cgst' },\n        { label: 'sgst', key: 'sgst' },\n        { label: 'igst', key: 'igst' },\n        { label: 'final amount', key: 'final_amount' },\n        { label: 'balance amount', key: 'balance_amount' },\n        { label: 'payment status', key: 'payment_status' },\n        { label: 'booking advance amount', key: 'booking_advance_amount' },\n        { label: 'delivery status', key: 'delivery_status' },\n        { label: 'customer name', key: 'customer_name' },\n    ];\n    const csvReport = {\n        filename: 'DeliveryReports.csv',\n        headers: headers,\n        data: tabledata\n    }\n    const displayDeliveryReportsData = () => {\n        api.get('delivery/displayDeliveryReportsData')\n        .then((res)=>{\n            setTableDataEvent(res.data);\n            setfilterflag(true);\n        })\n    }\n    const statusfilterdeliveryreport = () => {\n        api.post('delivery/statusfilterdeliveryreport',{\n            params:{\n                deliverystatus: deliverystatus,\n                paymentstatus: paymentstatus\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const paymentstatusfilteronly = () => {\n        api.post('delivery/paymentstatusfilteronly',{\n            params:{\n                paymentstatus: paymentstatus\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const deliverystatusfilteronly = () => {\n        api.post('delivery/deliverystatusfilteronly',{\n            params:{\n                deliverystatus: deliverystatus,\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const searchHandle = (e) => {\n        setSearchvalue(e.target.value);\n    }\n    const searchclicked = () => {\n        api.post('delivery/getDeliveryReportData',{\n            params:{\n                phoneno: searchvalue,\n                customer_name: searchvalue\n            }\n        })\n        .then((res)=>{\n            setTableDataEvent(res.data);\n        })\n    }\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    useEffect(() => {\n        if (searchvalue === \"\") {\n            displayDeliveryReportsData();\n        }\n    }, [searchvalue])\n    return (\n        <div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayDeliveryReportsData={displayDeliveryReportsData}\n                rowdata={rowdata}\n            />\n            <CustomizedSearchBar\n                labelname=\"customer :- phone number / name\"\n                Btnname=\"search\"\n                onHandleChangeEvent={searchHandle}\n                goEventClicked={searchclicked}\n            />\n            <div>\n                {\n                    tabledata && tabledata.length ?\n                        <CSVLink {...csvReport}><CustomizedDownload /></CSVLink> : null\n                }\n            </div>\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Product Sl Number</th>\n                            <th>Booked Date</th>\n                            <th>Requested Delivery Date</th>\n                            <th>Delivery Date</th>\n                            <th>Invoice Number</th>\n                            <th>Customer Name </th>\n                            <th>Customer Address</th>\n                            <th>GSTIN/UIN:</th>\n                            <th>Phone number</th>\n                            <th>Product HSN Code </th>\n                            <th>Product</th>\n                            <th>Quantity</th>\n                            <th>Rate</th>\n                            <th>Discount</th>\n                            <th>CGST</th>\n                            <th>SGST</th>\n                            <th>IGST</th>\n                            <th>Final Amount</th>\n                            <th>Balance Amount</th>\n                            <th>Payment status </th>\n                            <th>Booking Advance Amount</th>\n                            <th>Delivery Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            tabledata && tabledata.length \n                            ? tabledata.map((data, i) => (\n                                <tr key={i}>\n                                    <td>{data.customer_reference_no}</td>\n                                    <td>{data.product_sl_no}</td>\n                                    <td>\n                                        {\n                                            data.booked_date != null ?\n                                            moment(data.booked_date).format('YYYY-MM-DD'):\n                                            data.booked_date \n                                        }\n                                    </td>\n                                    <td>\n                                        {\n                                            data.requested_delivery_date != null ?\n                                            moment(data.requested_delivery_date).format('YYYY-MM-DD'):\n                                            data.requested_delivery_date \n                                        }\n                                    </td>\n                                    <td>\n                                        {\n                                            data.delivery_date != null ?\n                                            moment(data.delivery_date).format('YYYY-MM-DD'):\n                                            data.delivery_date\n                                        }\n                                    </td>\n                                    <td>{data.invoice_no}</td>\n                                    <td>{data.customer_name}</td>\n                                    <td>{data.customer_address}</td>\n                                    <td>{data.gst}</td>\n                                    <td>{data.phone_number}</td>\n                                    <td>{data.product_hsn_code}</td>\n                                    <td>{data.product}</td>\n                                    <td>{data.quantity}</td>\n                                    <td>{data.rate}</td>\n                                    <td>{data.discount}</td>\n                                    <td>{data.cgst}</td>\n                                    <td>{data.sgst}</td>\n                                    <td>{data.igst}</td>\n                                    <td>{data.final_amount}</td>\n                                    <td>{data.balance_amount}</td>\n                                    <td>{data.payment_status}</td>\n                                    <td>{data.booking_advance_amount}</td>\n                                    <td>{data.delivery_status}</td>\n                                    <td>\n                                    <CustomizedEditIcon\n                                        onClick={() => { \n                                            rowdataevent(data);\n                                            setmodalview(\"deliverydetailsform\");\n                                            openevent(true);\n                                            }}\n                                    />\n                                    </td>\n                                </tr>\n                            ))\n                            : \n                                <tr>\n                                    <td colSpan={23}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DisplayDeliveryReportsTable;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable.js",["754","755","756","757","758","759"],[],"import React,{useState, useEffect} from 'react';\nimport CustomizedEditIcon from '../../atoms/CustomizedEditIcon/CustomizedEditIcon';\nimport OpenModal from '../OpenModal/OpenModal';\nimport CustomizedSearchBar from '../../atoms/CustomizedSearchBar/CustomizedSearchBar';\nimport CustomizedDeleteIcon from '../../atoms/CustomizedDeleteIcon/CustomizedDeleteIcon';\nimport CustomizedBtn from '../../atoms/CustomizedBtn/CustomizedBtn';\nimport axios from 'axios';\nimport '../../../style/style.css';\n\nconst DisplayProductDetailsTable = ({\n    currentstatus,  \n}) => {\n    const [productsdetailsdata, setProductsdetailsdata] = useState({});\n    const [filterflag, setfilterflag] = useState(false);\n    const [editRow, setEditRow] = useState(null);\n    const [rowdata, setrowdata] = useState({});\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    const [editFormData, setEditFormData] = useState({\n        product_hsn_code:\"\",\n        product_name:\"\",\n        product_description:\"\",\n        unit_of_measure:\"\",\n        rate_per_unit:\"\",\n        gst_rate:\"\",\n        product_status:\"\",\n        stock:\"\"\n    })\n    useEffect(()=>{\n        if(filterflag && currentstatus){\n            productstatusfilter();\n        }\n        else {\n            displayProductDetailsData();\n        }\n    },[currentstatus])\n    const modalviewchange = () =>{\n        setChangedmodalview(\"addproductform\");\n    }\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    const displayProductDetailsData = () => {\n        axios.get(`http://localhost:3000/product/displayProductDetailsData`)\n        .then((res)=>{\n            setProductsdetailsdata(res.data);\n            setfilterflag(true);\n        })\n    }\n    useEffect(()=>{\n        if (searchvalue === \"\"){\n            displayProductDetailsData();\n        }\n    },[searchvalue])\n    const productstatusfilter = () => {\n        axios.post(`http://localhost:3000/product/productstatusfilter`,{\n            params:{\n                status:currentstatus\n            }\n        })\n        .then((res)=>{\n            setProductsdetailsdata(res.data);\n        })\n    }\n    const editevent = (event, data ) => {\n        setEditRow(data.product_hsn_code);\n        const formValues = {\n            product_hsn_code:data.product_hsn_code,\n            product_name:data.product_name,\n            product_description:data.product_description,\n            unit_of_measure:data.unit_of_measure,\n            rate_per_unit:data.rate_per_unit,\n            gst_rate:data.gst_rate,\n            product_status:data.product_status,\n            stock:data.stock\n        }\n        setEditFormData(formValues);\n    }\n    const deleteevent = (id) => {\n        axios.delete(`http://localhost:3000/product/deletefromproductdetailstable`, \n        { \n            data: { \n                id:id \n            }\n         })\n         .then((res)=>{\n                displayProductDetailsData();\n         })\n    }\n    const searchHandle = (e) => {\n        setSearchvalue(e.target.value);\n      }\n      const searchclicked = () => {\n        axios.post(`http://localhost:3000/product/getProductDetailsData`,{\n            params:{\n                product_name:searchvalue,\n                product_hsn:searchvalue\n            }\n        })\n        .then((res)=>{\n            setProductsdetailsdata(res.data);  \n        })\n      }\n    return(\n        <div>\n            <OpenModal \n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayProductDetailsData={displayProductDetailsData}\n                rowdata={rowdata}\n            />\n            <CustomizedSearchBar \n            labelname=\"product name / product hsn\"\n            Btnname=\"search\"\n            onHandleChangeEvent={searchHandle}\n            goEventClicked={searchclicked}\n            />\n            <div className='adddealersbtnstyle'>\n                <CustomizedBtn \n                    BtnName=\"Add Product\"\n                    onClick={()=>{\n                        setmodalview(\"addproductform\");\n                        openevent(true);\n                    }}\n                />\n            </div>\n            <div className='table-responsive'>\n                <form>\n                    <table className='table table-striped table-bordered tablebackground'>\n                        <thead className='theadalter'>\n                            <tr>\n                                <th>Product HSN code</th>\n                                <th>Product Name</th>\n                                <th>Product Description</th>\t\n                                <th>Unit of Measure</th>\n                                <th>Rate per unit (₹)</th>\n                                <th>GST Rate (%)</th>\n                                <th>Product Status</th>\t\n                                <th>Product Discount (%)</th>\n                                <th>Stock</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                productsdetailsdata && productsdetailsdata.length \n                                ? productsdetailsdata.map((data)=>(\n                                    <tr>\n                                        <td>{data.product_hsn_code}</td>\n                                        <td>{data.product_name}</td>\n                                        <td>{data.product_description}</td>\n                                        <td>{data.unit_of_measure}</td>\n                                        <td>{data.rate_per_unit}</td>\n                                        <td>{data.gst_rate}</td>\n                                        <td>{data.product_status}</td>\n                                        <td>{data.discount}</td>\n                                        <td>{data.stock}</td>\n                                        <td>\n                                            <div className='editdeletecontainer'>\n                                                <CustomizedEditIcon \n                                                    onClick={()=>{\n                                                        rowdataevent(data);\n                                                        setmodalview(\"productdetailsform\");\n                                                        openevent(true);\n                                                    }}\n                                                />\n                                                <CustomizedDeleteIcon onClick={()=>(deleteevent(data.product_hsn_code))} />\n                                            </div>\n                                        </td>\n                                    </tr>\n                                ))\n                                : \n                                    <tr>\n                                        <td colSpan={9}>No Record!</td>\n                                    </tr>\n                            }\n                            \n                        </tbody>\n                    </table>\n                </form>\n            </div>\n        </div>\n    );\n}\nexport default DisplayProductDetailsTable;\n","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDeleteIcon/CustomizedDeleteIcon.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable.js",["760","761","762","763"],[],"import React,{useState, useEffect} from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from '../OpenModal/OpenModal';\nimport CustomizedEditIcon from \"../../atoms/CustomizedEditIcon/CustomizedEditIcon\";\nimport CustomizedDeleteIcon from \"../../atoms/CustomizedDeleteIcon/CustomizedDeleteIcon\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport '../../../style/style.css';\n\nconst DisplayDealersDetailsTable = ({\n    currentstatus,\n    api\n}) => {\n    const [dealersdetailsdata, setDealersdetailsdata] = useState({});\n    const [filterflag, setfilterflag] = useState(false);\n    const [rowdata, setrowdata] = useState({});\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(()=>{\n        if(filterflag && currentstatus){\n            gstinstatusfilterdealersdata();\n        }else {\n            displayDealersDetailsData();\n        }\n    },[currentstatus])\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    const displayDealersDetailsData = () => {\n        api.get('dealers/displayDealersDetailsData')\n        .then((res)=>{\n            setDealersdetailsdata(res.data);\n            setfilterflag(true);\n        })\n    }\n    useEffect(()=>{\n        if (searchvalue === \"\"){\n            displayDealersDetailsData();\n        }\n    },[searchvalue])\n    const gstinstatusfilterdealersdata = () => {\n        api.post('dealers/gstinstatusfilterdealersdata',{\n            params:{\n                status:currentstatus\n            }\n        })\n        .then((res)=>{\n            setDealersdetailsdata(res.data);\n        })\n    }\n    const searchHandle = (e) => {\n        setSearchvalue(e.target.value);\n      }\n      const modalviewchange = () =>{\n        setChangedmodalview(\"adddealersform\");\n    }\n      const searchclicked = () => {\n        api.post('dealers/gstinstatusfilterdealersdata',{\n            params:{\n                proprietor_name:searchvalue,\n                proprietor_phone_number:searchvalue\n            }\n        })\n        .then((res)=>{\n            setDealersdetailsdata(res.data);\n        })\n      }\n      const deleteevent = (id) => {\n        api.delete(`http://localhost:3000/dealers/deletefromdealersdetailstable`, \n        { \n            data: { \n                id:id \n            }\n         })\n         .then((res)=>{\n            displayDealersDetailsData();\n         })\n    }\n    return(\n        <div>\n             <OpenModal \n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayDealersDetailsData={displayDealersDetailsData}\n                rowdata={rowdata}\n            />\n            <CustomizedSearchBar \n            labelname=\"proprietor name /proprietor phone number\"\n            Btnname=\"search\"\n            onHandleChangeEvent={searchHandle}\n            goEventClicked={searchclicked}\n            />\n            <div className=\"adddealersbtnstyle\">\n                <CustomizedBtn \n                    BtnName=\"Add Dealers\"\n                    onClick={()=>{\n                        setmodalview(\"adddealersform\");\n                        openevent(true);\n                    }}\n                />\n            </div>\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>GSTIN Number</th>\n                            <th>Enterprise Name</th>\n                            <th>Enterprise Address</th>\n                            <th>Proprietor Name</th>\n                            <th>Proprietor Phone Number</th>\n                            <th>GSTIN Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            dealersdetailsdata && dealersdetailsdata.length \n                            ?  dealersdetailsdata.map((data, i)=> (\n                            <tr key={i}>\n                                <td>{data.gstin_number}</td>\n                                <td>{data.enterprise_name}</td>\n                                <td>{data.enterprise_address}</td>\n                                <td>{data.proprietor_name}</td>\n                                <td>{data.proprietor_phone_number}</td>\n                                <td>{data.gstin_status}</td>\n                                <td>\n                                    <div className=\"editdeletecontainer\">\n                                        <CustomizedEditIcon\n                                            onClick={()=>{\n                                                rowdataevent(data);\n                                                setmodalview(\"editdealersreport\");\n                                                openevent(true);\n                                            }}\n                                        />\n                                        <CustomizedDeleteIcon onClick={()=>(deleteevent(data.gstin_number))} />\n                                    </div>\n                                </td>\n                            </tr>\n                            ))\n                            : \n                                <tr>\n                                    <td colSpan={7}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DisplayDealersDetailsTable;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/Download/DownloadCustomer.js",["764","765","766","767","768","769","770","771","772","773","774","775"],[],"import React, { useState } from 'react';\nimport CustomizedText from '../../atoms/CustomizedText/CustomizedText';\nimport CustomizedDownload from '../../atoms/CustomizedDownload/CustomizedDownload';\nimport CustomizedDatepicker from '../../atoms/CustomizedDatepicker/CustomizedDatepicker';\nimport SearchIcon from '@mui/icons-material/Search';\nimport moment from 'moment';\nimport axios from 'axios';\nconst DownloadCustomer = ({setTableDataEvent}) => {\n  const [fromselecteddate, fromsetselecteddate] = useState('');\n  const [toselecteddate, tosetselecteddate] = useState('');\n  \n  const fromselecteddateevent = (e) => {\n    fromsetselecteddate(e);\n  }\n  const toselecteddateevent = (e) => {\n    tosetselecteddate(e);\n  }\n  const searchbuttonclicked = () => {\n    axios.post('http://localhost:3000/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromselecteddate,\n        todate:toselecteddate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const weeklysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n\n    var firstday = new Date(curr.setDate(first));\n    var lastday = new Date(curr.setDate(last));\n\n    firstday = firstday.toString();\n    firstday = firstday.split(\" \"); \n    var fromdate = firstday[3]+\"-\"+months[firstday[1]]+\"-\"+firstday[2];\n    \n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://localhost:3000/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const monthlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n\n    axios.post('http://localhost:3000/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const yearlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+\"01\"+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://localhost:3000/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n    return(\n        <div className='fromtodownloadlinkcontainer'>\n        <div className='fromtodownloadcontainer'>\n          <div className='fromcontainer'>\n            <CustomizedText textname=\"from :- \" />\n            <CustomizedDatepicker selecteddateevent={fromselecteddateevent} />\n          </div>\n          <div className='tocontainer'>\n            <CustomizedText textname=\"to :-\" />\n            <CustomizedDatepicker selecteddateevent={toselecteddateevent} />\n          </div>\n          <SearchIcon className='searchicon' onClick={searchbuttonclicked} />\n        </div>\n        <div>\n          <span className='atagfirst'>\n            <a href='#' onClick={weeklysearchclicked} >weekly</a> \n          </span>\n          <span className='atagsecond'>\n            <a href='#' onClick={monthlysearchclicked} >monthly</a>\n          </span>\n          <span className='atagthird'>\n            <a href='#' onClick={yearlysearchclicked} >yearly</a>\n          </span>\n        </div>\n        </div>\n\n    );\n}\nexport default DownloadCustomer;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/Download/DownloadDelivery.js",["776","777","778","779","780","781","782","783","784","785"],[],"import React, { useState } from 'react';\nimport CustomizedText from '../../atoms/CustomizedText/CustomizedText';\nimport CustomizedDatepicker from '../../atoms/CustomizedDatepicker/CustomizedDatepicker';\nimport SearchIcon from '@mui/icons-material/Search';\nimport axios from 'axios';\nimport '../../../style/style.css';\n\nconst DownloadDelivery = ({setTableDataEvent}) => {\n  const [fromselecteddate, fromsetselecteddate] = useState('');\n  const [toselecteddate, tosetselecteddate] = useState('');\n  \n  const fromselecteddateevent = (e) => {\n    fromsetselecteddate(e);\n  }\n  const toselecteddateevent = (e) => {\n    tosetselecteddate(e);\n  }\n  const searchbuttonclicked = () => {\n    axios.post('http://localhost:3000/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromselecteddate,\n        todate:toselecteddate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const weeklysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n\n    var firstday = new Date(curr.setDate(first));\n    var lastday = new Date(curr.setDate(last));\n\n    firstday = firstday.toString();\n    firstday = firstday.split(\" \"); \n    var fromdate = firstday[3]+\"-\"+months[firstday[1]]+\"-\"+firstday[2];\n    \n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://localhost:3000/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n\n  }\n  const monthlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://localhost:3000/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const yearlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay();\n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+\"01\"+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://localhost:3000/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n    return(\n        <div className='fromtodownloadlinkcontainer'>\n        <div className='fromtodownloadcontainer'>\n          <div className='fromcontainer'>\n            <CustomizedText textname=\"from :- \" />\n            <CustomizedDatepicker selecteddateevent={fromselecteddateevent} />\n          </div>\n          <div className='tocontainer'>\n            <CustomizedText textname=\"to :-\" />\n            <CustomizedDatepicker selecteddateevent={toselecteddateevent} />\n          </div>\n          <div >\n            <SearchIcon className='searchicon' onClick={searchbuttonclicked} />\n          </div>\n        </div>\n        <div>\n          <span className='atagfirst'>\n            <a href='#' onClick={weeklysearchclicked} >weekly</a> \n          </span>\n          <span className='atagsecond'>\n            <a href='#' onClick={monthlysearchclicked} >monthly</a>\n          </span>\n          <span className='atagthird'>\n            <a href='#' onClick={yearlysearchclicked} >yearly</a>\n          </span>\n        </div>\n        </div>\n\n    );\n}\nexport default DownloadDelivery;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedDatepicker/CustomizedDatepicker.js",["786","787"],[],"import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\n\nconst CustomizedDatepicker = ({\n    type,\n    incomingdate,\n    selecteddateevent\n}) => {\n    const [date, setDate] = useState();\n    const resultDate=moment(incomingdate).format('YYYY-MM-DD');\n     useEffect(()=>{\n       setDate(resultDate);\n    },[])\n    return(\n        <div>\n            <input \n                name={type} \n                type=\"date\" \n                onChange={(e)=>{setDate(e.target.value); selecteddateevent(e.target.value)}}\n            />\n        </div>\n    );\n}\nexport default CustomizedDatepicker;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersInvoicesListForm/DealersInvoicesListForm.js",["788"],[],"import React, { useEffect, useState } from \"react\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport '../../../style/style.css';\nconst DealersInvoicesListForm = ({\n    deliveryinvoices,\n    api\n}) => {\n    const [fetchdealersdatatoverify, setfetchdealersdatatoverify] = useState();\n    const [verificationstatus, setverificationstatus] = useState();\n    const [currentInvoiceno, setcurrentInvoiceno] = useState();\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    const currentInvoicenoevent = (e) => {\n        setcurrentInvoiceno(e);\n    }\n    const fetchdealersdatatoverifyevent = (e) => {\n        api.post('delivery/fetchdealersdatatoverify', {\n            params: {\n                invoice_no: e\n            }\n        })\n            .then((res) => {\n                setfetchdealersdatatoverify(res.data);\n            })\n    }\n    useEffect(() => {\n        if (fetchdealersdatatoverify) {\n            api.put('jointables/updaterateofdeliverytableonbook', {\n                params: {\n                    data: fetchdealersdatatoverify\n                }\n            })\n                .then((res) => {\n                })\n            api.post('delivery/getstatecodefromdeliverytableonbook', {\n                params: {\n                    data: fetchdealersdatatoverify\n                }\n            })\n                .then((res) => {\n                    var data = res.data;\n                    for (var i = 0; i < data.length; i++) {\n                        if (data[i].state_code === 29) {\n                            api.put('jointables/updatekarnatakagstratesdeliverytableonbook', {\n                                params: {\n                                    data: fetchdealersdatatoverify\n                                }\n                            })\n                                .then((res) => {\n                                })\n                            api.put('jointables/updatefinalamountdeliverytableonbook', {\n                                params: {\n                                    data: fetchdealersdatatoverify\n                                }\n                            })\n                            api.put('/jointables/updatebalanceamountdeliverytableonbook',{\n                                params:{\n                                  data:fetchdealersdatatoverify\n                                }\n                              })\n                              api.put('/jointables/updatepaymentstatusdeliverytableonbook',{\n                                params:{\n                                  data:fetchdealersdatatoverify\n                                }\n                              })\n                        }\n                        else {\n                            api.put('jointables/updateotherstatesgstratesdeliverytableonbook', {\n                                params: {\n                                    data: fetchdealersdatatoverify\n                                }\n                            })\n                                .then((res) => {\n                                })\n                            api.put('jointables/updatefinalamountdeliverytableonbook', {\n                                params: {\n                                    data: fetchdealersdatatoverify\n                                }\n                            })\n                            api.put('/jointables/updatebalanceamountdeliverytableonbook',{\n                                params:{\n                                  data:fetchdealersdatatoverify\n                                }\n                              })\n                              api.put('/jointables/updatepaymentstatusdeliverytableonbook',{\n                                params:{\n                                  data:fetchdealersdatatoverify\n                                }\n                              })\n                        }\n                    }\n                })\n        }\n    }, [fetchdealersdatatoverify])\n    const fetchverificationstatusevent = (e) => {\n        api.post('delivery/getverificationstatus', {\n            params: {\n                invoice_no: e\n            }\n        })\n            .then((res) => {\n                setverificationstatus(res.data);\n            })\n    }\n    return (\n        <div>\n             <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                currentInvoiceno={currentInvoiceno}\n                verificationstatus={verificationstatus}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n            />\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered \">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Invoices List</th>\n                            <th>Action</th>\n                            <th>Generate</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            deliveryinvoices && deliveryinvoices.length\n                                ? deliveryinvoices.map((data) => (\n                                    <tr>\n                                        <td>{data.invoice_no}</td>\n                                        <td>\n                                            <CustomizedBtn \n                                                BtnName=\"Verify Invoice\"\n                                                onClick={()=>{\n                                                    fetchdealersdatatoverifyevent(data.invoice_no);\n                                                    fetchverificationstatusevent(data.invoice_no);\n                                                    currentInvoicenoevent(data.invoice_no);\n                                                    setModalview(\"dealersdetailsform\");\n                                                    openevent(true);\n                                                }}\n                                            />\n                                        </td>\n                                        <td>\n                                            <CustomizedBtn \n                                                BtnName=\"Download Invoice\"\n                                                onClick={()=>{\n                                                    setModalview(\"DealersInvoiceFormGenerateFormat\");\n                                                    openevent(true);\n                                                }}\n                                            />\n                                        </td>\n                                    </tr>\n                                ))\n                                : \n                                    <tr>\n                                        <td colSpan={3}>No Record!</td>\n                                    </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoicesListForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DealersDetailsForm/DealersDetailsForm.js",["789","790","791","792","793","794","795","796"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { purchasesuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from '../../atoms/CustomizedPrint/CustomizedPrint';\nimport axios from 'axios';\nimport '../../../style/style.css';\nconst DealersDetailsForm = ({\n  rowdata,\n  handleClose,\n  fetchdealersdatatoverify,\n  verificationstatus,\n  currentInvoiceno\n}) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [Rowdatadisplayed, setRowdatadisplayed] = useState();\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n  useEffect(() => {\n    fetchalldatafromcust();\n  }, [])\n  const fetchalldatafromcust = () => {\n    axios.post('http://localhost:3000/delivery/getalldataofcustomer', {\n        params: {\n          currentCustomerReferenceNo: currentInvoiceno\n        }\n      })\n        .then((res) => {\n          setRowdatadisplayed(res.data);\n        })\n  }\n  useEffect(() => {\n    if (fetchdealersdatatoverify) {\n      setUpdaterowdata(fetchdealersdatatoverify);\n    }\n  }, [fetchdealersdatatoverify])\n  const [finalverificationstatus, setfinalverificationstatus] = useState();\n  useEffect(() => {\n    if (verificationstatus) {\n      setfinalverificationstatus(verificationstatus[0].verification_status);\n    }\n  }, [verificationstatus])\n  const [constantinvoicedata, setconstantinvoicedata] = useState();\n  useEffect(() => {\n    if (fetchdealersdatatoverify) {\n      const tempdata = [...new Set(fetchdealersdatatoverify.map((e) => e.customer_reference_no))];\n      tempdata.map((temp) => {\n        let filterByTempData = fetchdealersdatatoverify.filter(dataObject => dataObject.customer_reference_no === temp)\n        var fixedstrings = filterByTempData[0];\n        setconstantinvoicedata(fixedstrings);\n      })\n    }\n  }, [fetchdealersdatatoverify])\n  const submiteventclicked = () => {\n    let custrefno = \"\";\n    let statecode;\n    Rowdatadisplayed.map((data) => {\n      custrefno = data.customer_reference_no;\n      statecode = data.state_code;\n    })\n    axios.post('http://localhost:3000/delivery/setverificationstatus', {\n      params: {\n        customer_reference_no: custrefno\n      }\n    })\n      axios.put('http://localhost:3000/delivery/updatepurchasestatusofdeliverytable', {\n      params: {\n        customer_reference_no: custrefno\n      }\n    })\n      axios.put('http://localhost:3000/delivery/updateDeliveryDatafromdealersform', {\n      params: {\n        rowdatadisplayed: Rowdatadisplayed\n      }\n    })\n      axios.post('http://localhost:3000/jointables/calculaterateofdeliveryofdealers', {\n      params: {\n        rowdatadisplayed: Rowdatadisplayed\n      }\n    })\n    if (statecode == 29) {\n      axios.put('http://localhost:3000/jointables/updatekarnatakagstratesfromdealers', {\n        params: {\n          customer_reference_no: custrefno\n        }\n      })\n        axios.put('http://localhost:3000/jointables/updatefinalamountdeliveryfromdealers', {\n        params: {\n          customer_reference_no: custrefno\n        }\n      })\n        axios.put('http://localhost:3000/jointables/updatebalanceamountdeliveryfromdealers', {\n        params: {\n          rowdatadisplayed: Rowdatadisplayed\n        }\n      })\n        .then((res) => {\n          if (res) {\n            const res = purchasesuccessmsg({});\n            alert(res.msg);\n            handleClose();\n          }\n        })\n    }\n    else {\n      axios.put('http://localhost:3000/jointables/updateotherstatesgstratesfromdealers', {\n        params: {\n          customer_reference_no: custrefno\n        }\n      })\n        .then((res) => {\n        })\n        axios.put('http://localhost:3000/jointables/updatefinalamountdeliveryfromdealers', {\n        params: {\n          customer_reference_no: custrefno\n        }\n      })\n        .then((res) => {\n        })\n        axios.put('http://localhost:3000/jointables/updatebalanceamountdeliveryfromdealers', {\n        params: {\n          rowdatadisplayed: Rowdatadisplayed\n        }\n      })\n        .then((res) => {\n          if (res) {\n            const res = purchasesuccessmsg({});\n            alert(res.msg);\n            handleClose();\n          }\n        })\n    }\n  }\n  const changeevent = (event, index) => {\n    let updateRowDataByIndex = [...Rowdatadisplayed];\n    Rowdatadisplayed.find((item, i) => {\n      if (item.delivery_id === index) {\n        updateRowDataByIndex[i][event.target.name] = event.target.value;\n        setRowdatadisplayed(() => [...updateRowDataByIndex]);\n      }\n    })\n  }\n  return (\n    <div>\n      <div><CustomizedPrint\n        onClick={handlePrint}\n      />\n      </div>\n      <div ref={componentRef}>\n        <div className=\"formheading\">\n          <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n          <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,\n            Opp Anna\n            Building,Hosur Main Road Bangalore-560099,\n            <br></br>Mobile: 9035757145/9902880851/9141070705</p>\n        </div>\n        <div className=\"pageheading\">\n          Purchase Order\n        </div>\n        <form className=\"formcontainer\">\n          {\n            Rowdatadisplayed && Rowdatadisplayed.length\n              ? Rowdatadisplayed.map((data, i) => (\n                <>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        customer name:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.customer_name}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Customer address:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.customer_address}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Invoice no:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.invoice_no}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        GST:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.gst}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        phone number:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.phone_number}\n                          type=\"number\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        phone number (alter one):\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.phone_number_alter_one}\n                          type=\"number\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        phone number (alter two):\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.phone_number_alter_two}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Product:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.product}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        quantity:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.quantity}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        rate:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.rate}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        discount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.discount}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        Rate After Extended Discount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.extended_discount}\n                          type=\"text\"\n                          onChange={(event) => changeevent(event, data.delivery_id)}\n                          name=\"extended_discount\"\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        cgst:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.cgst}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        sgst:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.sgst}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        igst:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.igst}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        final amount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.final_amount}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        balance amount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.balance_amount}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                      <label className=\"formdatalabelstyle\">\n                          <div className=\"formnamestyle\">\n                              Payment status:\n                          </div>\n                          <div className=\"formdatainputstyle\">\n                              <input\n                                  type=\"text\"\n                                  defaultValue={data.payment_status}\n                                  readOnly\n                              />\n                          </div> \n                      </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        advance amount:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.booking_advance_amount}\n                          type=\"number\"\n                          onChange={(event) => changeevent(event, data.delivery_id)}\n                          name=\"booking_advance_amount\"\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        po number:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.po_number}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                      <div className=\"formnamestyle\">\n                        vehicle number:\n                      </div>\n                      <div className=\"formdatainputstyle\">\n                        <input\n                          defaultValue={data.vehicle_number}\n                          type=\"text\"\n                          readOnly\n                        />\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"divider\"></div>\n                </>\n              ))\n              : <p>No Record!</p>\n          }\n        </form>\n      </div>\n      {\n        finalverificationstatus == 1\n          ? <p className=\"verificationstyle\">verification completed!</p>\n          : <div className=\"submitcontainee\">\n            <CustomizedBtn\n              BtnName=\"submit\"\n              onClick={submiteventclicked}\n            />\n          </div>\n      }\n    </div>\n  )\n}\nexport default DealersDetailsForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/DeliveryDetailsForm/DeliveryDetailsForm.js",["797","798","799","800","801","802","803","804","805","806"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst DeliveryDetailsForm = ({ rowdata, handleClose }) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [paymentstatus, setpaymentstatus] = useState([\"Paid\", \"Pending\"]);\n  const [deliverstatus, setdeliverstatus] = useState([\"Delivered\", \"Not Delivered\", \"Cancelled\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const [comboboxdata, setComboboxdata] = useState();\n  useEffect(() => {\n    axios.get(`http://localhost:3000/product/displayProductDetailsDataforcombobox`)\n    .then((res)=>{\n      var data = res.data;\n      let productnamesarray = [];\n        data.map((d) => {\n          productnamesarray.push(d.product_name);\n        })\n        setComboboxdata(productnamesarray);\n    })\n  }, [])\n  const [updatedPaymentstatus, setupdatedPaymentstatus] = useState('');\n  const [updatedDeliverystatus, setupdatedDeliverystatus] = useState('');\n  const paymentstatusevent = (e) => {\n    setupdatedPaymentstatus(e);\n  }\n  const deliverystatusevent = (e) => {\n    setupdatedDeliverystatus(e);\n  }\n  const submiteventclicked = () => {\n    axios.put(`http://localhost:3000/delivery/updateDeliveryDetails`,{\n      params:{\n        updaterowdata\n      }\n    })\n    .then((res)=>{\n      if(res){\n        const res = editedsuccessmsg({});\n        alert(res.msg);\n        handleClose();\n      }\n    })\n  }\n  const selectevent = (event) =>{\n    setUpdaterowdata({ ...updaterowdata, \"delivery_status\": event.value })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Delivery Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Reference Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.customer_reference_no}\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Sl No:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_sl_no}\n                onChange={changeevent}\n                name=\"product_sl_no\"\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Booked Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n             <SelectDate\n              type=\"booked_date\"\n              typeOne=\"booked_date\"\n              incomingdate={\n                rowdata.booked_date != null ?\n                moment(rowdata.booked_date).format('YYYY-MM-DD'):\n                rowdata.booked_date\n              }\n              disable=\"yes\"\n            /> \n          </div>\n            \n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Requested Delivery Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <SelectDate\n              type=\"requested_delivery_date\"\n              typeOne=\"requested_delivery_date\"\n              incomingdate={\n                rowdata.requested_delivery_date != null ?\n                moment(rowdata.requested_delivery_date).format('YYYY-MM-DD'):\n                rowdata.requested_delivery_date\n              }\n              disable=\"yes\"\n            />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Delivery Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <SelectDate\n              type=\"delivery_date\"\n              typeOne=\"delivery_date\"\n              incomingdate={\n                rowdata.delivery_date != null ?\n                moment(rowdata.delivery_date).format('YYYY-MM-DD'):\n                rowdata.delivery_date\n              }\n              disable=\"yes\"\n            />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Invoice number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.invoice_no}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"customer_address\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_address}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number Alter (one):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number_alter_one}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number Alter (two):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number_alter_two}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Hsn Code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_hsn_code}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <input\n                defaultValue={rowdata.product}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Quantity:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.quantity}\n                type=\"number\"\n                name=\"quantity\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.rate}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.discount}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              CGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.cgst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              SGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.sgst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              IGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.igst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Final Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"final_amount\"\n                defaultValue={rowdata.final_amount}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Balance Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"balance_amount\"\n                defaultValue={rowdata.balance_amount}\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Payment Status:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <input\n                name=\"balance_amount\"\n                defaultValue={rowdata.payment_status}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Booking Advance Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"booking_advance_amount\"\n                onHandleChangeEvent={changeevent}\n                defaultValue={rowdata.booking_advance_amount}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Delivery Status:\n            </div>\n             <div className=\"formdatainputstyle\">\n             <CustomizedComboboxAll \n                comboboxdata={deliverstatus}\n                dvalue={rowdata.delivery_status}\n                selectevent={selectevent}\n              />\n            </div> \n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default DeliveryDetailsForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedCombobox/CustomizedComboboxForAll.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/CustomerFollowUpForm/CustomerFollowUpForm.js",["807","808","809"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport axios from 'axios';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport '../../../style/style.css';\nimport moment from 'moment';\n\nconst CustomerFollowUpForm = ({\n  rowdata,\n  handleClose\n}) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [finalstatus, setfinalstatus] = useState([\"Booked\", \"Cancelled\", \"Follow Up In Progress\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const submiteventclicked = () => {\n    axios.put('http://localhost:3000/customer/updateCustomerDetails',{\n      params:{\n        updaterowdata\n      }\n    })\n    .then((res)=>{\n      if(res){\n        const res = editedsuccessmsg({});\n        alert(res.msg);\n        handleClose();\n      }\n    })\n  }\n  const selectevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, \"follow_up_call\": event })\n  }\n  const selectevent1 = (event) => {\n    setUpdaterowdata({ ...updaterowdata, \"final_status\":event.value })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Customer Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Reference No:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.customer_reference_no}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquiry Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <SelectDate\n                type=\"enquiry_date\"\n                typeOne=\"enquiry_date\"\n                incomingdate={\n                  rowdata.enquiry_date != null ?\n                  moment(rowdata.enquiry_date).format('YYYY-MM-DD'):\n                  rowdata.enquiry_date\n                }\n                disable=\"yes\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"customer_address\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_address}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired product hsn code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_hsn_code}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Quantity:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.quantity}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Comments:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"comments\"\n                onChange={changeevent}\n                value={rowdata.comments}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Follow up call:\n            </div>\n            <SelectDate\n                selectevent={selectevent}\n                typeOne=\"follow_up_call\"\n                incomingdate={\n                  rowdata.follow_up_call != null\n                        ? moment(rowdata.follow_up_call).format('YYYY-MM-DD')\n                        : rowdata.follow_up_call = rowdata.follow_up_call\n                }\n            />\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Final status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll\n                comboboxdata={finalstatus}\n                dvalue={rowdata.final_status}\n                selectevent={selectevent1}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default CustomerFollowUpForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/ProductsDetailsForm/ProductsDetailsForm.js",["810","811","812"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport '../../../style/style.css';\n\nconst ProductsDetailsForm = ({ rowdata, handleClose }) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [productstatus, setproductstatus] = useState([\"Available\", \"Not Available\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const submiteventclicked = () => {\n    axios.put('http://localhost:3000/product/updateProductsDetails', {\n      params: {\n        updaterowdata\n      }\n    })\n      .then((res) => {\n        if (res) {\n          const res = editedsuccessmsg({});\n          alert(res.msg);\n          handleClose();\n        }\n      })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [\"product_status\"]: event.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Product details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product HSN code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_hsn_code\"\n                defaultValue={rowdata.product_hsn_code}\n                onChange={changeevent}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.product_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Description:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_description\"\n                onChange={changeevent}\n                defaultValue={rowdata.product_description}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Unit of Measure:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"unit_of_measure\"\n                onChange={changeevent}\n                defaultValue={rowdata.unit_of_measure}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Rate per unit:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"rate_per_unit\"\n                onChange={changeevent}\n                defaultValue={rowdata.rate_per_unit}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              GST Rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gst_rate\"\n                onChange={changeevent}\n                defaultValue={rowdata.gst_rate}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll\n                  comboboxdata={productstatus}\n                  dvalue={rowdata.product_status}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"discount\"\n                onChange={changeevent}\n                defaultValue={rowdata.discount}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Stock:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"stock\"\n                onChange={changeevent}\n                defaultValue={rowdata.stock}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default ProductsDetailsForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/atoms/CustomizedComboboxwithdefaultvalue/CustomizedComboboxwithdefaultvalue.js",[],[],"/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/EditDealersReportForm/EditDealersReportForm.js",["813","814"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport '../../../style/style.css';\nconst EditDealersReportForm = ({ rowdata, handleClose }) => {\n    const [updaterowdata, setUpdaterowdata] = useState();\n    const [dealerstatus, setdealerstatus] = useState([\"Active\", \"In Active\"]);\n    useEffect(() => {\n        setUpdaterowdata(rowdata);\n    }, [])\n    const submiteventclicked = (e) => {\n        axios.put('http://localhost:3000/dealers/updateDealersDetails', {\n            params: {\n                updaterowdata\n            }\n        })\n            .then((res) => {\n                if (res) {\n                    const res = editedsuccessmsg({});\n                    alert(res.msg);\n                    handleClose();\n                }\n            })\n    }\n    const changeevent = (event) => {\n        setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n    }\n    const selectevent = (event) => {\n        setUpdaterowdata({ ...updaterowdata, \"gstin_status\": event.value })\n    }\n    return (\n        <div>\n            <div className=\"pageheading\">\n                Edit Dealers Details\n            </div>\n            <form className=\"formcontainer\">\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Enterprise Name:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"enterprise_name\"\n                                defaultValue={rowdata.enterprise_name}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Enterprise Address:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"enterprise_address\"\n                                defaultValue={rowdata.enterprise_address}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Proprietor Name:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"proprietor_name\"\n                                defaultValue={rowdata.proprietor_name}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Proprietor Phone Number:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"proprietor_phone_number\"\n                                defaultValue={rowdata.proprietor_phone_number}\n                                onChange={changeevent}\n                                type=\"number\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            GSTIN Number:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                defaultValue={rowdata.gstin_number}\n                                type=\"text\"\n                                readOnly\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            GSTIN Status:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <CustomizedComboboxAll\n                                comboboxdata={dealerstatus}\n                                dvalue={rowdata.gstin_status}\n                                selectevent={selectevent}\n                                />\n                            {/* <CustomizedComboboxForAll\n                                comboboxdata={dealerstatus}\n                                selectevent={selectevent}\n                                selectedvalue={rowdata.gstin_status}\n                            /> */}\n                        </div>\n                    </label>\n                </div>\n                <div className=\"submitcontainee\">\n                    <CustomizedBtn\n                        BtnName=\"submit\"\n                        onClick={submiteventclicked}\n                    />\n                </div>\n            </form>\n        </div>\n    )\n}\nexport default EditDealersReportForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddDealersForm/AddDealersForm.js",["815","816","817","818","819"],[],"import React, { useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport { addedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxForAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxForAll\";\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport '../../../style/style.css';\nconst AddDealersForm = ({ handleClose }) => {\n  const [customerdata, setcustomerdata] = useState();\n  const [gststatus, setgststatus] = useState(['Active', 'In Active']);\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let updatedate = \"\";\n  let finalcurrentdate = \"\";\n  const currentDate = () => {\n    let date = new Date();\n    finalcurrentdate = moment(date).format('YYYY-MM-DD');\n  }\n  currentDate();\n  const submiteventclicked = () => {\n    axios.post(`http://localhost:3000/dealers/addDealersData`,{\n      params:{\n        data: customerdata\n      }\n    })\n    .then((res)=>{\n      if(res){\n        const res = addedsuccessmsg({})\n        alert(res.msg);\n        handleClose();\n      }\n    })\n  }\n  const changeevent = (event) => {\n    setcustomerdata({ ...customerdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setcustomerdata({ ...customerdata, \"gstin_status\": event.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Add Dealers Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              GSTIN Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gstin_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"enterprise_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"enterprise_address\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Proprietor address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"proprietor_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Proprietor phone number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"proprietor_phone_number\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              gst status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll \n                  comboboxdata={gststatus}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default AddDealersForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/components/molecules/AddProductForm/AddProductForm.js",["820","821","822"],[],"import React, { useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport { addedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport axios from 'axios';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport '../../../style/style.css';\nconst AddProductForm = ({ handleClose }) => {\n  const [customerdata, setcustomerdata] = useState();\n  const [productstatus, setproductstatus] = useState(['Available', 'Not Available']);\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let finalcurrentdate = \"\";\n  const currentDate = () => {\n    let date = new Date();\n    finalcurrentdate = moment(date).format('YYYY-MM-DD');\n  }\n  currentDate();\n  const submiteventclicked = () => {\n    axios.post('http://localhost:3000/product/addProductData', {\n      params: {\n        data: customerdata\n      }\n    })\n      .then((res) => {\n        if (res) {\n          const res = addedsuccessmsg({})\n          alert(res.msg);\n          handleClose();\n        }\n      })\n  }\n  const changeevent = (event) => {\n    setcustomerdata({ ...customerdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setcustomerdata({ ...customerdata, \"product_status\": event.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Add Product Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product hsn code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_hsn_code\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product description:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_description\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Unit of measure:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"unit_of_measure\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              rate per unit:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"rate_per_unit\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              gst rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gst_rate\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll \n                  comboboxdata={productstatus}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              stock:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"stock\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"discount\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default AddProductForm;","/Users/rashmishrees/Desktop/prabhu-invoice-project/rashmi-work-done/sdd_using_axios/sddusingaxios/src/pages/Header/HeaderWithLogout.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/index.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/App.js",["823"],[],"import LoginPage from './pages/LoginPage/LoginPage';\nimport NavigationTiles from './pages/NavigationTiles/NavigationTiles';\nimport ViewInvoicePage from './pages/ViewInvoicePage/ViewInvoicePage';\nimport AddCustomerPage from './pages/AddCustomerPage/AddCustomerPage';\nimport GenerateInvoice from './pages/GenerateInvoice/GenerateInvoice';\nimport GenerateReport from './pages/GenerateReport/GenerateReport';\nimport Footer from './pages/Footer/Footer';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from 'react-router-dom';\nimport axios from 'axios';\nimport { useState } from 'react';\nconst api = axios.create({\n  baseURL: `http://3.84.110.201:3001/`\n})\nfunction App() {\n  const [logoutbtn, setlogoutbtn] = useState(false);\n  const logoutbuttonevent = (e) => {\n    setlogoutbtn(e);\n  }\n  return (\n    <Router>\n        <Routes>\n          <Route path=\"/\" element={<LoginPage \n                                      api={api} \n                                      logoutbuttonevent={logoutbuttonevent}\n                                    />\n                                  }\n          />\n          <Route path=\"/main\" element={<NavigationTiles/>}/>\n          <Route path=\"/viewinvoice\" element={<ViewInvoicePage\n                                        api={api}\n                                      />}\n          />\n          <Route path=\"/addcustomerpage\" element={<AddCustomerPage\n                                          api={api}\n                                        />}\n          />\n          <Route path=\"/generateinvoice\" element={<GenerateInvoice\n                                          api={api}\n                                        />}/>\n          <Route path=\"/generatereport\" element={<GenerateReport\n                                          api={api}\n                                        />}/>\n        </Routes>\n        <div>\n          <Footer />\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","/Users/rashmishrees/Desktop/sdd/src/reportWebVitals.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/pages/AddCustomerPage/AddCustomerPage.js",["824","825","826","827","828","829","830","831"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedSearchBar from \"../../components/atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport moment from 'moment';\nimport OpenModal from \"../../components/molecules/OpenModal/OpenModal\";\nimport '../../style/style.css';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport CustomizedBtn from \"../../components/atoms/CustomizedBtn/CustomizedBtn\";\nimport {useNavigate} from 'react-router-dom';\nconst AddCustomerPage = ({\n    api\n}) => {\n    let navigate = useNavigate();\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [customertable, setCustomertable] = useState([]);\n    const [currentCustomerReferenceNo, setCurrentCustomerReferenceNo] = useState('');\n    const [rowdataonbooking, setrowdataonbooking] = useState();\n    const [purchasestatus, setpurchasestatus] = useState();\n    const [searchData, setSearchData] = useState('');\n    const [modalview, setModalview] = useState('');\n    const [purchasemsg, setpurchasemsg] = useState();\n    const setpurchasemsgevent = (e) =>{\n      setpurchasemsg(e)\n    }\n    const fetchpurchasestatusevent = (e) => {\n      api.post('/delivery/getpurchasestatus', {\n        params: {\n          e\n        }\n      })\n      .then((res) => {\n        setpurchasestatus(res.data);\n      })\n    }\n    const currentCustomerRefNo = (e) => {\n        setCurrentCustomerReferenceNo(e)\n    }\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(() => {\n        displaycustomerfollowupevent();\n    }, [])\n    const fetchalldatafromcust = (currentCustomerReferenceNo) => {\n      api.post('/delivery/getalldataofcustomer', {\n        params: {\n          currentCustomerReferenceNo\n        }\n      })\n      .then((res) => {\n        const temprowdataonbooking = res.data;\n          api.put('/jointables/updaterateofdeliverytableonbook', {\n            params: {\n              data:temprowdataonbooking\n            }\n          })\n          api.post('/delivery/getstatecodefromdeliverytableonbook', {\n            params: {\n              data:temprowdataonbooking\n            }\n          })\n          .then((res) => {\n            const data = res.data;\n            for (var i =0; i< data.length; i++){\n              if (data[i].state_code === 29){\n                api.put('/jointables/updatekarnatakagstratesdeliverytableonbook', {\n                  params: {\n                    data:temprowdataonbooking\n                  }\n                })\n                api.put('/jointables/updatefinalamountdeliverytableonbook', {\n                  params: {\n                    data:temprowdataonbooking\n                  }\n                })\n                api.put('/jointables/updatebalanceamountdeliverytableonbook',{\n                  params:{\n                    data:temprowdataonbooking\n                  }\n                })\n                api.put('/jointables/updatepaymentstatusdeliverytableonbook',{\n                  params:{\n                    data:temprowdataonbooking\n                  }\n                })\n            }\n            else {\n              api.put('/jointables/updateotherstatesgstratesdeliverytableonbook', {\n                params: {\n                  data:temprowdataonbooking\n                }\n              })\n              api.put('/jointables/updatefinalamountdeliverytableonbook', {\n                params: {\n                  data:temprowdataonbooking\n                }\n              })\n              api.put('/jointables/updatebalanceamountdeliverytableonbook',{\n                params:{\n                  data:temprowdataonbooking\n                }\n              })\n              api.put('/jointables/updatepaymentstatusdeliverytableonbook',{\n                params:{\n                  data:temprowdataonbooking\n                }\n              })\n          }\n            }\n          })\n          alert(\"Updated successfully\")\n      })\n    }\n    const fetchupdateddatafromcust = (currentCustomerReferenceNo) => {\n      api.post('/delivery/getalldataofcustomer', {\n        params: {\n          currentCustomerReferenceNo\n        }\n      })\n      .then((res) => {\n        setrowdataonbooking(res.data);\n      })\n    }\n    const displaycustomerfollowupevent = () => {\n      api.get('/customer/displayCustomerFollowUpData', {})\n        .then((res) => {\n          const data = res.data;\n          const tempdata = [...new Set(data.map((e) => e.customer_reference_no))];\n          const tabledata = tempdata.map((temp) => {\n              let filterByTempData = data.filter(dataObject => dataObject.customer_reference_no === temp)\n              var fixedstrings = filterByTempData[0];\n              let displayString = filterByTempData.map((x) => {\n                  return x.product + '-' + x.quantity + '(Nos)'\n              })\n              return {\n                  ...fixedstrings,\n                  displayDetails: displayString\n              }\n          })\n          setCustomertable(tabledata);\n        })\n    }\n    const modalviewchange = () => {\n        setChangedmodalview(\"addcustomerform\");\n    }\n    let finalCustomerRefNo = '';\n    const generateCustomerReferenceNo = () => {\n        let s1 = \"CUST2022\";\n        let min = 0;\n        let max = 1000;\n        let random = Math.floor(Math.random() * (max - min + 1)) + min;\n        finalCustomerRefNo = s1 + random;\n    }\n    generateCustomerReferenceNo();\n    let finalcurrentdate = \"\";\n    const currentDate = () => {\n        let date = new Date();\n        finalcurrentdate = moment(date).format('YYYY-MM-DD');\n    }\n    currentDate();\n    useEffect(() => {\n        if (searchData === \"\") {\n            displaycustomerfollowupevent();\n        }\n    }, [searchData])\n    const goEventClicked = () => {\n      api.post('/customer/getCustomerFollowUpData', {\n        params: {\n          searchData\n        }\n      }\n      )\n        .then((res) => {\n          const custdata = res.data;\n          const tempdata = [...new Set(custdata.map((e) => e.customer_reference_no))];\n          const tabledata = tempdata.map((temp) => {\n              let filterByTempData = custdata.filter(dataObject => dataObject.customer_reference_no === temp)\n              var fixedstrings = filterByTempData[0];\n              let displayString = filterByTempData.map((x) => {\n                  return x.product + '-' + x.quantity + '(Nos)'\n              })\n              return {\n                  ...fixedstrings,\n                  displayDetails: displayString\n              }\n          })\n          setCustomertable(tabledata)\n        })\n    }\n    const onHandleChangeEvent = (event) => {\n        setSearchData(event.target.value);\n    }\n    return (\n      <div>\n        <div>\n          <HeaderWithLogout/>\n        </div>\n        <div className=\"addcustpagecontainer\">\n          <div className=\"addcustpagesubcontainer\">\n            <div className=\"pageheading\">\n                Manage Customer Data\n            </div>\n            <CustomizedSearchBar\n                onHandleChangeEvent={onHandleChangeEvent}\n                goEventClicked={goEventClicked}\n                labelname=\"phone number/ customer name\"\n                Btnname=\"search\"\n            />\n            <div className=\"modalandback\">\n              <CustomizedBtn \n              BtnName=\"Add Customer\"\n              onClick={()=>{\n                setModalview(\"addcustomerform\");\n                openevent(true);\n              }}\n              />\n                  <OpenModal\n                    api={api}\n                    modalview={modalview}\n                    displaycustomerfollowupevent={displaycustomerfollowupevent}\n                    open={open}\n                    openevent={openevent}\n                    purchasestatus={purchasestatus}\n                    currentCustomerReferenceNo={currentCustomerReferenceNo}\n                    setpurchasemsgevent={setpurchasemsgevent}\n                />\n                  <p className=\"backarrowcustomerpage\" onClick={() => { navigate('/main') }}><ArrowBackIcon /></p>\n            </div>\n            <div className='table-responsive tableContainer'>\n              <p>\n                  {purchasemsg\n                      ? <p>{purchasemsg}</p>\n                      : <></>\n                  }\n              </p>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Enquiry Date</th>\n                            <th>Customer Name</th>\n                            <th>Customer Address</th>\n                            <th>Phone Number</th>\n                            <th>Phone Number Alter one</th>\n                            <th>Phone Number Alter two</th>\n                            <th>Enquired Product And Details</th>\n                            <th>Comments</th>\n                            <th>Follow Up Call </th>\n                            <th>Final Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            customertable && customertable.length\n                                ? customertable.map((data, i) => (\n                                    <tr key={i}>\n                                        <td>{data.customer_reference_no}</td>\n                                        <td>\n                                            {\n                                                data.booked_date != null ?\n                                                moment(data.booked_date).format('YYYY-MM-DD'):\n                                                data.booked_date\n                                            }\n                                        </td>\n                                        <td>{data.customer_name}</td>\n                                        <td>{data.customer_address}</td>\n                                        <td>{data.phone_number}</td>\n                                        <td>{data.phone_number_alter_one}</td>\n                                        <td>{data.phone_number_alter_two}</td>\n                                        <td>\n                                            <ul>\n                                                {\n                                                    data.displayDetails\n                                                        ?\n                                                        data.displayDetails.map((d) => (\n                                                            <li>{d}</li>\n                                                        ))\n                                                        : <></>\n                                                }\n                                            </ul>\n                                        </td>\n                                        <td>{data.comments}</td>\n                                        <td>{\n                                            data.follow_up_call != null ?\n                                            moment(data.follow_up_call).format('YYYY-MM-DD'):\n                                                data.follow_up_call\n                                        }\n                                        </td>\n                                        <td>{data.final_status}</td>\n                                        <td>\n                                          {data.final_status == \"Booked\"\n                                          ? <CustomizedBtn \n                                          BtnName=\"View\"\n                                          onClick={()=>{\n                                            setModalview(\"customerdetailsform\");\n                                            currentCustomerRefNo(data.customer_reference_no);\n                                            fetchpurchasestatusevent(data.customer_reference_no);\n                                            openevent(true);\n                                          }}\n                                          />\n                                          :\n                                          <div className=\"btndesign\">\n                                            <span className=\"cbtn\"><CustomizedBtn \n                                              BtnName=\"Update Booking\"\n                                              onClick={()=>{\n                                                fetchalldatafromcust(data.customer_reference_no);\n                                              }}\n                                              />\n                                              </span>\n                                              <span className=\"cbtn\"><CustomizedBtn \n                                              BtnName=\"Book Order\"\n                                              onClick={()=>{\n                                                currentCustomerRefNo(data.customer_reference_no);\n                                                // fetchalldatafromcust(data.customer_reference_no);\n                                                fetchupdateddatafromcust(data.customer_reference_no);\n                                                setModalview(\"customerdetailsform\");\n                                                openevent(true);\n                                              }}\n                                              />\n                                              </span>\n                                          </div>\n                                          }\n                                        </td>\n                                    </tr>\n                                ))\n                                : <tr>\n                                    <td colSpan={12}>No Record!</td>\n                                  </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n            </div>\n        </div>\n        </div>\n    );\n}\nexport default AddCustomerPage;","/Users/rashmishrees/Desktop/sdd/src/pages/ViewInvoicePage/ViewInvoicePage.js",["832","833","834"],[],"import React, { useState } from \"react\";\nimport CustomizedSearchBar from '../../components/atoms/CustomizedSearchBar/CustomizedSearchBar';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport OpenModal from '../../components/molecules/OpenModal/OpenModal';\nimport { useNavigate } from 'react-router-dom';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport CustomizedBtn from \"../../components/atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport FullScreenModal from \"../../components/molecules/FullScreenModal/FullScreenModal\";\nimport '../../style/style.css';\n\nconst ViewInvoicePage = ({\n    api\n}) => {\n    const [invoiceData, setInvoiceData] = useState([]);\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [searchData, setSearchData] = useState('');\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    let navigate = useNavigate();\n    const onHandleChangeEvent = (event) => {\n        setSearchData(event.target.value);\n    }\n    const goEventClicked = () => {\n        api.post('/delivery/getInvoices', {\n            params: {\n                searchData\n            }\n        }\n        )\n        .then((res) => {\n            setInvoiceData(res.data);\n        })\n    }\n    const openinvoiceevent = (invoiceNo) => {\n        api.post('/delivery/getDeliveryReportData', {\n            params: {\n                invoiceNo\n            }\n        }\n        )\n            .then((res) => {\n                setInvoiceFormData(res.data);\n            })\n    }\n    return (\n        <div>\n            <div>\n                <HeaderWithLogout />\n            </div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                invoiceFormData={invoiceFormData}\n            />\n            <div className=\"viewInvoicePageContainer\">\n                <div className=\"pageheading\">\n                    View Your Invoices\n                </div>\n                <CustomizedSearchBar\n                    onHandleChangeEvent={onHandleChangeEvent}\n                    type=\"search\"\n                    goEventClicked={goEventClicked}\n                    labelname=\"phone number / Invoice Number\"\n                    Btnname=\"search\"\n                />\n                <div className=\"displayContainer\">\n                    <div className=\"backarrow\">\n                        <p\n                            onClick={() => {\n                                navigate(\"/main\");\n                            }}\n                        ><ArrowBackIcon /></p>\n                    </div>\n                    <div className=\"table-responsive\">\n                        {\n                            invoiceData.length != 0 &&\n                            <table className=\"table table-striped table-bordered\">\n                                <thead className=\"theadalter\">\n                                    <tr>\n                                        <th>Invoice date</th>\n                                        <th>Invoice no</th>\n                                        <th>Customer name</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        invoiceData.map((data, i) => (\n                                            <tr key={i}>\n                                                <td>\n                                                    {\n                                                        data.delivery_date != null ?\n                                                        moment(data.delivery_date).format('YYYY-MM-DD'):\n                                                        data.delivery_date\n                                                    }\n                                                </td>\n                                                <td>{data.invoice_no}</td>\n                                                <td>{data.customer_name}</td>\n                                                <td>\n                                                <div className='btnstyle'>\n                                                    <button \n                                                        id=\"btn\"\n                                                        // type=\"button\" \n                                                        data-bs-toggle=\"modal\"\n                                                        data-bs-target=\"#exampleModal\"\n                                                        onClick={()=>{\n                                                            openinvoiceevent(data.invoice_no);\n                                                        }}\n                                                        class=\"btnstyle\"\n                                                        >\n                                                            View Invoice\n                                                    </button>\n                                                </div>\n                                                    <FullScreenModal \n                                                       api={api}\n                                                    //    modalview={modalview}\n                                                    //    open={open}\n                                                    //    openevent={openevent}\n                                                       invoiceFormData={invoiceFormData}                                                    />\n                                                {/* <CustomizedBtn \n                                                    BtnName=\"View Invoice\"\n                                                    onClick={()=>{\n                                                        openinvoiceevent(data.invoice_no);\n                                                        setModalview(\"invoiceformat\");\n                                                        openevent(true);\n                                                    }}\n                                                /> */}\n                                                </td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                        }\n                    </div>\n                    {\n                        invoiceData.length === 0 &&\n                        <p> no data found! </p>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default ViewInvoicePage;","/Users/rashmishrees/Desktop/sdd/src/pages/LoginPage/LoginPage.js",["835"],[],"import React, { useState } from \"react\";\nimport TextAndTextInput from \"../../components/molecules/TextAndTextInput/TextAndTextInput\";\nimport { useNavigate } from 'react-router-dom';\nimport Header from \"../Header/Header\";\nimport '../../style/style.css';\n\nconst LoginPage = ({ \n  api,\n  logoutbuttonevent\n }) => {\n  let navigate = useNavigate();\n  const [logindata, setlogindata] = useState();\n  const onChangeEvent = (event) => {\n    setlogindata({ ...logindata, [event.target.name]: event.target.value });\n  }\n  const onSubmitLogin = () => {\n    api.post('/users/login', {\n      params: {\n        logindata\n      }\n    }\n    )\n      .then((res) => {\n        if (res) {\n          logoutbuttonevent(true);\n          navigate('/main');\n        }\n      })\n  }\n  return (\n    <div>\n      <div>\n        <Header />\n      </div>\n      <div className=\"loginPageContainer\">\n        <div className=\"loginPageContainerChild\">\n          <div className=\"usernameandpass\">\n            <TextAndTextInput\n              onChangeEvent={onChangeEvent}\n              type=\"username\"\n              typeofinput=\"text\"\n              textname=\"USER NAME:-\" />\n            <TextAndTextInput\n              onChangeEvent={onChangeEvent}\n              type=\"password\"\n              typeofinput=\"password\"\n              textname=\"PASSWORD:-\" />\n          </div>\n          <div className=\"loginPageBtnContainer\">\n            <a\n              onClick={() => {\n                onSubmitLogin();\n              }}\n            >\n              Login\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default LoginPage;","/Users/rashmishrees/Desktop/sdd/src/pages/NavigationTiles/NavigationTiles.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/pages/GenerateInvoice/GenerateInvoice.js",["836"],[],"/Users/rashmishrees/Desktop/sdd/src/pages/Footer/Footer.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/pages/GenerateReport/GenerateReport.js",["837","838","839","840","841","842"],[],"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport TextAndSelect from '../../components/molecules/TextAndSelect/TextAndSelect';\nimport DisplayCustomerTable from '../../components/molecules/DisplayCustomerTable/DisplayCustomerTable';\nimport DisplayDeliveryReportsTable from '../../components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable';\nimport DisplayProductDetailsTable from '../../components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable';\nimport DisplayDealersDetailsTable from '../../components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable';\nimport DownloadCustomer from '../../components/molecules/Download/DownloadCustomer';\nimport DownloadDelivery from '../../components/molecules/Download/DownloadDelivery';\nimport { useNavigate } from 'react-router-dom';\nimport HeaderWithLogout from '../../pages/Header/HeaderWithLogout';\nimport '../../style/style.css';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  let navigate = useNavigate();\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\nconst GenerateReport = ({\n  modalview,\n  api\n}) => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const style = {\n    color: 'black'\n  }\n\n  const [statusselect, setstatusselect] = React.useState(['Booked', 'Cancelled', 'Follow Up In Progress']);\n  const [deliverystatus, setDeliverystatus] = React.useState(['Delivered', 'Not Delivered', 'Cancelled']);\n  const [paymentstatus, setpaymentstatus] = React.useState(['Paid', 'Pending']);\n  const [productstatus, setProductstatus] = React.useState(['Available', 'Not Available'])\n  const [gstinstatus, setGstinstatus] = React.useState(['Active', 'In Active']);\n  const [currentstatus, setCurrentstatus] = React.useState('');\n  const [currentstatusAlter, setCurrentstatusAlter] = React.useState('');\n  const [tabledata, setTabledata] = React.useState({});\n  const setTableDataEvent = (e) => {\n    setTabledata(e);\n  }\n  const currentStatusEvent = (e) => {\n    setCurrentstatus(e);\n  }\n  const currentPaymentStatusEvent = (e) => {\n    setCurrentstatusAlter(e)\n  }\n  let navigate = useNavigate();\n  return (\n    <div>\n      <div>\n        <HeaderWithLogout />\n      </div>\n      <div className=\"reportcontainer\">\n        <div className=\"pageheading\">\n          Generate Report\n        </div>\n        <div className=\"backarrow generatereportbackarrow\">\n          <p onClick={() => { navigate('/main') }}><ArrowBackIcon /></p>\n        </div>\n        <Box sx={{ width: '100%', color: 'white' }}>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <Tabs variant=\"scrollable\" value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n              <Tab style={style} label=\"Delivery Reports\" {...a11yProps(0)} />\n              <Tab style={style} label=\"Customer Follow Up Report\" {...a11yProps(1)} />\n              <Tab style={style} label=\"Product Details Report\" {...a11yProps(2)} />\n              <Tab style={style} label=\"Dealers Details Report\" {...a11yProps(3)} />\n            </Tabs>\n          </Box>\n          <TabPanel value={value} index={0}>\n            <div className='tabpanelheader'>\n              <DownloadDelivery\n                setTableDataEvent={setTableDataEvent}\n              />\n              <div classname=\"paymentdeliveryfiltercontainer\">\n                <TextAndSelect\n                  currentStatusEvent={currentPaymentStatusEvent}\n                  statusselect={paymentstatus}\n                  selectlabelname=\"Payment status\"\n                />\n                <TextAndSelect\n                  currentStatusEvent={currentStatusEvent}\n                  statusselect={deliverystatus}\n                  selectlabelname=\"Delivery status\"\n                />\n              </div>\n            </div>\n            <DisplayDeliveryReportsTable\n              api={api}\n              setTableDataEvent={setTableDataEvent}\n              tabledata={tabledata}\n              modalview={modalview}\n              deliverystatus={currentstatus}\n              paymentstatus={currentstatusAlter}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <div className='tabpanelheader'>\n              <DownloadCustomer\n                setTableDataEvent={setTableDataEvent}\n              />\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={statusselect}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayCustomerTable\n              api={api}\n              setTableDataEvent={setTableDataEvent}\n              modalview={modalview}\n              tabledata={tabledata}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <div className='tabpanelheader'>\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={productstatus}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayProductDetailsTable\n              api={api}\n              modalview={modalview}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={3}>\n            <div className='tabpanelheader'>\n              <TextAndSelect\n                currentStatusEvent={currentStatusEvent}\n                statusselect={gstinstatus}\n                selectlabelname=\"final status\"\n              />\n            </div>\n            <DisplayDealersDetailsTable\n              api={api}\n              modalview={modalview}\n              currentstatus={currentstatus}\n            />\n          </TabPanel>\n        </Box>\n      </div>\n    </div>\n  );\n}\nexport default GenerateReport;","/Users/rashmishrees/Desktop/sdd/src/pages/Header/HeaderWithLogout.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/pages/Header/Header.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/OpenModal/OpenModal.js",["843"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport InvoiceFormat from '../InvoiceFormat/InvoiceFormat';\nimport AddCustomersForm from '../AddCustomersForm/AddCustomersForm';\nimport AddFewCustomersForm from '../AddFewCustomersForm/AddFewCustomersForm';\nimport CustomerInvoiceForm from '../CustomerInvoiceForm/CustomerInvoiceForm';\nimport DealersInvoiceForm from '../DealersInvoiceForm/DealersInvoiceForm';\nimport DealersDetailsForm from '../DealersDetailsForm/DealersDetailsForm';\nimport ProductsDetailsForm from '../ProductsDetailsForm/ProductsDetailsForm';\nimport DeliveryDetailsForm from '../DeliveryDetailsForm/DeliveryDetailsForm';\nimport AddProductForm from '../AddProductForm/AddProductForm';\nimport AddDealersForm from '../AddDealersForm/AddDealersForm';\nimport CustomerFollowUpForm from '../CustomerFollowUpForm/CustomerFollowUpForm';\nimport DealersInvoiceFormGenerate from '../../molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate';\nimport DealersInvoicesListForm from '../../molecules/DealersInvoicesListForm/DealersInvoicesListForm';\nimport EditDealersReportForm from '../../molecules/EditDealersReportForm/EditDealersReportForm';\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 900,\n  height: 700,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  overflow: \"scroll\"\n};\nconst OpenModal = ({\n  api,\n  displayDealersDetailsData,\n  displayProductDetailsData,\n  displayDeliveryReportsData,\n  invoiceFormData,\n  modalbuttonname,\n  modalview,\n  rowdata,\n  currentCustomerReferenceNo,\n  displayCustomerFollowUpData,\n  displaycustomerfollowupevent,\n  custrefno,\n  openinvoiceevent,\n  invoiceno,\n  formdisplaydata,\n  dealersdata,\n  deliveryinvoices,\n  fetchdealersdatatoverify,\n  changeevent,\n  verificationstatus,\n  currentInvoiceno,\n  purchasestatus,\n  open,\n  openevent,\n  currentCustomerReferenceNoCustomerInvoice,\n  setpurchasemsgevent,\n  fetchinvoicesfromdelivery\n}) => {\n  const handleClose = () => {\n    openevent(false);\n    if (modalview === 'productdetailsform') {\n      displayProductDetailsData();\n    }\n    else if (modalview === 'deliverydetailsform') {\n      displayDeliveryReportsData();\n    }\n    else if (modalview === 'editdealersreport') {\n      displayDealersDetailsData();\n    }\n    else if (modalview === 'addproductform') {\n      displayProductDetailsData();\n    }\n    else if (modalview === 'adddealersform') {\n      displayDealersDetailsData();\n    }\n    else if (modalview === 'customerfollowupform') {\n      displayCustomerFollowUpData();\n    }\n    else if (modalview === 'customerdetailsform') {\n      displaycustomerfollowupevent();\n    }\n    else if (modalview === 'addcustomerform') {\n      displaycustomerfollowupevent();\n    }\n  };\n  return (\n    <div>\n      <div className='modalbutton'>\n      </div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {\n              modalview === 'invoiceformat' &&\n              <InvoiceFormat\n                api={api}\n                invoiceFormData={invoiceFormData}\n                invoiceno={invoiceno}\n              />\n            }\n            {\n              modalview === 'customerdetailsform' &&\n              <AddCustomersForm\n                setpurchasemsgevent={setpurchasemsgevent}\n                api={api}\n                purchasestatus={purchasestatus}\n                handleClose={handleClose}\n                displayCustomerFollowUpData={displayCustomerFollowUpData}\n                currentCustomerReferenceNo={currentCustomerReferenceNo}\n                displaycustomerfollowupevent={displaycustomerfollowupevent}\n              />\n            }\n            {\n              modalview === 'addcustomerform' &&\n              <AddFewCustomersForm\n                api={api}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'customerInvoiceForm' &&\n              <CustomerInvoiceForm\n                api={api}\n                invoiceFormData={invoiceFormData}\n                custrefno={custrefno}\n                currentCustomerReferenceNoCustomerInvoice={currentCustomerReferenceNoCustomerInvoice}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'DealersInvoiceForm' &&\n              <DealersInvoiceForm\n                api={api}\n                dealersdata={dealersdata}\n                invoiceFormData={invoiceFormData}\n                handleClose={handleClose}\n                formdisplaydata={formdisplaydata}\n              />\n            }\n            {\n              modalview === 'generatecustomerinvoiceform' &&\n              <InvoiceFormat\n                api={api}\n                invoiceFormData={invoiceFormData}\n                custrefno={custrefno}\n                openinvoiceevent={openinvoiceevent}\n              />\n            }\n\n            {\n              modalview === 'DealersInvoiceFormGenerateFormat' &&\n              <DealersInvoiceFormGenerate\n                api={api}\n                modalview={modalview}\n                invoiceFormData={invoiceFormData}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n              />\n            }\n            {\n              modalview === \"DealersInvoicesListForm\" &&\n              <DealersInvoicesListForm\n                api={api}\n                deliveryinvoices={deliveryinvoices}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === \"dealersdetailsform\" &&\n              <DealersDetailsForm\n                fetchinvoicesfromdelivery={fetchinvoicesfromdelivery}\n                api={api}\n                currentInvoiceno={currentInvoiceno}\n                verificationstatus={verificationstatus}\n                changeevent={changeevent}\n                handleClose={handleClose}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n              />\n            }\n            {\n              modalview === 'deliverydetailsform' &&\n              <DeliveryDetailsForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'customerfollowupform' &&\n              <CustomerFollowUpForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'productdetailsform' &&\n              <ProductsDetailsForm\n                handleClose={handleClose}\n                rowdata={rowdata}\n              />\n            }\n            {\n              modalview === 'editdealersreport' &&\n              <EditDealersReportForm\n                rowdata={rowdata}\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'adddealersform' &&\n              <AddDealersForm\n                handleClose={handleClose}\n              />\n            }\n            {\n              modalview === 'addproductform' &&\n              <AddProductForm\n                handleClose={handleClose}\n              />\n            }\n          </Typography>\n        </Box>\n      </Modal>\n    </div>\n  );\n}\nexport default OpenModal;","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCard/CustomizedCard.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/TextAndTextInput/TextAndTextInput.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedBtn/CustomizedBtn.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedSearchBar/CustomizedSearchBar.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/organisms/DealersInvoice/DealersInvoice.js",["844","845","846"],[],"import React,{useState, useEffect} from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport DealersInvoicesListForm from \"../../molecules/DealersInvoicesListForm/DealersInvoicesListForm\";\nimport '../../../style/style.css';\n\nconst DealersInvoice = ({\n    searchData,\n    onHandleChangeEvent,\n    api\n}) => {\n    const [dealersDetails, setdealersDetails] = useState({});\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    const displayDealersDetailsDatawithstatusactiveevent = () =>{\n        api.get('dealers/displayDealersDetailsDatawithstatusactive')\n        .then((res)=>{\n            setdealersDetails(res.data);\n        })\n    }\n    useEffect(()=>{\n        displayDealersDetailsDatawithstatusactiveevent();\n    },[])\n    const openinvoiceevent = (gstin_number) => {\n        api.post('dealers/getdealersfromgst',{\n            params:{\n                gstin_Number:gstin_number\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n    }\n    const fetchdeliverydatamatchinggstevent = (gstin_number) => {\n        api.post('delivery/fetchdeliverymatchinggstno',{\n            params:{\n                gst:gstin_number\n            }\n        })\n        .then((res)=>{\n            if(res.data && res.data.length == 0){\n                res.data.push(\n                    {'state':''})\n            }\n            setInvoiceFormData(res.data);\n        })\n    }\n    useEffect(() => {\n        if (searchData === \"\") {\n            displayDealersDetailsDatawithstatusactiveevent();\n        }\n    }, [searchData])\n    const goEventClicked = () => {\n        api.post('dealers/getDealersDetailsData',{\n            params:{\n                searchData\n            }\n        })\n        .then((res)=>{\n            setdealersDetails(res.data);\n        })\n    }\n    const [dealersdata,setdealersdata] = useState();\n    const dealersdataevent = (e) => {\n        setdealersdata(e)\n    };\n    const [deliveryinvoices, setdeliveryinvoices] = useState();\n    const fetchinvoicesfromdelivery = (e) => {\n        api.post('delivery/fetchinvoicesfromdelivery', {\n            params:{\n                gst:e\n            }\n        })\n        .then((res)=>{\n            setdeliveryinvoices(res.data);\n        })\n    }\n    return(\n        <div className=\"generateinvoicecontainer\">\n            <OpenModal \n                api={api}\n                open={open}\n                openevent={openevent}\n                dealersdata={dealersdata}\n                modalview={modalview}\n                invoiceFormData={invoiceFormData} \n                deliveryinvoices={deliveryinvoices}\n            />\n            <CustomizedSearchBar \n                onHandleChangeEvent={onHandleChangeEvent}\n                goEventClicked={goEventClicked}\n                labelname=\"phone number/ name\" \n                Btnname=\"Search\"\n            />\n            <div>\n            <DealersInvoicesListForm \n                api={api}\n                deliveryinvoices={deliveryinvoices}\n                fetchinvoicesfromdelivery={fetchinvoicesfromdelivery}\n            />\n            </div>\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>GSTIN Number</th>\n                            <th>Enterprise Name</th>\n                            <th>Enterprise Address</th>\n                            <th>Enterprise State</th>\n                            <th>Proprietor Name</th>\n                            <th>Proprietor Phone Number</th>\n                            <th>GST Status</th>\n                            <th>Action</th>\n                            <th>Generate</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        dealersDetails && dealersDetails.length \n                        ? dealersDetails.map((data, i)=>(\n                            <tr key={i}>\n                                <td>{data.gstin_number}</td>\n                                <td>{data.enterprise_name}</td>\n                                <td>{data.enterprise_address}</td>\n                                <td>{data.enterprise_state}</td>\n                                <td>{data.proprietor_name}</td>\n                                <td>{data.proprietor_phone_number}</td>\n                                <td>{data.gstin_status}</td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"Generate Invoice\"\n                                        onClick={()=>{\n                                            dealersdataevent(data);\n                                            openinvoiceevent(data.gstin_number);\n                                            fetchdeliverydatamatchinggstevent(data.gstin_number);\n                                            setModalview(\"DealersInvoiceForm\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                </td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"View Invoices\"\n                                        onClick={()=>{\n                                            dealersdataevent(data);\n                                            openinvoiceevent(data.gstin_number);\n                                            fetchdeliverydatamatchinggstevent(data.gstin_number);\n                                            fetchinvoicesfromdelivery(data.gstin_number);\n                                        }}\n                                    />\n                                </td>\n                            </tr>\n                        ))\n                        : \n                            <tr>\n                                <td colspan=\"15\">No Record!</td>\n                            </tr>\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoice;","/Users/rashmishrees/Desktop/sdd/src/components/organisms/CustomerInvoice/CustomerInvoice.js",["847","848","849","850","851","852","853","854"],[],"import React, { useState, useEffect } from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport FullScreenModal from \"../../molecules/FullScreenModal/FullScreenModal\";\nimport '../../../style/style.css';\n\nconst CustomerInvoice = ({\n    searchData,\n    onHandleChangeEvent,\n    api\n}) => {\n    const [customertable, setCustomertable] = useState([]);\n    const [invoiceFormData, setInvoiceFormData] = useState([]);\n    const [currentinvoiceno, setcurrentinvoiceno] = useState();\n    const [currentCustomerReferenceNoCustomerInvoice, setcurrentCustomerReferenceNoCustomerInvoice] = useState();\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) =>{\n      setOpen(e)\n    }\n    useEffect(() => {\n        displayBookedCustomeerDataEvent();\n    }, [])\n    const displayBookedCustomeerDataEvent = () => {\n        api.post('customer/displayBookedCustomeerData', {\n            params:{\n                final_status: 'Booked'\n            }\n        })\n        .then((res)=>{\n            setCustomertable(res.data);\n        })\n    }\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const modalviewchange = () => {\n        setChangedmodalview(\"generatecustomerinvoiceform\");\n    }\n    const openCustomerInvoiceEvent = (customer_reference_no, product_hsn_code) => {\n        api.post('delivery/getDeliveryDataForVerification', {\n            params:{\n                customer_reference_no: customer_reference_no,\n                    product_hsn_code:product_hsn_code\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n        }\n    const openinvoiceevent = (customer_reference_no) => {\n        api.post('delivery/getDeliveryReportData',{\n            params:{\n                customer_reference_no\n            }\n        })\n        .then((res)=>{\n            setInvoiceFormData(res.data);\n        })\n        }\n    \n    const [customerrefno, setcustomerrefno] = useState();\n    useEffect(()=>{\n        invoiceFormData.map((data)=>{\n            setcustomerrefno(data.customer_reference_no);\n            setcurrentinvoiceno(data.invoice_no);\n        })\n    },[invoiceFormData])\n    const goEventClicked = () => {\n        api.post('jointables/getCustomerFollowUpDataBooked', {\n            params:{\n                phoneno: searchData,\n                customer_name: searchData,\n                phone_number_alter_one:searchData,\n                phone_number_alter_two:searchData\n            }\n        })\n        .then((res)=>{\n            setCustomertable(res.data);\n        })\n    }\n    useEffect(() => {\n        if (searchData === \"\") {\n            displayBookedCustomeerDataEvent();\n        }\n    }, [searchData])\n    return (\n        <div className=\"generateinvoicecontainer\">\n            <CustomizedSearchBar\n                onHandleChangeEvent={onHandleChangeEvent}\n                goEventClicked={goEventClicked}\n                labelname=\"phone number/ customer name\"\n                Btnname=\"search\"\n            />\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                invoiceFormData={invoiceFormData}\n                openinvoiceevent={openinvoiceevent}\n                currentCustomerReferenceNoCustomerInvoice={currentCustomerReferenceNoCustomerInvoice}\n            />\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Customer Reference Number</th>\n                            <th>Enquiry Date</th>\n                            <th>Customer Name</th>\n                            <th>Customer Address</th>\n                            <th>Phone Number</th>\n                            <th>Phone Number Alter - 1</th>\n                            <th>Phone Number Alter - 2</th>\n                            <th>Enquired Product Hsn Code</th>\n                            <th>Enquired Product</th>\n                            <th>Quantity</th>\n                            <th>Comments</th>\n                            <th>Follow Up Call </th>\n                            <th>Final Status</th>\n                            <th>Action</th>\n                            <th>Generate</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            customertable && customertable.length \n                            ? \n                            customertable.map((data, i) => (\n                                data.from_dealer == 1 \n                                ? <></>\n                                :  <tr key={i}>\n                                <td>{data.customer_reference_no}</td>\n                                <td>{\n                                    data.enquiry_date != null ?\n                                    moment(data.enquiry_date).format('YYYY-MM-DD'):\n                                    data.enquiry_date\n                                }\n                                </td>\n                                <td>{data.customer_name}</td>\n                                <td>{data.customer_address}</td>\n                                <td>{data.phone_number}</td>\n                                <td>{data.phone_number_alter_one}</td>\n                                <td>{data.phone_number_alter_two}</td>\n                                <td>{data.product_hsn_code}</td>\n                                <td>{data.product}</td>\n                                <td>{data.quantity}</td>\n                                <td>{data.comments}</td>\n                                <td>{\n                                    data.follow_up_call != null ?\n                                    moment(data.follow_up_call).format('YYYY-MM-DD'):\n                                    data.follow_up_call \n                                }\n                                </td>\n                                <td>{data.final_status}</td>\n                                <td>\n                                    <CustomizedBtn \n                                        BtnName=\"Verify Invoice\"\n                                        onClick={()=>{\n                                            setcurrentCustomerReferenceNoCustomerInvoice(data.customer_reference_no);\n                                            openCustomerInvoiceEvent(data.customer_reference_no, data.product_hsn_code);\n                                            setModalview(\"customerInvoiceForm\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                </td>\n                                <td>\n                                <div className='btnstyle'>\n                                <button \n                                    id=\"btn\"\n                                    // type=\"button\" \n                                    data-bs-toggle=\"modal\"\n                                    data-bs-target=\"#exampleModal\"\n                                    onClick={()=>{\n                                        openinvoiceevent(data.customer_reference_no);\n                                    }}\n                                    class=\"btnstyle\"\n                                    >\n                                        Generate Invoice\n                                </button>\n                                </div>\n                                <FullScreenModal \n                                    api={api}\n                                    modalview={modalview}\n                                    open={open}\n                                    openevent={openevent}\n                                    invoiceFormData={invoiceFormData}\n                                    openinvoiceevent={openinvoiceevent}\n                                    currentCustomerReferenceNoCustomerInvoice={currentCustomerReferenceNoCustomerInvoice}\n                                />\n                                {/* <CustomizedBtn \n                                        BtnName=\"Generate Invoice\"\n                                        onClick={()=>{\n                                            openinvoiceevent(data.customer_reference_no);\n                                            setModalview(\"generatecustomerinvoiceform\");\n                                            openevent(true);\n                                        }}\n                                    />\n                                 */}\n                                    \n                                </td>\n                                </tr>\n                              ))\n                              : <tr>\n                                <td colspan=\"15\">No Record!</td>\n                              </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default CustomerInvoice;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayCustomerTable/DisplayCustomerTable.js",["855","856","857"],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/Download/DownloadCustomer.js",["858","859","860","861","862","863","864","865","866","867","868","869"],[],"import React, { useState } from 'react';\nimport CustomizedText from '../../atoms/CustomizedText/CustomizedText';\nimport CustomizedDownload from '../../atoms/CustomizedDownload/CustomizedDownload';\nimport CustomizedDatepicker from '../../atoms/CustomizedDatepicker/CustomizedDatepicker';\nimport SearchIcon from '@mui/icons-material/Search';\nimport moment from 'moment';\nimport axios from 'axios';\nconst DownloadCustomer = ({setTableDataEvent}) => {\n  const [fromselecteddate, fromsetselecteddate] = useState('');\n  const [toselecteddate, tosetselecteddate] = useState('');\n  \n  const fromselecteddateevent = (e) => {\n    fromsetselecteddate(e);\n  }\n  const toselecteddateevent = (e) => {\n    tosetselecteddate(e);\n  }\n  const searchbuttonclicked = () => {\n    axios.post('http://3.84.110.201:3001/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromselecteddate,\n        todate:toselecteddate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const weeklysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n\n    var firstday = new Date(curr.setDate(first));\n    var lastday = new Date(curr.setDate(last));\n\n    firstday = firstday.toString();\n    firstday = firstday.split(\" \"); \n    var fromdate = firstday[3]+\"-\"+months[firstday[1]]+\"-\"+firstday[2];\n    \n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const monthlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n\n    axios.post('http://3.84.110.201:3001/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const yearlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+\"01\"+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/customer/customizeddatefetchcustomerdata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n    return(\n        <div className='fromtodownloadlinkcontainer'>\n        <div className='fromtodownloadcontainer'>\n          <div className='fromcontainer'>\n            <CustomizedText textname=\"from :- \" />\n            <CustomizedDatepicker selecteddateevent={fromselecteddateevent} />\n          </div>\n          <div className='tocontainer'>\n            <CustomizedText textname=\"to :-\" />\n            <CustomizedDatepicker selecteddateevent={toselecteddateevent} />\n          </div>\n          <SearchIcon className='searchicon' onClick={searchbuttonclicked} />\n        </div>\n        <div>\n          <span className='atagfirst'>\n            <a href='#' onClick={weeklysearchclicked} >weekly</a> \n          </span>\n          <span className='atagsecond'>\n            <a href='#' onClick={monthlysearchclicked} >monthly</a>\n          </span>\n          <span className='atagthird'>\n            <a href='#' onClick={yearlysearchclicked} >yearly</a>\n          </span>\n        </div>\n        </div>\n\n    );\n}\nexport default DownloadCustomer;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayDeliveryReportsTable/DisplayDeliveryReportsTable.js",["870","871","872","873"],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayProductDetailsTable/DisplayProductDetailsTable.js",["874","875","876","877","878","879"],[],"import React, { useState, useEffect } from 'react';\nimport CustomizedEditIcon from '../../atoms/CustomizedEditIcon/CustomizedEditIcon';\nimport OpenModal from '../OpenModal/OpenModal';\nimport CustomizedSearchBar from '../../atoms/CustomizedSearchBar/CustomizedSearchBar';\nimport CustomizedBtn from '../../atoms/CustomizedBtn/CustomizedBtn';\nimport axios from 'axios';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport '../../../style/style.css';\n\nconst DisplayProductDetailsTable = ({\n    currentstatus,\n}) => {\n    const [productsdetailsdata, setProductsdetailsdata] = useState({});\n    const [filterflag, setfilterflag] = useState(false);\n    const [editRow, setEditRow] = useState(null);\n    const [rowdata, setrowdata] = useState({});\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const openevent = (e) => {\n        setOpen(e)\n    }\n    const [editFormData, setEditFormData] = useState({\n        product_hsn_code: \"\",\n        product_name: \"\",\n        product_description: \"\",\n        unit_of_measure: \"\",\n        rate_per_unit: \"\",\n        gst_rate: \"\",\n        product_status: \"\",\n        stock: \"\"\n    })\n    useEffect(() => {\n        if (filterflag && currentstatus) {\n            productstatusfilter();\n        }\n        else {\n            displayProductDetailsData();\n        }\n    }, [currentstatus])\n    const modalviewchange = () => {\n        setChangedmodalview(\"addproductform\");\n    }\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    const displayProductDetailsData = () => {\n        axios.get(`http://3.84.110.201:3001/product/displayProductDetailsData`)\n            .then((res) => {\n                setProductsdetailsdata(res.data);\n                setfilterflag(true);\n            })\n    }\n    useEffect(() => {\n        if (searchvalue === \"\") {\n            displayProductDetailsData();\n        }\n    }, [searchvalue])\n    const productstatusfilter = () => {\n        axios.post(`http://3.84.110.201:3001/product/productstatusfilter`, {\n            params: {\n                status: currentstatus\n            }\n        })\n            .then((res) => {\n                setProductsdetailsdata(res.data);\n            })\n    }\n    const editevent = (event, data) => {\n        setEditRow(data.product_hsn_code);\n        const formValues = {\n            product_hsn_code: data.product_hsn_code,\n            product_name: data.product_name,\n            product_description: data.product_description,\n            unit_of_measure: data.unit_of_measure,\n            rate_per_unit: data.rate_per_unit,\n            gst_rate: data.gst_rate,\n            product_status: data.product_status,\n            stock: data.stock\n        }\n        setEditFormData(formValues);\n    }\n    const deleteevent = (id) => {\n        axios.delete(`http://3.84.110.201:3001/product/deletefromproductdetailstable`,\n            {\n                data: {\n                    id: id\n                }\n            })\n            .then((res) => {\n                displayProductDetailsData();\n            })\n    }\n    const searchHandle = (e) => {\n        setSearchvalue(e.target.value);\n    }\n    const searchclicked = () => {\n        axios.post(`http://3.84.110.201:3001/product/getProductDetailsData`, {\n            params: {\n                product_name: searchvalue,\n                product_hsn: searchvalue\n            }\n        })\n            .then((res) => {\n                setProductsdetailsdata(res.data);\n            })\n    }\n    return (\n        <div>\n            <OpenModal\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayProductDetailsData={displayProductDetailsData}\n                rowdata={rowdata}\n            />\n            <CustomizedSearchBar\n                labelname=\"product name / product hsn\"\n                Btnname=\"search\"\n                onHandleChangeEvent={searchHandle}\n                goEventClicked={searchclicked}\n            />\n            <div className='adddealersbtnstyle'>\n                <CustomizedBtn\n                    BtnName=\"Add Product\"\n                    onClick={() => {\n                        setmodalview(\"addproductform\");\n                        openevent(true);\n                    }}\n                />\n            </div>\n            <div className='table-responsive'>\n                <form>\n                    <table className='table table-striped table-bordered tablebackground'>\n                        <thead className='theadalter'>\n                            <tr>\n                                <th>Product HSN code</th>\n                                <th>Product Name</th>\n                                <th>Product Description</th>\n                                <th>Unit of Measure</th>\n                                <th>Rate per unit (₹)</th>\n                                <th>GST Rate (%)</th>\n                                <th>Product Status</th>\n                                <th>Product Discount (%)</th>\n                                <th>Stock</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                productsdetailsdata && productsdetailsdata.length\n                                    ? productsdetailsdata.map((data) => (\n                                        <tr>\n                                            <td>{data.product_hsn_code}</td>\n                                            <td>{data.product_name}</td>\n                                            <td>{data.product_description}</td>\n                                            <td>{data.unit_of_measure}</td>\n                                            <td>{data.rate_per_unit}</td>\n                                            <td>{data.gst_rate}</td>\n                                            <td>{data.product_status}</td>\n                                            <td>{data.discount}</td>\n                                            <td>{data.stock}</td>\n                                            <td>\n                                                <div className='editdeletecontainer'>\n                                                    <CustomizedEditIcon\n                                                        onClick={() => {\n                                                            rowdataevent(data);\n                                                            setmodalview(\"productdetailsform\");\n                                                            openevent(true);\n                                                        }}\n                                                    />\n                                                    <div\n                                                        className=\"deleteiconcontainer\"\n                                                        data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\n                                                    ><DeleteIcon id=\"deleteicon\" />\n                                                    </div>\n                                                    <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                                        <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\n                                                            <div class=\"modal-content\">\n                                                                <div class=\"modal-body\">\n                                                                    <p>Are you sure you want to delete ?</p>\n                                                                </div>\n                                                                <div class=\"modal-footer\">\n                                                                    <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\" onClick={() => (deleteevent(data.product_hsn_code))}  >Confirm</button>\n                                                                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    ))\n                                    :\n                                    <tr>\n                                        <td colSpan={9}>No Record!</td>\n                                    </tr>\n                            }\n\n                        </tbody>\n                    </table>\n                </form>\n            </div>\n        </div>\n    );\n}\nexport default DisplayProductDetailsTable;\n","/Users/rashmishrees/Desktop/sdd/src/components/molecules/Download/DownloadDelivery.js",["880","881","882","883","884","885","886","887","888","889"],[],"import React, { useState } from 'react';\nimport CustomizedText from '../../atoms/CustomizedText/CustomizedText';\nimport CustomizedDatepicker from '../../atoms/CustomizedDatepicker/CustomizedDatepicker';\nimport SearchIcon from '@mui/icons-material/Search';\nimport axios from 'axios';\nimport '../../../style/style.css';\n\nconst DownloadDelivery = ({setTableDataEvent}) => {\n  const [fromselecteddate, fromsetselecteddate] = useState('');\n  const [toselecteddate, tosetselecteddate] = useState('');\n  \n  const fromselecteddateevent = (e) => {\n    fromsetselecteddate(e);\n  }\n  const toselecteddateevent = (e) => {\n    tosetselecteddate(e);\n  }\n  const searchbuttonclicked = () => {\n    axios.post('http://3.84.110.201:3001/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromselecteddate,\n        todate:toselecteddate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const weeklysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n\n    var firstday = new Date(curr.setDate(first));\n    var lastday = new Date(curr.setDate(last));\n\n    firstday = firstday.toString();\n    firstday = firstday.split(\" \"); \n    var fromdate = firstday[3]+\"-\"+months[firstday[1]]+\"-\"+firstday[2];\n    \n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n\n  }\n  const monthlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay(); \n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n  const yearlysearchclicked = () => {\n    var months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      Mar: \"03\",\n      Apr: \"04\",\n      May: \"05\",\n      Jun: \"06\",\n      Jul: \"07\",\n      Aug: \"08\",\n      Sep: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    }\n    var curr = new Date; \n    var first = curr.getDate() - curr.getDay();\n    var last = first + 6; \n    var lastday = new Date(curr.setDate(last));\n    lastday = lastday.toString();\n    lastday = lastday.split(\" \"); \n    var fromdate = lastday[3]+\"-\"+\"01\"+\"-\"+'01';\n    var todate = lastday[3]+\"-\"+months[lastday[1]]+\"-\"+lastday[2];\n    axios.post('http://3.84.110.201:3001/delivery/customizeddatefetchdeliverydata',{\n      params:{\n        fromdate:fromdate,\n        todate:todate\n      }\n    })\n    .then((res)=>{\n      setTableDataEvent(res.data);\n    })\n  }\n    return(\n        <div className='fromtodownloadlinkcontainer'>\n        <div className='fromtodownloadcontainer'>\n          <div className='fromcontainer'>\n            <CustomizedText textname=\"from :- \" />\n            <CustomizedDatepicker selecteddateevent={fromselecteddateevent} />\n          </div>\n          <div className='tocontainer'>\n            <CustomizedText textname=\"to :-\" />\n            <CustomizedDatepicker selecteddateevent={toselecteddateevent} />\n          </div>\n          <div >\n            <SearchIcon className='searchicon' onClick={searchbuttonclicked} />\n          </div>\n        </div>\n        <div>\n          <span className='atagfirst'>\n            <a href='#' onClick={weeklysearchclicked} >weekly</a> \n          </span>\n          <span className='atagsecond'>\n            <a href='#' onClick={monthlysearchclicked} >monthly</a>\n          </span>\n          <span className='atagthird'>\n            <a href='#' onClick={yearlysearchclicked} >yearly</a>\n          </span>\n        </div>\n        </div>\n\n    );\n}\nexport default DownloadDelivery;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/TextAndSelect/TextAndSelect.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/DisplayDealersDetailsTable/DisplayDealersDetailsTable.js",["890","891","892","893"],[],"import React, { useState, useEffect } from \"react\";\nimport CustomizedSearchBar from \"../../atoms/CustomizedSearchBar/CustomizedSearchBar\";\nimport OpenModal from '../OpenModal/OpenModal';\nimport CustomizedEditIcon from \"../../atoms/CustomizedEditIcon/CustomizedEditIcon\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport '../../../style/style.css';\n\nconst DisplayDealersDetailsTable = ({\n    currentstatus,\n    api\n}) => {\n    const [dealersdetailsdata, setDealersdetailsdata] = useState({});\n    const [filterflag, setfilterflag] = useState(false);\n    const [rowdata, setrowdata] = useState({});\n    const [searchvalue, setSearchvalue] = React.useState('');\n    const [changedmodalview, setChangedmodalview] = useState('');\n    const [modalview, setmodalview] = useState();\n    const [open, setOpen] = useState(false);\n    const openevent = (e) => {\n        setOpen(e)\n    }\n    useEffect(() => {\n        if (filterflag && currentstatus) {\n            gstinstatusfilterdealersdata();\n        } else {\n            displayDealersDetailsData();\n        }\n    }, [currentstatus])\n    const rowdataevent = (e) => {\n        setrowdata(e);\n    }\n    const displayDealersDetailsData = () => {\n        api.get('dealers/displayDealersDetailsData')\n            .then((res) => {\n                setDealersdetailsdata(res.data);\n                setfilterflag(true);\n            })\n    }\n    useEffect(() => {\n        if (searchvalue === \"\") {\n            displayDealersDetailsData();\n        }\n    }, [searchvalue])\n    const gstinstatusfilterdealersdata = () => {\n        api.post('dealers/gstinstatusfilterdealersdata', {\n            params: {\n                status: currentstatus\n            }\n        })\n            .then((res) => {\n                setDealersdetailsdata(res.data);\n            })\n    }\n    const searchHandle = (e) => {\n        setSearchvalue(e.target.value);\n    }\n    const modalviewchange = () => {\n        setChangedmodalview(\"adddealersform\");\n    }\n    const searchclicked = () => {\n        api.post('dealers/gstinstatusfilterdealersdata', {\n            params: {\n                proprietor_name: searchvalue,\n                proprietor_phone_number: searchvalue\n            }\n        })\n            .then((res) => {\n                setDealersdetailsdata(res.data);\n            })\n    }\n    const deleteevent = (id) => {\n        api.delete(`http://3.84.110.201:3001/dealers/deletefromdealersdetailstable`,\n            {\n                data: {\n                    id: id\n                }\n            })\n            .then((res) => {\n                displayDealersDetailsData();\n            })\n    }\n    return (\n        <div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                displayDealersDetailsData={displayDealersDetailsData}\n                rowdata={rowdata}\n            />\n            <CustomizedSearchBar\n                labelname=\"proprietor name /proprietor phone number\"\n                Btnname=\"search\"\n                onHandleChangeEvent={searchHandle}\n                goEventClicked={searchclicked}\n            />\n            <div className=\"adddealersbtnstyle\">\n                <CustomizedBtn\n                    BtnName=\"Add Dealers\"\n                    onClick={() => {\n                        setmodalview(\"adddealersform\");\n                        openevent(true);\n                    }}\n                />\n            </div>\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered tablebackground\">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>GSTIN Number</th>\n                            <th>Enterprise Name</th>\n                            <th>Enterprise Address</th>\n                            <th>Proprietor Name</th>\n                            <th>Proprietor Phone Number</th>\n                            <th>GSTIN Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            dealersdetailsdata && dealersdetailsdata.length\n                                ? dealersdetailsdata.map((data, i) => (\n                                    <tr key={i}>\n                                        <td>{data.gstin_number}</td>\n                                        <td>{data.enterprise_name}</td>\n                                        <td>{data.enterprise_address}</td>\n                                        <td>{data.proprietor_name}</td>\n                                        <td>{data.proprietor_phone_number}</td>\n                                        <td>{data.gstin_status}</td>\n                                        <td>\n                                            <div className=\"editdeletecontainer\">\n                                                <CustomizedEditIcon\n                                                    onClick={() => {\n                                                        rowdataevent(data);\n                                                        setmodalview(\"editdealersreport\");\n                                                        openevent(true);\n                                                    }}\n                                                />\n                                                <div\n                                                    className=\"deleteiconcontainer\"\n                                                    data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\n                                                ><DeleteIcon id=\"deleteicon\" />\n                                                </div>\n                                                <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                                    <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\n                                                        <div class=\"modal-content\">\n                                                            <div class=\"modal-body\">\n                                                                <p>Are you sure you want to delete ?</p>\n                                                            </div>\n                                                            <div class=\"modal-footer\">\n                                                                <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\" onClick={() => (deleteevent(data.gstin_number))}  >Confirm</button>\n                                                                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                ))\n                                :\n                                <tr>\n                                    <td colSpan={7}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DisplayDealersDetailsTable;","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedLogOutIcon/CustomizedLogOutIcon.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedLogo/CustomizedLogo.js",["894"],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersDetailsForm/DealersDetailsForm.js",["895","896","897","898","899","900","901","902"],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/InvoiceFormat/InvoiceFormat.js",["903","904"],[],"import React, { useEffect, useState } from \"react\";\nimport { ToWords } from 'to-words';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst InvoiceFormat = ({\n    invoiceFormData\n}) => {\n    const [constantinvoicedata, setconstantinvoicedata] = useState();\n    const [totalamount, settotalamount] = useState();\n    const [totalinwords, settotalinwords] = useState();\n    const toWords = new ToWords();\n    useEffect(() => {\n        if (invoiceFormData) {\n            const tempdata = [...new Set(invoiceFormData.map((e) => e.customer_reference_no))];\n            tempdata.map((temp) => {\n                let filterByTempData = invoiceFormData.filter(dataObject => dataObject.customer_reference_no === temp)\n                var fixedstrings = filterByTempData[0];\n                setconstantinvoicedata(fixedstrings);\n                let temptotal = 0;\n                invoiceFormData.map((data) => temptotal = temptotal + data.final_amount);\n                settotalamount(temptotal);\n                let words = toWords.convert(temptotal);\n                settotalinwords(words);\n            })\n        }\n    }, [invoiceFormData])\n    return (\n        <div className=\"invoiceformatcontainer\">\n            <div className=\"table-responsive\" id=\"tableprint\" >\n                {\n                    constantinvoicedata\n                        ?\n                        <div>\n                            <div className=\"invoicecontainer\">\n                                <div>\n                                    <p> <span className=\"lightstyle\">Address:</span> Shop #05,Medhini Arcade, <br></br>\n                                        Kithaganahalli Gate, <br></br>Opp Anna Building,\n                                        Hosur Main Road<br></br> Bangalore-560099,\n                                        <br></br></p>\n                                    <p> <span className=\"lightstyle\">GSTIN/UIN:</span>29AYSPB6397D1ZX <br></br>\n                                       <span className=\"lightstyle\">State: </span> {constantinvoicedata.state} <br></br>\n                                       <span className=\"lightstyle\">State Code: </span> {constantinvoicedata.state_code}</p>\n                                </div>\n                                <div>\n                                    <span className=\"invoicenamestyle\">SHREE PARAMANANDA ENTERPRISES</span>\n                                    <p><span className=\"lightstyle\">Contact Us:</span> 9035757145/9141070705</p>\n                                </div>\n                            </div>\n                            <table className=\"tbl\">\n                                <tbody>\n                                    <tr>\n                                        <td rowSpan=\"3\">Buyer:</td>\n                                        <td rowSpan=\"3\">{constantinvoicedata.customer_address}\n                                        </td>\n                                        <td colspan=\"3\">Invoice No:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.invoice_no}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\">Date of supply:-</td>\n                                        <td colspan=\"7\">\n                                            {constantinvoicedata.delivery_date != null ?\n                                                moment(constantinvoicedata.delivery_date).format('YYYY-MM-DD') :\n                                                constantinvoicedata.delivery_date\n                                            }\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\">PO no:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.po_number}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>GSTIN/UIN:</td>\n                                        <td>{constantinvoicedata.gst}</td>\n                                        <td colspan=\"3\">Vehicle No:</td>\n                                        <td colspan=\"7\">{constantinvoicedata.vehicle_number}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>State Code:</td>\n                                        <td>{constantinvoicedata.state_code}</td>\n                                        <td colspan=\"3\">Pan Number:</td>\n                                        <td colspan=\"7\">pan 567jkhasdfkj67rt8</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Place of supply : </td>\n                                        <td colspan=\"11\">{constantinvoicedata.state}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Contact NO :</td>\n                                        <td colspan=\"2\">{constantinvoicedata.phone_number} </td>\n                                        <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                        <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Sl</td>\n                                        <td>Discription of Product</td>\n                                        <td>HSN CODE</td>\n                                        <td>Qty</td>\n                                        <td>Rate</td>\n                                        <td>Amount</td>\n                                        <td>CGST</td>\n                                        <td>SGST</td>\n                                        <td>IGST</td>\n                                        <td>Discount</td>\n                                    </tr>\n                                    {\n                                        invoiceFormData && invoiceFormData.length &&\n                                        invoiceFormData.map((d, index) => (\n                                            <tr>\n                                                <td >{index + 1}</td>\n                                                <td >{d.product}</td>\n                                                <td >{d.product_hsn_code}</td>\n                                                <td >{d.quantity}</td>\n                                                <td >{d.rate / d.quantity}</td>\n                                                <td >{d.rate}</td>\n                                                <td >{d.cgst}</td>\n                                                <td >{d.sgst}</td>\n                                                <td >{d.igst}</td>\n                                                <td >{d.discount}</td>\n                                            </tr>\n                                        ))\n                                    }\n                                    <tr>\n                                        <td colspan=\"3\">Total</td>\n                                        <td colspan=\"7\">{totalamount}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"5\" rowSpan=\"5\">\n                                            Terms &Conditions :\n                                            <ol>\n                                                <li>Payment only by DD/CHQ,In faver of Shree Paramananda Enterprises</li>\n                                                <li>In Case of Cash payment contact the above phone number Before Making Payment</li>\n                                                <li>Goods once sold Cannot return Back</li>\n                                            </ol>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">Round off:</td>\n                                        <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">TOTAL:</td>\n                                        <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">Final Payble Amount :- </td>\n                                        <td colSpan=\"3\">{Math.round(totalamount)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"1\">Amount in Words: </td>\n                                        <td colSpan=\"6\">Rupees {totalinwords} Only</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"3\">Received The goods in good condition </td>\n                                        <td colSpan=\"7\">certified that the particulars given above are true and correct For Shree Paramananda Enterprises</td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"3\">Receivers Signature: </td>\n                                        <td colSpan=\"7\">Authorised Signatory:</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        : <></>\n                }\n            </div>\n        </div>\n    );\n}\nexport default InvoiceFormat;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddFewCustomersForm/AddFewCustomersForm.js",["905","906","907","908","909","910","911","912","913","914","915","916","917","918"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport { customeraddedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxForState from '../../atoms/CustomizedCombobox/CustomizedComboboxForState';\nimport CustomizedComboboxMultipleSelect from '../../atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect';\nimport '../../../style/style.css';\n\nconst AddFewCustomersForm = ({\n  handleClose,\n  api\n}) => {\n  const [customerdata, setcustomerdata] = useState(\n    {\n      customerReferenceNo: \"\",\n      enquiryDate: \"\",\n      customerName: \"\",\n      customerAddress: \"\",\n      statename: { value: 29, label: 'Karnataka' },\n      phoneno: \"\",\n      phonenoalterone: \"\",\n      phonenoaltertwo: \"\",\n      finalStatus: \"\",\n      phone_number: \"\",\n      phone_number_alter_one: \"\",\n      phone_number_alter_two: \"\",\n      product_hsn_code: \"\",\n      product: \"\",\n      quantity: \"\",\n      customer_name: \"\"\n    }\n  );\n  const [comboboxdata, setComboboxdata] = useState([]);\n  const [productname, setProductname] = useState(\"\");\n  const [producthsn, setProducthsn] = useState();\n  const [state, setstate] = useState([]);\n  const [products, setproducts] = useState([]);\n  const [statecode, setstatecode] = useState(\"\");\n  const [producthsncodeonly, setproducthsncodeonly] = useState();\n  const [productnameonly, setproductnameonly] = useState();\n  const [productquantityonly, setproductquantityonly] = useState();\n  useEffect(() => {\n    api.get('/stateandstatecodes/getstateandstatecodes', {})\n      .then((res) => {\n        setstate(res.data);\n      })\n  }, [])\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let finalpreInvoiceNo = '';\n  const generatePreInvoiceNo = () => {\n    let s1 = 'p';\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalpreInvoiceNo = s1 + \"2022\" + random;\n  }\n  generatePreInvoiceNo();\n  let finalcurrentdate = \"\";\n  const currentDate = () => {\n    let date = new Date();\n    finalcurrentdate = moment(date).format('YYYY-MM-DD');\n  }\n  useEffect(() => {\n    api.get('product/displayProductDetailsDataforcombobox', {})\n      .then((res) => {\n        setComboboxdata(res.data);\n      })\n  }, [])\n  currentDate();\n  useEffect(() => {\n    api.post('stateandstatecodes/fetchstatecode', {\n      params:{\n        statename: customerdata != undefined ? customerdata.statename : null\n      }\n\n      // params: {\n      //   statename: customerdata != undefined ? customerdata.statename.value : null\n      // }\n    })\n      .then((res) => {\n        setstatecode(res.data);\n      })\n  }, [customerdata])\n  const submiteventclicked = () => {\n    api.post('/customer/addCustomerFollowUpData',\n      {\n        params: {\n          customerReferenceNo: finalCustomerRefNo,\n          enquiryDate: finalcurrentdate,\n          customerName: customerdata.customer_name,\n          customerAddress: customerdata.customer_address,\n          statename: customerdata.statename,\n          phoneno: customerdata.phone_number,\n          phonenoalterone: customerdata.phone_number_alter_one,\n          phonenoaltertwo: customerdata.phone_number_alter_two,\n          finalStatus: 'Follow up in progress'\n        }\n      })\n      .then((res) => {\n      })\n    api.post('delivery/addDeliveryData', {\n      params: {\n        customerReferenceNo: finalCustomerRefNo,\n        customerAddress: customerdata.customer_address,\n        statename: customerdata.statename,\n        phone_number: customerdata.phone_number,\n        phone_number_alter_one: customerdata.phone_number_alter_one,\n        phone_number_alter_two: customerdata.phone_number_alter_two,\n        product_hsn_code: producthsncodeonly,\n        product: productnameonly,\n        quantity: productquantityonly,\n        customer_name: customerdata.customer_name\n      }\n    })\n      .then((res) => {\n        if (res) {\n          const res = customeraddedsuccessmsg({})\n          alert(res.msg);\n          handleClose();\n        }\n      })\n      api.put('product/updateProductsDetailsProductData',{\n        params:products\n      })\n  }\n  const selectevent = (e) => {\n    setProductname(e.target.outerText);\n  }\n  const selecteventforstate = (e) => {\n    setcustomerdata({ ...customerdata, \"statename\": e })\n  }\n  const selectedproducts = (e) => {\n    let selectedproducts = e.map((data) => {\n      return { productname: data, quantity: 1 }\n    })\n    setproducts(selectedproducts);\n  }\n  useEffect(() => {\n    if (products != null) {\n      let s = \"\";\n      let tempproductname = [];\n      let tempproductquantity = [];\n      products.map((data) => {\n        tempproductname.push(data.productname);\n        tempproductquantity.push(data.quantity);\n        s += data.productname + \",\";\n      })\n      setproductnameonly(tempproductname);\n      setproductquantityonly(tempproductquantity);\n      api.post('product/fetchproducthsnfromproductdetails', {\n        params: {\n          product_name: s\n        }\n      })\n        .then((res) => {\n          setProducthsn(res.data);\n        })\n    }\n  }, [products])\n  useEffect(() => {\n    let temparray = [];\n    if (producthsn != null) {\n      producthsn.map((data) => {\n        temparray.push(data.product_hsn_code)\n      })\n    }\n    setproducthsncodeonly(temparray);\n  }, [producthsn])\n  const incrementclicked = (data) => {\n    var productstock;\n    api.post('product/getquantitybasedonproductname',{\n        params:data\n    })\n    .then((res)=>{\n        productstock = res.data\n        productstock.map((d)=>{\n            var stock = d.stock;\n            let selectedproductdetails = products.map((product) => {\n                if (product.productname == data.productname) {\n                    if (stock >product.quantity){\n                        product.quantity += 1;\n                    }\n                    else{\n                        alert(`only ${stock} stocks available`);\n                    }\n                }\n                return product;\n              });\n              setproducts(selectedproductdetails);\n        })\n    })\n\n  }\n  const decrementclicked = (data) => {\n    let selectedproductdetails = products.map((product) => {\n      if (product.productname == data.productname) {\n        if (product.quantity >= 2) {\n          product.quantity -= 1;\n        }\n      }\n      return product;\n    });\n    setproducts(selectedproductdetails);\n  }\n  const changeevent = (event) => {\n    setcustomerdata({ ...customerdata, [event.target.name]: event.target.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Add New Customer\n      </div>\n      <React.Fragment>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_address\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              State:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxForState\n                comboboxdata={state}\n                // type=\"state\"\n                selectevent={selecteventforstate}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Ph no:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Ph no (Alter - 1):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Ph no (Alter - 2):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxMultipleSelect\n                comboboxdata={comboboxdata}\n                selectedproducts={selectedproducts}\n              />\n            </div>\n          </label>\n        </div>\n        <div>\n          <div className=\"selectedproductheading\">Selected products:-\n            <ul>\n              {products && products.length &&\n                products.map((data, i) => (\n                  <li key={i} className=\"productnamedesign\">\n                    <div>{data.productname}</div>\n                    <div className=\"incrementdecrement\">\n                      <CustomizedBtn BtnName=\"+\" onClick={() => { incrementclicked(data) }} />\n                      {data.quantity}\n                      <CustomizedBtn BtnName=\"-\" onClick={() => { decrementclicked(data) }} />\n                    </div>\n                  </li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </React.Fragment>\n    </div>\n  )\n}\nexport default AddFewCustomersForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersInvoiceForm/DealersInvoiceForm.js",["919","920","921","922","923","924"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport CustomizedComboboxMultipleSelect from '../../atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect';\nimport CustomizedComboboxForState from '../../atoms/CustomizedCombobox/CustomizedComboboxForState';\nimport { generateinvoicesuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport '../../../style/style.css';\nconst DealersInvoiceForm = ({\n  dealersdata,\n  handleClose,\n  api\n}) => {\n  const [comboboxdata, setComboboxdata] = useState([]);\n  const [products, setproducts] = useState({\n    productname: '',\n    quantity: \"\",\n    product_status: \"\"\n  });\n  const [state, setstate] = useState([]);\n  const [selectedstate, setselectedstate] = useState(\"Karnataka\");\n  const [changeddata, setchangeddata] = useState();\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let finalInvoiceNo = '';\n  const generateInvoiceNo = () => {\n    let s1 = \"In22-2023/\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    let notostring = random.toString();\n    let size = notostring.length;\n    if (size === 4) {\n      finalInvoiceNo = s1 + random;\n    }\n    else if (size === 3) {\n      finalInvoiceNo = s1 + \"0\" + random;\n    }\n    else if (size === 2) {\n      finalInvoiceNo = s1 + \"00\" + random;\n    }\n    else if (size === 1) {\n      finalInvoiceNo = s1 + \"000\" + random;\n    }\n  }\n  generateInvoiceNo();\n  useEffect(() => {\n    api.get('stateandstatecodes/getstateandstatecodes')\n      .then((res) => {\n        setstate(res.data);\n      })\n  }, [])\n  const submiteventclicked = () => {\n    api.post('product/fetchallproductdetails', {\n      params: {\n        productsdata: products\n      }\n    })\n      .then((res) => {\n        var data = res.data;\n        let prod = products.map((d) => {\n          let temp = data.find(a => a.product_name == d.productname)\n          return { ...d, ...temp }\n        })\n        let selectedstatecode = \"\";\n        state.map((d) => {\n          if (d.statename === selectedstate) {\n            selectedstatecode = d.statecode;\n          }\n        })\n        api.post('customer/insertdealerscustomertable', {\n          params: {\n            customer_reference_no: finalCustomerRefNo,\n            dealersdata: dealersdata,\n            state: selectedstate,\n            changed_data: changeddata\n          }\n        })\n          .then((res) => {\n          })\n        api.post('dealers/insertdealersdataintodeliverytable', {\n          params: {\n            customer_reference_no: finalCustomerRefNo,\n            invoice_no: finalInvoiceNo,\n            dealersdata: dealersdata,\n            productsdata: prod,\n            state: selectedstate,\n            state_code: selectedstatecode,\n            changed_data: changeddata\n          }\n        })\n          .then((res) => {\n            if (res) {\n              const res = generateinvoicesuccessmsg({})\n              alert(res.msg);\n              handleClose();\n            }\n          })\n      })\n      api.put('product/updateProductsDetailsProductData',{\n        params:products\n      })\n  }\n  const incrementclicked = (data) => {\n    let selectedproductdetails = products.map((product) => {\n      if (product.productname == data.productname) {\n        product.quantity += 1;\n      }\n      return product;\n    });\n    setproducts(selectedproductdetails);\n  }\n  const decrementclicked = (data) => {\n    let selectedproductdetails = products.map((product) => {\n      if (product.productname == data.productname) {\n        product.quantity -= 1;\n      }\n      return product;\n    });\n    setproducts(selectedproductdetails);\n  }\n  const selectedproducts = (e) => {\n    let selectedproducts = e.map((data) => {\n      return { productname: data, quantity: 1 }\n    })\n    setproducts(selectedproducts);\n  }\n  useEffect(() => {\n    api.get('product/displayProductDetailsDataforcombobox')\n      .then((res) => {\n        setComboboxdata(res.data);\n      })\n  }, [])\n  const selecteventforstate = (e) => {\n    setselectedstate(e.label);\n  }\n  const changeevent = (e) => {\n    setchangeddata({ ...changeddata, [e.target.name]: e.target.value });\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Generate Invoice\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              GSTIN Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.gstin_number}\n                readOnly\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.enterprise_name}\n                readOnly\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.enterprise_address}\n                readOnly\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Proprietor Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                type=\"text\"\n                defaultValue={dealersdata.proprietor_phone_number}\n                readOnly\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxMultipleSelect\n                comboboxdata={comboboxdata}\n                selectedproducts={selectedproducts}\n              />\n            </div>\n          </label>\n        </div>\n        <div>\n          <p>Selected products:-\n            <ul>\n              {products && products.length &&\n                products.map((data) => (\n                  <li className=\"productnamedesign\">\n                    <div>{data.productname}</div>\n                    <div className=\"incrementdecrement\">\n                      <CustomizedBtn BtnName=\"+\" onClick={() => { incrementclicked(data) }} />\n                      {data.quantity}\n                      <CustomizedBtn BtnName=\"-\" onClick={() => { decrementclicked(data) }} />\n                    </div>\n                  </li>\n                ))\n              }\n            </ul>\n          </p>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              PO Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"po_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        {/* <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Pan Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"pan_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div> */}\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Vehicle Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"vehicle_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Place of Supply:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"place_of_supply\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              State:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxForState\n                className=\"select\"\n                comboboxdata={state}\n                type=\"state\"\n                selectevent={selecteventforstate}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone number (Alter-1):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone number (Alter-2):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default DealersInvoiceForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/CustomerInvoiceForm/CustomerInvoiceForm.js",["925","926","927","928","929","930","931","932","933","934","935","936","937","938","939"],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/ProductsDetailsForm/ProductsDetailsForm.js",["940","941","942"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport '../../../style/style.css';\n\nconst ProductsDetailsForm = ({ rowdata, handleClose }) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [productstatus, setproductstatus] = useState([\"Available\", \"Not Available\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const submiteventclicked = () => {\n    axios.put('http://3.84.110.201:3001/product/updateProductsDetails', {\n      params: {\n        updaterowdata\n      }\n    })\n      .then((res) => {\n        if (res) {\n          const res = editedsuccessmsg({});\n          alert(res.msg);\n          handleClose();\n        }\n      })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [\"product_status\"]: event.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Product details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product HSN code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_hsn_code\"\n                defaultValue={rowdata.product_hsn_code}\n                onChange={changeevent}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.product_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Description:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_description\"\n                onChange={changeevent}\n                defaultValue={rowdata.product_description}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Unit of Measure:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"unit_of_measure\"\n                onChange={changeevent}\n                defaultValue={rowdata.unit_of_measure}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Rate per unit:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"rate_per_unit\"\n                onChange={changeevent}\n                defaultValue={rowdata.rate_per_unit}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              GST Rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gst_rate\"\n                onChange={changeevent}\n                defaultValue={rowdata.gst_rate}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll\n                  comboboxdata={productstatus}\n                  dvalue={rowdata.product_status}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"discount\"\n                onChange={changeevent}\n                defaultValue={rowdata.discount}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Stock:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"stock\"\n                onChange={changeevent}\n                defaultValue={rowdata.stock}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default ProductsDetailsForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DeliveryDetailsForm/DeliveryDetailsForm.js",["943","944","945","946","947","948","949","950","951","952"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst DeliveryDetailsForm = ({ rowdata, handleClose }) => {\n  const [updaterowdata, setUpdaterowdata] = useState();\n  const [paymentstatus, setpaymentstatus] = useState([\"Paid\", \"Pending\"]);\n  const [deliverstatus, setdeliverstatus] = useState([\"Delivered\", \"Not Delivered\", \"Cancelled\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const [comboboxdata, setComboboxdata] = useState();\n  useEffect(() => {\n    axios.get(`http://3.84.110.201:3001/product/displayProductDetailsDataforcombobox`)\n    .then((res)=>{\n      var data = res.data;\n      let productnamesarray = [];\n        data.map((d) => {\n          productnamesarray.push(d.product_name);\n        })\n        setComboboxdata(productnamesarray);\n    })\n  }, [])\n  const [updatedPaymentstatus, setupdatedPaymentstatus] = useState('');\n  const [updatedDeliverystatus, setupdatedDeliverystatus] = useState('');\n  const paymentstatusevent = (e) => {\n    setupdatedPaymentstatus(e);\n  }\n  const deliverystatusevent = (e) => {\n    setupdatedDeliverystatus(e);\n  }\n  const submiteventclicked = () => {\n    axios.put(`http://3.84.110.201:3001/delivery/updateDeliveryDetails`,{\n      params:{\n        updaterowdata\n      }\n    })\n    .then((res)=>{\n      if(res){\n        const res = editedsuccessmsg({});\n        alert(res.msg);\n        handleClose();\n      }\n    })\n  }\n  const selectevent = (event) =>{\n    setUpdaterowdata({ ...updaterowdata, \"delivery_status\": event.value })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Delivery Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Reference Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.customer_reference_no}\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Sl No:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_sl_no}\n                onChange={changeevent}\n                name=\"product_sl_no\"\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Booked Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n             <SelectDate\n              type=\"booked_date\"\n              typeOne=\"booked_date\"\n              incomingdate={\n                rowdata.booked_date != null ?\n                moment(rowdata.booked_date).format('YYYY-MM-DD'):\n                rowdata.booked_date\n              }\n              disable=\"yes\"\n            /> \n          </div>\n            \n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Requested Delivery Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <SelectDate\n              type=\"requested_delivery_date\"\n              typeOne=\"requested_delivery_date\"\n              incomingdate={\n                rowdata.requested_delivery_date != null ?\n                moment(rowdata.requested_delivery_date).format('YYYY-MM-DD'):\n                rowdata.requested_delivery_date\n              }\n              disable=\"yes\"\n            />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Delivery Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <SelectDate\n              type=\"delivery_date\"\n              typeOne=\"delivery_date\"\n              incomingdate={\n                rowdata.delivery_date != null ?\n                moment(rowdata.delivery_date).format('YYYY-MM-DD'):\n                rowdata.delivery_date\n              }\n              disable=\"yes\"\n            />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Invoice number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.invoice_no}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"customer_address\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_address}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number Alter (one):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_one\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number_alter_one}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number Alter (two):\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number_alter_two\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number_alter_two}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Hsn Code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_hsn_code}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <input\n                defaultValue={rowdata.product}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Quantity:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.quantity}\n                type=\"number\"\n                name=\"quantity\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.rate}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.discount}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              CGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.cgst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              SGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.sgst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              IGST:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.igst}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Final Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"final_amount\"\n                defaultValue={rowdata.final_amount}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Balance Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"balance_amount\"\n                defaultValue={rowdata.balance_amount}\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Payment Status:\n            </div>\n            <div className=\"formdatainputstyle\">\n            <input\n                name=\"balance_amount\"\n                defaultValue={rowdata.payment_status}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Booking Advance Amount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"booking_advance_amount\"\n                onHandleChangeEvent={changeevent}\n                defaultValue={rowdata.booking_advance_amount}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Delivery Status:\n            </div>\n             <div className=\"formdatainputstyle\">\n             <CustomizedComboboxAll \n                comboboxdata={deliverstatus}\n                dvalue={rowdata.delivery_status}\n                selectevent={selectevent}\n              />\n            </div> \n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default DeliveryDetailsForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddProductForm/AddProductForm.js",["953","954","955"],[],"import React, { useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport { addedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport axios from 'axios';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport '../../../style/style.css';\nconst AddProductForm = ({ handleClose }) => {\n  const [customerdata, setcustomerdata] = useState();\n  const [productstatus, setproductstatus] = useState(['Available', 'Not Available']);\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let finalcurrentdate = \"\";\n  const currentDate = () => {\n    let date = new Date();\n    finalcurrentdate = moment(date).format('YYYY-MM-DD');\n  }\n  currentDate();\n  const submiteventclicked = () => {\n    axios.post('http://3.84.110.201:3001/product/addProductData', {\n      params: {\n        data: customerdata\n      }\n    })\n      .then((res) => {\n        if (res) {\n          const res = addedsuccessmsg({})\n          alert(res.msg);\n          handleClose();\n        }\n      })\n  }\n  const changeevent = (event) => {\n    setcustomerdata({ ...customerdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setcustomerdata({ ...customerdata, \"product_status\": event.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Add Product Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product hsn code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_hsn_code\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product description:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"product_description\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Unit of measure:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"unit_of_measure\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              rate per unit:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"rate_per_unit\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              gst rate:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gst_rate\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Product status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll \n                  comboboxdata={productstatus}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              stock:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"stock\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              discount:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"discount\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default AddProductForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersInvoiceFormGenerate/DealersInvoiceFormGenerate.js",["956","957","958","959","960","961","962","963","964"],[],"import React, { useEffect, useState } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport CustomizedPrint from \"../../atoms/CustomizedPrint/CustomizedPrint\";\nimport CustomizedDownload from \"../../atoms/CustomizedDownload/CustomizedDownload\";\nimport { CSVLink } from \"react-csv\";\nimport { ToWords } from 'to-words';\nimport axios from 'axios';\nimport moment from 'moment';\nimport '../../../style/style.css';\n\nconst DealersInvoiceFormGenerate = ({\n    invoiceFormData,\n    modalview,\n    custrefno,\n    invoiceno,\n    fetchdealersdatatoverify\n}) => {\n    const [listofinvoices, setlistofinvoices] = useState([]);\n    const [tabledata, setTabledata] = React.useState({});\n    // const componentRef = useRef();\n    const [constantinvoicedata, setconstantinvoicedata] = useState();\n    const [totalamount, settotalamount] = useState();\n    const [totalinwords, settotalinwords] = useState();\n    const toWords = new ToWords();\n    // const handlePrint = useReactToPrint({\n    //     content: () => componentRef.current,\n    // });\n    useEffect(() => {\n        if (fetchdealersdatatoverify) {\n            const tempdata = [...new Set(fetchdealersdatatoverify.map((e) => e.customer_reference_no))];\n            tempdata.map((temp) => {\n                let filterByTempData = fetchdealersdatatoverify.filter(dataObject => dataObject.customer_reference_no === temp)\n                var fixedstrings = filterByTempData[0];\n                setconstantinvoicedata(fixedstrings);\n                let temptotal = 0;\n                fetchdealersdatatoverify.map((data) => temptotal = temptotal + data.final_amount);\n                settotalamount(temptotal);\n                let words = toWords.convert(temptotal);\n                settotalinwords(words);\n            })\n        }\n    }, [fetchdealersdatatoverify])\n    useEffect(() => {\n        axios.get('http://3.84.110.201:3001/delivery/fetchinvoicesfromdeliverytable')\n            .then((res) => {\n                setlistofinvoices(res.data);\n            })\n    }, [])\n    useEffect(() => {\n        axios.post('http://3.84.110.201:3001/jointables/downloadinvoicedisplayedastable', {\n            params: {\n                invoice_no: invoiceno,\n                customer_reference_no: custrefno\n            }\n        })\n            .then((res) => {\n                setTabledata(res.data);\n            })\n    }, [])\n    const headers = [\n        { label: 'customer reference no', key: 'customer_reference_no' },\n        { label: 'booked date', key: 'booked_date' },\n        { label: 'requested delivery date', key: 'requested_delivery_date' },\n        { label: 'delivery date', key: 'delivery_date' },\n        { label: 'invoice no', key: 'invoice_no' },\n        { label: 'customer address', key: 'customer_address' },\n        { label: 'gst', key: 'gst' },\n        { label: 'phone number', key: 'phone_number' },\n        { label: 'product hsn code', key: 'product_hsn_code' },\n        { label: 'product', key: 'product' },\n        { label: 'quantity', key: 'quantity' },\n        { label: 'rate', key: 'rate' },\n        { label: 'discount', key: 'discount' },\n        { label: 'cgst', key: 'cgst' },\n        { label: 'sgst', key: 'sgst' },\n        { label: 'igst', key: 'igst' },\n        { label: 'final amount', key: 'final_amount' },\n        { label: 'balance amount', key: 'balance_amount' },\n        { label: 'payment status', key: 'payment_status' },\n        { label: 'booking advance amount', key: 'booking_advance_amount' },\n        { label: 'delivery status', key: 'delivery_status' },\n        { label: 'customer name', key: 'customer_name' },\n    ];\n    const csvReport = {\n        filename: 'DeliveryReports.csv',\n        headers: headers,\n        data: tabledata\n    }\n    return (\n        <div className=\"invoiceformatcontainer\">\n            <div className=\"invoiceheader\">\n                {/* <div>\n                    <CustomizedPrint\n                    onClick={handlePrint}\n                />\n                </div> */}\n                {/* <div>\n                    {\n                        tabledata && tabledata.length ?\n                            <CSVLink {...csvReport}><CustomizedDownload /></CSVLink> : null\n                    }\n                </div> */}\n            </div>\n            <div className=\"table-responsive\" id=\"tableprint\">\n                {\n                    constantinvoicedata\n                        ?\n                        <div>\n                        <div className=\"invoicecontainer\">\n                                <div>\n                                    <p> <span className=\"lightstyle\">Address:</span> Shop #05,Medhini Arcade, <br></br>\n                                        Kithaganahalli Gate, <br></br>Opp Anna Building,\n                                        Hosur Main Road<br></br> Bangalore-560099,\n                                        <br></br></p>\n                                    <p> <span className=\"lightstyle\">GSTIN/UIN:</span>29AYSPB6397D1ZX <br></br>\n                                       <span className=\"lightstyle\">State: </span> {constantinvoicedata.state} <br></br>\n                                       <span className=\"lightstyle\">State Code: </span> {constantinvoicedata.state_code}</p>\n                                </div>\n                                <div>\n                                    <span className=\"invoicenamestyle\">SHREE PARAMANANDA ENTERPRISES</span>\n                                    <p><span className=\"lightstyle\">Contact Us:</span> 9035757145/9141070705</p>\n                                </div>\n                            </div>\n                        <table className=\"tbl\">\n                            {/* <thead>\n                                <tr>\n                                    <th colspan=\"6\" scope=\"col\">\n                                        <div className=\"theaddiv\">\n                                            <h6>TAX INVOICE</h6>\n                                            <h5><bold>SHREE PARAMANANDA ENTERPRISES</bold></h5>\n                                            <p>Shop #05,Medhini Arcade,Kithaganahalli Gate,Opp Anna Building,Hosur Main Road Bangalore-560099,Mobile: 9035757145/9902880851/9141070705</p>\n                                            <p>Email ID:shreeparamananda@gmail.com</p>\n                                            <p>GSTIN/UIN:29AYSPB6397D1ZX ,Karnataka State Code:29</p>\n                                        </div>\n                                    </th>\n                                </tr>\n                            </thead> */}\n                            <tbody>\n                                <tr>\n                                    <td rowSpan=\"3\">Buyer:</td>\n                                    <td rowSpan=\"3\">{constantinvoicedata.customer_address}\n                                    </td>\n                                    <td colspan=\"3\">Invoice No:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.invoice_no}</td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\">Date of supply:-</td>\n                                    <td colspan=\"7\">\n                                        {\n                                        constantinvoicedata.delivery_date != null ?\n                                        moment(constantinvoicedata.delivery_date).format('YYYY-MM-DD'):\n                                        constantinvoicedata.delivery_date\n                                        }\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\">PO no:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.po_number}</td>\n                                </tr>\n                                <tr>\n                                    <td>GSTIN/UIN:</td>\n                                    <td>{constantinvoicedata.gst}</td>\n                                    <td colspan=\"3\">Vehicle No:</td>\n                                    <td colspan=\"7\">{constantinvoicedata.vehicle_number}</td>\n                                </tr>\n                                <tr>\n                                    <td>State Code:</td>\n                                    <td>{constantinvoicedata.state}</td>\n                                    <td colspan=\"3\">Pan Number:</td>\n                                    <td colspan=\"7\">pan 567jkhasdfkj67rt8</td>\n                                </tr>\n                                <tr>\n                                    <td>Place of supply : </td>\n                                    <td colspan=\"11\">{constantinvoicedata.state}</td>\n                                </tr>\n                                <tr>\n                                    <td>Contact NO :</td>\n                                    <td colspan=\"2\">{constantinvoicedata.phone_number} </td>\n                                    <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                    <td colspan=\"4\">{constantinvoicedata.phone_number} </td>\n                                </tr>\n                                <tr>\n                                    <td>Sl</td>\n                                    <td>Discription of Product</td>\n                                    <td>HSN CODE</td>\n                                    <td>Qty</td>\n                                    <td>Rate</td>\n                                    <td>Amount</td>\n                                    <td>CGST</td>\n                                    <td>SGST</td>\n                                    <td>IGST</td>\n                                    <td>Discount</td>\n                                </tr>\n                                {\n                                    fetchdealersdatatoverify && fetchdealersdatatoverify.length &&\n                                    fetchdealersdatatoverify.map((d, index) => (\n                                        <tr>\n                                            <td >{index +1}</td>\n                                            <td >{d.product}</td>\n                                            <td >{d.product_hsn_code}</td>\n                                            <td >{d.quantity}</td>\n                                            <td >{d.rate/d.quantity}</td>\n                                            <td >{d.rate}</td>\n                                            <td >{d.cgst}</td>\n                                            <td >{d.sgst}</td>\n                                            <td >{d.igst}</td>\n                                            <td >{d.discount}</td>\n                                        </tr>\n                                    ))\n                                }\n                                <tr>\n                                    <td colspan=\"3\">Total</td>\n                                    <td colspan=\"7\">{totalamount}</td>\n                                </tr>\n                                <tr>\n                                    <td colspan=\"3\" rowSpan=\"5\">\n                                        Terms &Conditions :\n                                        <ol>\n                                            <li>Payment only by DD/CHQ,In faver of Shree Paramananda Enterprises</li>\n                                            <li>In Case of Cash payment contact the above phone number Before Making Payment</li>\n                                            <li>Goods once sold Cannot return Back</li>\n                                        </ol>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">Round off:</td>\n                                    <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">TOTAL:</td>\n                                    <td colspan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"4\">Final Payble Amount :- </td>\n                                    <td colSpan=\"3\">{Math.round(totalamount)}</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"1\">Amount in Words: </td>\n                                    <td colSpan=\"6\">Rupees {totalinwords} Only</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"3\">Received The goods in good condition </td>\n                                    <td colSpan=\"7\">certified that the particulars given above are true and correct For Shree Paramananda Enterprises</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan=\"3\">Receivers Signature: </td>\n                                    <td colSpan=\"7\">Authorised Signatory:</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        </div>\n                        : <></>\n                }\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoiceFormGenerate;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/CustomerFollowUpForm/CustomerFollowUpForm.js",["965","966","967"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport SelectDate from \"../../atoms/CustomizedDatepicker/SelectDate\";\nimport axios from 'axios';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport '../../../style/style.css';\nimport moment from 'moment';\n\nconst CustomerFollowUpForm = ({\n  rowdata,\n  handleClose\n}) => {\n  const [updaterowdata, setUpdaterowdata] = useState({\n    \"follow_up_call\" :\"0000-00-00\"\n  });\n  const [finalstatus, setfinalstatus] = useState([\"Booked\", \"Cancelled\", \"Follow Up In Progress\"]);\n  useEffect(() => {\n    setUpdaterowdata(rowdata);\n  }, [])\n  const submiteventclicked = () => {\n    axios.put('http://3.84.110.201:3001/customer/updateCustomerDetails',{\n      params:{\n        updaterowdata\n      }\n    })\n    .then((res)=>{\n      if(res){\n        const res = editedsuccessmsg({});\n        alert(res.msg);\n        handleClose();\n      }\n    })\n  }\n  const selectevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, \"follow_up_call\": event })\n  }\n  const selectevent1 = (event) => {\n    setUpdaterowdata({ ...updaterowdata, \"final_status\":event.value })\n  }\n  const changeevent = (event) => {\n    setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Edit Customer Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Reference No:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.customer_reference_no}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"customer_name\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_name}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquiry Date:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <SelectDate\n                type=\"enquiry_date\"\n                typeOne=\"enquiry_date\"\n                incomingdate={\n                  rowdata.enquiry_date != null ?\n                  moment(rowdata.enquiry_date).format('YYYY-MM-DD'):\n                  rowdata.enquiry_date\n                }\n                disable=\"yes\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Customer Address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"customer_address\"\n                onChange={changeevent}\n                defaultValue={rowdata.customer_address}\n                type=\"text\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Phone Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"phone_number\"\n                onChange={changeevent}\n                defaultValue={rowdata.phone_number}\n                type=\"number\"\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired product hsn code:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product_hsn_code}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enquired Product:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.product}\n                type=\"text\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Quantity:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                defaultValue={rowdata.quantity}\n                type=\"number\"\n                readOnly\n                disabled\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Comments:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <textarea\n                name=\"comments\"\n                onChange={changeevent}\n                defaultValue={rowdata.comments}\n                type=\"text\"\n              />\n            </div>\n            {/* <div className=\"formdatainputstyle\">\n              <input\n                name=\"comments\"\n                onChange={changeevent}\n                value={rowdata.comments}\n                type=\"text\"\n              />\n            </div> */}\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Follow up call:\n            </div>\n            <SelectDate\n                selectevent={selectevent}\n                typeOne=\"follow_up_call\"\n                incomingdate={\n                  rowdata.follow_up_call != null\n                        ? moment(rowdata.follow_up_call).format('YYYY-MM-DD')\n                        : rowdata.follow_up_call = rowdata.follow_up_call\n                }\n            />\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Final status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll\n                comboboxdata={finalstatus}\n                dvalue={rowdata.final_status}\n                selectevent={selectevent1}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default CustomerFollowUpForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/EditDealersReportForm/EditDealersReportForm.js",["968","969"],[],"import React, { useEffect, useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport { editedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport '../../../style/style.css';\nconst EditDealersReportForm = ({ rowdata, handleClose }) => {\n    const [updaterowdata, setUpdaterowdata] = useState();\n    const [dealerstatus, setdealerstatus] = useState([\"Active\", \"In Active\"]);\n    useEffect(() => {\n        setUpdaterowdata(rowdata);\n    }, [])\n    const submiteventclicked = (e) => {\n        axios.put('http://3.84.110.201:3001/dealers/updateDealersDetails', {\n            params: {\n                updaterowdata\n            }\n        })\n            .then((res) => {\n                if (res) {\n                    const res = editedsuccessmsg({});\n                    alert(res.msg);\n                    handleClose();\n                }\n            })\n    }\n    const changeevent = (event) => {\n        setUpdaterowdata({ ...updaterowdata, [event.target.name]: event.target.value })\n    }\n    const selectevent = (event) => {\n        setUpdaterowdata({ ...updaterowdata, \"gstin_status\": event.value })\n    }\n    return (\n        <div>\n            <div className=\"pageheading\">\n                Edit Dealers Details\n            </div>\n            <form className=\"formcontainer\">\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Enterprise Name:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"enterprise_name\"\n                                defaultValue={rowdata.enterprise_name}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Enterprise Address:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"enterprise_address\"\n                                defaultValue={rowdata.enterprise_address}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Proprietor Name:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"proprietor_name\"\n                                defaultValue={rowdata.proprietor_name}\n                                onChange={changeevent}\n                                type=\"text\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            Proprietor Phone Number:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                name=\"proprietor_phone_number\"\n                                defaultValue={rowdata.proprietor_phone_number}\n                                onChange={changeevent}\n                                type=\"number\"\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            GSTIN Number:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <input\n                                defaultValue={rowdata.gstin_number}\n                                type=\"text\"\n                                readOnly\n                            />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"nameandinputcontainer\">\n                    <label className=\"formdatalabelstyle\">\n                        <div className=\"formnamestyle\">\n                            GSTIN Status:\n                        </div>\n                        <div className=\"formdatainputstyle\">\n                            <CustomizedComboboxAll\n                                comboboxdata={dealerstatus}\n                                dvalue={rowdata.gstin_status}\n                                selectevent={selectevent}\n                                />\n                            {/* <CustomizedComboboxForAll\n                                comboboxdata={dealerstatus}\n                                selectevent={selectevent}\n                                selectedvalue={rowdata.gstin_status}\n                            /> */}\n                        </div>\n                    </label>\n                </div>\n                <div className=\"submitcontainee\">\n                    <CustomizedBtn\n                        BtnName=\"submit\"\n                        onClick={submiteventclicked}\n                    />\n                </div>\n            </form>\n        </div>\n    )\n}\nexport default EditDealersReportForm;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/DealersInvoicesListForm/DealersInvoicesListForm.js",["970","971"],[],"import React, { useEffect, useState } from \"react\";\nimport OpenModal from \"../../molecules/OpenModal/OpenModal\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport FullScreenModalTwo from \"../FullScreenModalTwo/FullScreenModalTwo\";\nimport '../../../style/style.css';\nconst DealersInvoicesListForm = ({\n    deliveryinvoices,\n    fetchinvoicesfromdelivery,\n    api\n}) => {\n    const [fetchdealersdatatoverify, setfetchdealersdatatoverify] = useState();\n    const [verificationstatus, setverificationstatus] = useState();\n    const [currentInvoiceno, setcurrentInvoiceno] = useState();\n    const [modalview, setModalview] = useState('');\n    const [open, setOpen] = useState(false);\n    const openevent = (e) => {\n        setOpen(e)\n    }\n    const currentInvoicenoevent = (e) => {\n        setcurrentInvoiceno(e);\n    }\n    const fetchdealersdatatoverifyevent = (e) => {\n        api.post('delivery/fetchdealersdatatoverify', {\n            params: {\n                invoice_no: e\n            }\n        })\n            .then((res) => {\n                const fetchdealersdatatoverify = res.data;\n                api.put('jointables/updaterateofdeliverytableonbook', {\n                    params: {\n                        data: fetchdealersdatatoverify\n                    }\n                })\n                    .then((res) => {\n                    })\n                api.post('delivery/getstatecodefromdeliverytableonbook', {\n                    params: {\n                        data: fetchdealersdatatoverify\n                    }\n                })\n                    .then((res) => {\n                        var data = res.data;\n                        for (var i = 0; i < data.length; i++) {\n                            if (data[i].state_code === 29) {\n                                api.put('jointables/updatekarnatakagstratesdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                                    .then((res) => {\n                                    })\n                                api.put('jointables/updatefinalamountdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                                api.put('/jointables/updatebalanceamountdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                                api.put('/jointables/updatepaymentstatusdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                            }\n                            else {\n                                api.put('jointables/updateotherstatesgstratesdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                                    .then((res) => {\n                                    })\n                                api.put('jointables/updatefinalamountdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                                api.put('/jointables/updatebalanceamountdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                                api.put('/jointables/updatepaymentstatusdeliverytableonbook', {\n                                    params: {\n                                        data: fetchdealersdatatoverify\n                                    }\n                                })\n                            }\n                        }\n                    })\n                alert(\"Updated Successfully\");\n            })\n    }\n    const updatedownloadinvoiceevent = (e) =>{\n        api.post('delivery/fetchdealersdatatoverify', {\n            params: {\n                invoice_no: e\n            }\n        })\n        .then((res) => {\n            setfetchdealersdatatoverify(res.data);\n        })\n    }\n    const fetchverificationstatusevent = (e) => {\n        api.post('delivery/getverificationstatus', {\n            params: {\n                invoice_no: e\n            }\n        })\n            .then((res) => {\n                setverificationstatus(res.data);\n            })\n    }\n    return (\n        <div>\n            <OpenModal\n                api={api}\n                modalview={modalview}\n                open={open}\n                openevent={openevent}\n                currentInvoiceno={currentInvoiceno}\n                verificationstatus={verificationstatus}\n                fetchdealersdatatoverify={fetchdealersdatatoverify}\n                fetchinvoicesfromdelivery={fetchinvoicesfromdelivery}\n            />\n            <div className='table-responsive'>\n                <table className=\"table table-striped table-bordered \">\n                    <thead className=\"theadalter\">\n                        <tr>\n                            <th>Invoices List</th>\n                            <th>Action</th>\n                            <th>Generate</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            deliveryinvoices && deliveryinvoices.length\n                                ? deliveryinvoices.map((data) => (\n                                    <tr>\n                                        <td>{data.invoice_no}</td>\n                                        <td>{\n                                            data.purchase_status == 1\n                                                ?\n                                                <CustomizedBtn\n                                                    BtnName=\"View\"\n                                                    onClick={() => {\n                                                        // fetchdealersdatatoverifyevent(data.invoice_no);\n                                                        fetchverificationstatusevent(data.invoice_no);\n                                                        currentInvoicenoevent(data.invoice_no);\n                                                        setModalview(\"dealersdetailsform\");\n                                                        openevent(true);\n                                                    }}\n                                                />\n                                                :\n                                                <div className=\"btndesign\">\n                                                    <span className=\"cbtn\"><CustomizedBtn\n                                                        BtnName=\"Update Invoice\"\n                                                        onClick={() => {\n                                                            fetchdealersdatatoverifyevent(data.invoice_no);\n                                                        }}\n                                                    />\n                                                    </span>\n                                                    <span className=\"cbtn\"><CustomizedBtn\n                                                        BtnName=\"Verify Invoice\"\n                                                        onClick={() => {\n                                                            fetchverificationstatusevent(data.invoice_no);\n                                                            currentInvoicenoevent(data.invoice_no);\n                                                            setModalview(\"dealersdetailsform\");\n                                                            openevent(true);\n                                                        }}\n                                                    />\n                                                    </span>\n                                                </div>\n                                        }\n                                        </td>\n                                        <td>\n                                            <div className='btnstyle'>\n                                                <button \n                                                    id=\"btn\"\n                                                    data-bs-toggle=\"modal\"\n                                                    data-bs-target=\"#exampleModal\"\n                                                    onClick={()=>{\n                                                        updatedownloadinvoiceevent(data.invoice_no);\n                                                    }}\n                                                    class=\"btnstyle\"\n                                                    >\n                                                        Download Invoice\n                                                </button>\n                                            </div>\n                                            <FullScreenModalTwo \n                                             api={api}\n                                             modalview={modalview}\n                                             open={open}\n                                             openevent={openevent}\n                                             currentInvoiceno={currentInvoiceno}\n                                             verificationstatus={verificationstatus}\n                                             fetchdealersdatatoverify={fetchdealersdatatoverify}\n                                              />\n                                        </td>\n                                    </tr>\n                                ))\n                                :\n                                <tr>\n                                    <td colSpan={3}>No Record!</td>\n                                </tr>\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\nexport default DealersInvoicesListForm;","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedText/CustomizedText.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedTextInput/CustomizedTextInput.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddCustomersForm/AddCustomersForm.js",["972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987"],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/AddDealersForm/AddDealersForm.js",["988","989","990","991","992"],[],"import React, { useState } from \"react\";\nimport CustomizedBtn from \"../../atoms/CustomizedBtn/CustomizedBtn\";\nimport moment from 'moment';\nimport { addedsuccessmsg } from '../../organisms/SuccessMsg/SuccessMsg';\nimport CustomizedComboboxForAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxForAll\";\nimport CustomizedComboboxAll from \"../../atoms/CustomizedCombobox/CustomizedComboboxAll\";\nimport axios from 'axios';\nimport '../../../style/style.css';\nconst AddDealersForm = ({ handleClose }) => {\n  const [customerdata, setcustomerdata] = useState();\n  const [gststatus, setgststatus] = useState(['Active', 'In Active']);\n  let finalCustomerRefNo = '';\n  const generateCustomerReferenceNo = () => {\n    let s1 = \"CUST2022\";\n    let min = 0;\n    let max = 1000;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    finalCustomerRefNo = s1 + random;\n  }\n  generateCustomerReferenceNo();\n  let updatedate = \"\";\n  let finalcurrentdate = \"\";\n  const currentDate = () => {\n    let date = new Date();\n    finalcurrentdate = moment(date).format('YYYY-MM-DD');\n  }\n  currentDate();\n  const submiteventclicked = () => {\n    axios.post(`http://3.84.110.201:3001/dealers/addDealersData`,{\n      params:{\n        data: customerdata\n      }\n    })\n    .then((res)=>{\n      if(res){\n        const res = addedsuccessmsg({})\n        alert(res.msg);\n        handleClose();\n      }\n    })\n  }\n  const changeevent = (event) => {\n    setcustomerdata({ ...customerdata, [event.target.name]: event.target.value })\n  }\n  const selectevent = (event) => {\n    setcustomerdata({ ...customerdata, \"gstin_status\": event.value })\n  }\n  return (\n    <div>\n      <div className=\"pageheading\">\n        Add Dealers Details\n      </div>\n      <form className=\"formcontainer\">\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              GSTIN Number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"gstin_number\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise name:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"enterprise_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Enterprise address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"enterprise_address\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Proprietor address:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"proprietor_name\"\n                type=\"text\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              Proprietor phone number:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <input\n                name=\"proprietor_phone_number\"\n                type=\"number\"\n                onChange={changeevent}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"nameandinputcontainer\">\n          <label className=\"formdatalabelstyle\">\n            <div className=\"formnamestyle\">\n              gst status:\n            </div>\n            <div className=\"formdatainputstyle\">\n              <CustomizedComboboxAll \n                  comboboxdata={gststatus}\n                  selectevent={selectevent}\n                />\n            </div>\n          </label>\n        </div>\n        <div className=\"submitcontainee\">\n          <CustomizedBtn\n            BtnName=\"submit\"\n            onClick={submiteventclicked}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default AddDealersForm;","/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedEditIcon/CustomizedEditIcon.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedDownload/CustomizedDownload.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedPrint/CustomizedPrint.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedDatepicker/CustomizedDatepicker.js",["993","994"],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedSelect/CustomizedSelect.js",["995"],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedDatepicker/SelectDate.js",["996","997"],[],"/Users/rashmishrees/Desktop/sdd/src/components/organisms/SuccessMsg/SuccessMsg.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedComboboxMultipleSelect/CustomizedComboboxMultipleSelect.js",["998"],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForState.js",["999","1000","1001","1002"],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxAll.js",["1003","1004"],[],"/Users/rashmishrees/Desktop/sdd/src/components/atoms/CustomizedCombobox/CustomizedComboboxForAll.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/FullScreenModal/FullScreenModal.js",["1005"],[],"import React, {useRef } from \"react\";\nimport AddFewCustomersForm from \"../AddFewCustomersForm/AddFewCustomersForm\";\nimport InvoiceFormat from \"../InvoiceFormat/InvoiceFormat\";\nimport CustomizedPrint from \"../../atoms/CustomizedPrint/CustomizedPrint\";\nimport { useReactToPrint } from \"react-to-print\";\n\nconst FullScreenModal = ({\n    api,\n    invoiceFormData,\n    custrefno,\n    openinvoiceevent\n}) => {\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n    return(\n        <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-fullscreen modal-dialog-scrollable\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Reciept </h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div ref={componentRef} class=\"modal-body\">\n                    <InvoiceFormat\n                        api={api}\n                        invoiceFormData={invoiceFormData}\n                        custrefno={custrefno}\n                        openinvoiceevent={openinvoiceevent}\n                    />\n                    </div>\n                    <div class=\"modal-footer\">\n                        {/* <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button> */}\n                        <div>\n                            <CustomizedPrint\n                                onClick={handlePrint}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default FullScreenModal;","/Users/rashmishrees/Desktop/sdd/src/components/molecules/FullScreenModalOne/FullScreenModalOne.js",[],[],"/Users/rashmishrees/Desktop/sdd/src/components/molecules/FullScreenModalTwo/FullScreenModalTwo.js",[],[],{"ruleId":"1006","severity":1,"message":"1007","line":19,"column":10,"nodeType":"1008","messageId":"1009","endLine":19,"endColumn":19},{"ruleId":"1010","severity":1,"message":"1011","line":81,"column":48,"nodeType":"1012","messageId":"1013","endLine":81,"endColumn":50},{"ruleId":"1014","severity":1,"message":"1015","line":48,"column":13,"nodeType":"1016","endLine":52,"endColumn":14},{"ruleId":"1006","severity":1,"message":"1017","line":14,"column":12,"nodeType":"1008","messageId":"1009","endLine":14,"endColumn":28},{"ruleId":"1006","severity":1,"message":"1018","line":17,"column":12,"nodeType":"1008","messageId":"1009","endLine":17,"endColumn":28},{"ruleId":"1019","severity":1,"message":"1020","line":107,"column":7,"nodeType":"1021","endLine":107,"endColumn":29,"suggestions":"1022"},{"ruleId":"1019","severity":1,"message":"1023","line":110,"column":8,"nodeType":"1021","endLine":110,"endColumn":10,"suggestions":"1024"},{"ruleId":"1006","severity":1,"message":"1025","line":150,"column":11,"nodeType":"1008","messageId":"1009","endLine":150,"endColumn":26},{"ruleId":"1006","severity":1,"message":"1026","line":153,"column":9,"nodeType":"1008","messageId":"1009","endLine":153,"endColumn":27},{"ruleId":"1006","severity":1,"message":"1027","line":162,"column":9,"nodeType":"1008","messageId":"1009","endLine":162,"endColumn":25},{"ruleId":"1019","severity":1,"message":"1023","line":172,"column":8,"nodeType":"1021","endLine":172,"endColumn":20,"suggestions":"1028"},{"ruleId":"1010","severity":1,"message":"1029","line":299,"column":62,"nodeType":"1012","messageId":"1013","endLine":299,"endColumn":64},{"ruleId":"1006","severity":1,"message":"1030","line":16,"column":7,"nodeType":"1008","messageId":"1009","endLine":16,"endColumn":15},{"ruleId":"1006","severity":1,"message":"1030","line":21,"column":7,"nodeType":"1008","messageId":"1009","endLine":21,"endColumn":15},{"ruleId":"1006","severity":1,"message":"1031","line":62,"column":24,"nodeType":"1008","messageId":"1009","endLine":62,"endColumn":39},{"ruleId":"1006","severity":1,"message":"1032","line":63,"column":26,"nodeType":"1008","messageId":"1009","endLine":63,"endColumn":43},{"ruleId":"1006","severity":1,"message":"1033","line":64,"column":25,"nodeType":"1008","messageId":"1009","endLine":64,"endColumn":41},{"ruleId":"1006","severity":1,"message":"1034","line":65,"column":25,"nodeType":"1008","messageId":"1009","endLine":65,"endColumn":41},{"ruleId":"1006","severity":1,"message":"1035","line":66,"column":23,"nodeType":"1008","messageId":"1009","endLine":66,"endColumn":37},{"ruleId":"1036","severity":1,"message":"1037","line":10,"column":13,"nodeType":"1016","endLine":10,"endColumn":49},{"ruleId":"1006","severity":1,"message":"1038","line":3,"column":8,"nodeType":"1008","messageId":"1009","endLine":3,"endColumn":14},{"ruleId":"1039","severity":1,"message":"1040","line":22,"column":33,"nodeType":"1041","messageId":"1042","endLine":22,"endColumn":35},{"ruleId":"1019","severity":1,"message":"1043","line":33,"column":8,"nodeType":"1021","endLine":33,"endColumn":25,"suggestions":"1044"},{"ruleId":"1006","severity":1,"message":"1045","line":3,"column":10,"nodeType":"1008","messageId":"1009","endLine":3,"endColumn":28},{"ruleId":"1006","severity":1,"message":"1046","line":7,"column":8,"nodeType":"1008","messageId":"1009","endLine":7,"endColumn":29},{"ruleId":"1006","severity":1,"message":"1047","line":19,"column":12,"nodeType":"1008","messageId":"1009","endLine":19,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1033","line":19,"column":27,"nodeType":"1008","messageId":"1009","endLine":19,"endColumn":43},{"ruleId":"1006","severity":1,"message":"1048","line":20,"column":12,"nodeType":"1008","messageId":"1009","endLine":20,"endColumn":22},{"ruleId":"1006","severity":1,"message":"1049","line":21,"column":12,"nodeType":"1008","messageId":"1009","endLine":21,"endColumn":23},{"ruleId":"1006","severity":1,"message":"1050","line":32,"column":11,"nodeType":"1008","messageId":"1009","endLine":32,"endColumn":22},{"ruleId":"1039","severity":1,"message":"1051","line":34,"column":41,"nodeType":"1041","messageId":"1042","endLine":34,"endColumn":43},{"ruleId":"1019","severity":1,"message":"1052","line":55,"column":8,"nodeType":"1021","endLine":55,"endColumn":10,"suggestions":"1053"},{"ruleId":"1019","severity":1,"message":"1020","line":80,"column":8,"nodeType":"1021","endLine":80,"endColumn":23,"suggestions":"1054"},{"ruleId":"1039","severity":1,"message":"1051","line":186,"column":41,"nodeType":"1041","messageId":"1042","endLine":186,"endColumn":43},{"ruleId":"1055","severity":1,"message":"1056","line":240,"column":74,"nodeType":"1057","messageId":"1058","endLine":240,"endColumn":90},{"ruleId":"1055","severity":1,"message":"1056","line":241,"column":74,"nodeType":"1057","messageId":"1058","endLine":241,"endColumn":90},{"ruleId":"1055","severity":1,"message":"1059","line":258,"column":86,"nodeType":"1057","messageId":"1058","endLine":258,"endColumn":114},{"ruleId":"1055","severity":1,"message":"1059","line":259,"column":86,"nodeType":"1057","messageId":"1058","endLine":259,"endColumn":114},{"ruleId":"1010","severity":1,"message":"1029","line":512,"column":37,"nodeType":"1012","messageId":"1013","endLine":512,"endColumn":39},{"ruleId":"1006","severity":1,"message":"1060","line":11,"column":12,"nodeType":"1008","messageId":"1009","endLine":11,"endColumn":16},{"ruleId":"1006","severity":1,"message":"1061","line":11,"column":18,"nodeType":"1008","messageId":"1009","endLine":11,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1062","line":2,"column":8,"nodeType":"1008","messageId":"1009","endLine":2,"endColumn":17},{"ruleId":"1006","severity":1,"message":"1063","line":4,"column":8,"nodeType":"1008","messageId":"1009","endLine":4,"endColumn":20},{"ruleId":"1006","severity":1,"message":"1064","line":38,"column":10,"nodeType":"1008","messageId":"1009","endLine":38,"endColumn":21},{"ruleId":"1006","severity":1,"message":"1065","line":42,"column":10,"nodeType":"1008","messageId":"1009","endLine":42,"endColumn":19},{"ruleId":"1019","severity":1,"message":"1020","line":51,"column":6,"nodeType":"1021","endLine":51,"endColumn":8,"suggestions":"1066"},{"ruleId":"1006","severity":1,"message":"1067","line":61,"column":7,"nodeType":"1008","messageId":"1009","endLine":61,"endColumn":24},{"ruleId":"1019","severity":1,"message":"1020","line":80,"column":6,"nodeType":"1021","endLine":80,"endColumn":8,"suggestions":"1068"},{"ruleId":"1010","severity":1,"message":"1011","line":85,"column":33,"nodeType":"1012","messageId":"1013","endLine":85,"endColumn":35},{"ruleId":"1019","severity":1,"message":"1020","line":95,"column":6,"nodeType":"1021","endLine":95,"endColumn":20,"suggestions":"1069"},{"ruleId":"1006","severity":1,"message":"1050","line":138,"column":9,"nodeType":"1008","messageId":"1009","endLine":138,"endColumn":20},{"ruleId":"1039","severity":1,"message":"1040","line":155,"column":27,"nodeType":"1041","messageId":"1042","endLine":155,"endColumn":29},{"ruleId":"1019","severity":1,"message":"1020","line":171,"column":6,"nodeType":"1021","endLine":171,"endColumn":16,"suggestions":"1070"},{"ruleId":"1039","severity":1,"message":"1040","line":175,"column":29,"nodeType":"1041","messageId":"1042","endLine":175,"endColumn":31},{"ruleId":"1039","severity":1,"message":"1040","line":188,"column":29,"nodeType":"1041","messageId":"1042","endLine":188,"endColumn":31},{"ruleId":"1010","severity":1,"message":"1029","line":191,"column":41,"nodeType":"1012","messageId":"1013","endLine":191,"endColumn":43},{"ruleId":"1010","severity":1,"message":"1029","line":208,"column":31,"nodeType":"1012","messageId":"1013","endLine":208,"endColumn":33},{"ruleId":"1006","severity":1,"message":"1062","line":2,"column":8,"nodeType":"1008","messageId":"1009","endLine":2,"endColumn":17},{"ruleId":"1006","severity":1,"message":"1063","line":3,"column":8,"nodeType":"1008","messageId":"1009","endLine":3,"endColumn":20},{"ruleId":"1006","severity":1,"message":"1071","line":4,"column":8,"nodeType":"1008","messageId":"1009","endLine":4,"endColumn":13},{"ruleId":"1006","severity":1,"message":"1072","line":5,"column":8,"nodeType":"1008","messageId":"1009","endLine":5,"endColumn":13},{"ruleId":"1006","severity":1,"message":"1073","line":4,"column":8,"nodeType":"1008","messageId":"1009","endLine":4,"endColumn":18},{"ruleId":"1006","severity":1,"message":"1074","line":15,"column":12,"nodeType":"1008","messageId":"1009","endLine":15,"endColumn":28},{"ruleId":"1019","severity":1,"message":"1075","line":24,"column":8,"nodeType":"1021","endLine":24,"endColumn":10,"suggestions":"1076"},{"ruleId":"1006","severity":1,"message":"1017","line":35,"column":12,"nodeType":"1008","messageId":"1009","endLine":35,"endColumn":28},{"ruleId":"1006","severity":1,"message":"1025","line":36,"column":11,"nodeType":"1008","messageId":"1009","endLine":36,"endColumn":26},{"ruleId":"1006","severity":1,"message":"1077","line":61,"column":12,"nodeType":"1008","messageId":"1009","endLine":61,"endColumn":25},{"ruleId":"1039","severity":1,"message":"1040","line":63,"column":35,"nodeType":"1041","messageId":"1042","endLine":63,"endColumn":37},{"ruleId":"1019","severity":1,"message":"1075","line":85,"column":8,"nodeType":"1021","endLine":85,"endColumn":20,"suggestions":"1078"},{"ruleId":"1010","severity":1,"message":"1029","line":129,"column":50,"nodeType":"1012","messageId":"1013","endLine":129,"endColumn":52},{"ruleId":"1019","severity":1,"message":"1079","line":27,"column":7,"nodeType":"1021","endLine":27,"endColumn":9,"suggestions":"1080"},{"ruleId":"1010","severity":1,"message":"1029","line":45,"column":44,"nodeType":"1012","messageId":"1013","endLine":45,"endColumn":46},{"ruleId":"1019","severity":1,"message":"1079","line":56,"column":8,"nodeType":"1021","endLine":56,"endColumn":20,"suggestions":"1081"},{"ruleId":"1006","severity":1,"message":"1082","line":14,"column":12,"nodeType":"1008","messageId":"1009","endLine":14,"endColumn":30},{"ruleId":"1006","severity":1,"message":"1083","line":15,"column":12,"nodeType":"1008","messageId":"1009","endLine":15,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1084","line":15,"column":27,"nodeType":"1008","messageId":"1009","endLine":15,"endColumn":43},{"ruleId":"1019","severity":1,"message":"1020","line":22,"column":8,"nodeType":"1021","endLine":22,"endColumn":10,"suggestions":"1085"},{"ruleId":"1019","severity":1,"message":"1052","line":25,"column":8,"nodeType":"1021","endLine":25,"endColumn":10,"suggestions":"1086"},{"ruleId":"1087","severity":1,"message":"1088","line":42,"column":45,"nodeType":"1012","messageId":"1089","endLine":42,"endColumn":46},{"ruleId":"1087","severity":1,"message":"1088","line":45,"column":45,"nodeType":"1012","messageId":"1089","endLine":45,"endColumn":46},{"ruleId":"1087","severity":1,"message":"1088","line":45,"column":51,"nodeType":"1012","messageId":"1089","endLine":45,"endColumn":52},{"ruleId":"1087","severity":1,"message":"1088","line":48,"column":45,"nodeType":"1012","messageId":"1089","endLine":48,"endColumn":46},{"ruleId":"1087","severity":1,"message":"1088","line":48,"column":51,"nodeType":"1012","messageId":"1089","endLine":48,"endColumn":52},{"ruleId":"1087","severity":1,"message":"1088","line":51,"column":45,"nodeType":"1012","messageId":"1089","endLine":51,"endColumn":46},{"ruleId":"1087","severity":1,"message":"1088","line":51,"column":51,"nodeType":"1012","messageId":"1089","endLine":51,"endColumn":52},{"ruleId":"1090","severity":1,"message":"1091","line":67,"column":17,"nodeType":"1008","messageId":"1092","endLine":67,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1093","line":68,"column":17,"nodeType":"1008","messageId":"1092","endLine":68,"endColumn":19},{"ruleId":"1039","severity":1,"message":"1051","line":110,"column":41,"nodeType":"1041","messageId":"1042","endLine":110,"endColumn":43},{"ruleId":"1019","severity":1,"message":"1020","line":57,"column":6,"nodeType":"1021","endLine":57,"endColumn":8,"suggestions":"1094"},{"ruleId":"1010","severity":1,"message":"1029","line":67,"column":52,"nodeType":"1012","messageId":"1013","endLine":67,"endColumn":54},{"ruleId":"1039","severity":1,"message":"1040","line":71,"column":23,"nodeType":"1041","messageId":"1042","endLine":71,"endColumn":25},{"ruleId":"1010","severity":1,"message":"1029","line":111,"column":31,"nodeType":"1012","messageId":"1013","endLine":111,"endColumn":33},{"ruleId":"1010","severity":1,"message":"1029","line":120,"column":31,"nodeType":"1012","messageId":"1013","endLine":120,"endColumn":33},{"ruleId":"1019","severity":1,"message":"1020","line":138,"column":6,"nodeType":"1021","endLine":138,"endColumn":8,"suggestions":"1095"},{"ruleId":"1006","severity":1,"message":"1096","line":18,"column":12,"nodeType":"1008","messageId":"1009","endLine":18,"endColumn":26},{"ruleId":"1039","severity":1,"message":"1040","line":31,"column":33,"nodeType":"1041","messageId":"1042","endLine":31,"endColumn":35},{"ruleId":"1019","severity":1,"message":"1043","line":42,"column":8,"nodeType":"1021","endLine":42,"endColumn":34,"suggestions":"1097"},{"ruleId":"1019","severity":1,"message":"1098","line":59,"column":8,"nodeType":"1021","endLine":59,"endColumn":10,"suggestions":"1099"},{"ruleId":"1019","severity":1,"message":"1100","line":17,"column":5,"nodeType":"1021","endLine":17,"endColumn":18,"suggestions":"1101"},{"ruleId":"1006","severity":1,"message":"1102","line":4,"column":8,"nodeType":"1008","messageId":"1009","endLine":4,"endColumn":23},{"ruleId":"1019","severity":1,"message":"1103","line":31,"column":7,"nodeType":"1021","endLine":31,"endColumn":22,"suggestions":"1104"},{"ruleId":"1019","severity":1,"message":"1105","line":65,"column":7,"nodeType":"1021","endLine":65,"endColumn":20,"suggestions":"1106"},{"ruleId":"1019","severity":1,"message":"1107","line":30,"column":8,"nodeType":"1021","endLine":30,"endColumn":39,"suggestions":"1108"},{"ruleId":"1019","severity":1,"message":"1109","line":35,"column":7,"nodeType":"1021","endLine":35,"endColumn":22,"suggestions":"1110"},{"ruleId":"1019","severity":1,"message":"1111","line":40,"column":7,"nodeType":"1021","endLine":40,"endColumn":23,"suggestions":"1112"},{"ruleId":"1019","severity":1,"message":"1113","line":129,"column":8,"nodeType":"1021","endLine":129,"endColumn":21,"suggestions":"1114"},{"ruleId":"1006","severity":1,"message":"1115","line":15,"column":12,"nodeType":"1008","messageId":"1009","endLine":15,"endColumn":19},{"ruleId":"1006","severity":1,"message":"1017","line":18,"column":12,"nodeType":"1008","messageId":"1009","endLine":18,"endColumn":28},{"ruleId":"1006","severity":1,"message":"1116","line":24,"column":12,"nodeType":"1008","messageId":"1009","endLine":24,"endColumn":24},{"ruleId":"1019","severity":1,"message":"1117","line":41,"column":7,"nodeType":"1021","endLine":41,"endColumn":22,"suggestions":"1118"},{"ruleId":"1006","severity":1,"message":"1025","line":42,"column":11,"nodeType":"1008","messageId":"1009","endLine":42,"endColumn":26},{"ruleId":"1006","severity":1,"message":"1119","line":70,"column":11,"nodeType":"1008","messageId":"1009","endLine":70,"endColumn":20},{"ruleId":"1006","severity":1,"message":"1017","line":17,"column":12,"nodeType":"1008","messageId":"1009","endLine":17,"endColumn":28},{"ruleId":"1019","severity":1,"message":"1120","line":29,"column":7,"nodeType":"1021","endLine":29,"endColumn":22,"suggestions":"1121"},{"ruleId":"1019","severity":1,"message":"1122","line":44,"column":7,"nodeType":"1021","endLine":44,"endColumn":20,"suggestions":"1123"},{"ruleId":"1006","severity":1,"message":"1025","line":58,"column":13,"nodeType":"1008","messageId":"1009","endLine":58,"endColumn":28},{"ruleId":"1006","severity":1,"message":"1124","line":3,"column":8,"nodeType":"1008","messageId":"1009","endLine":3,"endColumn":26},{"ruleId":"1006","severity":1,"message":"1125","line":6,"column":8,"nodeType":"1008","messageId":"1009","endLine":6,"endColumn":14},{"ruleId":"1126","severity":1,"message":"1127","line":44,"column":16,"nodeType":"1128","messageId":"1129","endLine":44,"endColumn":24,"fix":"1130"},{"ruleId":"1126","severity":1,"message":"1127","line":83,"column":16,"nodeType":"1128","messageId":"1129","endLine":83,"endColumn":24,"fix":"1131"},{"ruleId":"1087","severity":1,"message":"1088","line":89,"column":57,"nodeType":"1012","messageId":"1089","endLine":89,"endColumn":58},{"ruleId":"1126","severity":1,"message":"1127","line":117,"column":16,"nodeType":"1128","messageId":"1129","endLine":117,"endColumn":24,"fix":"1132"},{"ruleId":"1087","severity":1,"message":"1088","line":123,"column":34,"nodeType":"1012","messageId":"1089","endLine":123,"endColumn":35},{"ruleId":"1087","severity":1,"message":"1088","line":123,"column":39,"nodeType":"1012","messageId":"1089","endLine":123,"endColumn":40},{"ruleId":"1087","severity":1,"message":"1088","line":123,"column":43,"nodeType":"1012","messageId":"1089","endLine":123,"endColumn":44},{"ruleId":"1014","severity":1,"message":"1133","line":150,"column":13,"nodeType":"1016","endLine":150,"endColumn":56},{"ruleId":"1014","severity":1,"message":"1133","line":153,"column":13,"nodeType":"1016","endLine":153,"endColumn":57},{"ruleId":"1014","severity":1,"message":"1133","line":156,"column":13,"nodeType":"1016","endLine":156,"endColumn":56},{"ruleId":"1126","severity":1,"message":"1127","line":44,"column":16,"nodeType":"1128","messageId":"1129","endLine":44,"endColumn":24,"fix":"1134"},{"ruleId":"1126","severity":1,"message":"1127","line":84,"column":16,"nodeType":"1128","messageId":"1129","endLine":84,"endColumn":24,"fix":"1135"},{"ruleId":"1087","severity":1,"message":"1088","line":90,"column":57,"nodeType":"1012","messageId":"1089","endLine":90,"endColumn":58},{"ruleId":"1126","severity":1,"message":"1127","line":117,"column":16,"nodeType":"1128","messageId":"1129","endLine":117,"endColumn":24,"fix":"1136"},{"ruleId":"1087","severity":1,"message":"1088","line":123,"column":34,"nodeType":"1012","messageId":"1089","endLine":123,"endColumn":35},{"ruleId":"1087","severity":1,"message":"1088","line":123,"column":39,"nodeType":"1012","messageId":"1089","endLine":123,"endColumn":40},{"ruleId":"1087","severity":1,"message":"1088","line":123,"column":43,"nodeType":"1012","messageId":"1089","endLine":123,"endColumn":44},{"ruleId":"1014","severity":1,"message":"1133","line":152,"column":13,"nodeType":"1016","endLine":152,"endColumn":56},{"ruleId":"1014","severity":1,"message":"1133","line":155,"column":13,"nodeType":"1016","endLine":155,"endColumn":57},{"ruleId":"1014","severity":1,"message":"1133","line":158,"column":13,"nodeType":"1016","endLine":158,"endColumn":56},{"ruleId":"1006","severity":1,"message":"1060","line":9,"column":12,"nodeType":"1008","messageId":"1009","endLine":9,"endColumn":16},{"ruleId":"1019","severity":1,"message":"1137","line":13,"column":7,"nodeType":"1021","endLine":13,"endColumn":9,"suggestions":"1138"},{"ruleId":"1019","severity":1,"message":"1020","line":98,"column":8,"nodeType":"1021","endLine":98,"endColumn":34,"suggestions":"1139"},{"ruleId":"1006","severity":1,"message":"1083","line":15,"column":10,"nodeType":"1008","messageId":"1009","endLine":15,"endColumn":23},{"ruleId":"1019","severity":1,"message":"1052","line":23,"column":6,"nodeType":"1021","endLine":23,"endColumn":8,"suggestions":"1140"},{"ruleId":"1006","severity":1,"message":"1141","line":45,"column":10,"nodeType":"1008","messageId":"1009","endLine":45,"endColumn":29},{"ruleId":"1039","severity":1,"message":"1040","line":49,"column":27,"nodeType":"1041","messageId":"1042","endLine":49,"endColumn":29},{"ruleId":"1039","severity":1,"message":"1040","line":59,"column":33,"nodeType":"1041","messageId":"1042","endLine":59,"endColumn":35},{"ruleId":"1010","severity":1,"message":"1029","line":83,"column":19,"nodeType":"1012","messageId":"1013","endLine":83,"endColumn":21},{"ruleId":"1039","severity":1,"message":"1051","line":138,"column":37,"nodeType":"1041","messageId":"1042","endLine":138,"endColumn":39},{"ruleId":"1010","severity":1,"message":"1029","line":471,"column":33,"nodeType":"1012","messageId":"1013","endLine":471,"endColumn":35},{"ruleId":"1006","severity":1,"message":"1047","line":12,"column":10,"nodeType":"1008","messageId":"1009","endLine":12,"endColumn":23},{"ruleId":"1006","severity":1,"message":"1033","line":12,"column":25,"nodeType":"1008","messageId":"1009","endLine":12,"endColumn":41},{"ruleId":"1006","severity":1,"message":"1142","line":13,"column":25,"nodeType":"1008","messageId":"1009","endLine":13,"endColumn":41},{"ruleId":"1019","severity":1,"message":"1143","line":16,"column":6,"nodeType":"1021","endLine":16,"endColumn":8,"suggestions":"1144"},{"ruleId":"1006","severity":1,"message":"1145","line":17,"column":10,"nodeType":"1008","messageId":"1009","endLine":17,"endColumn":22},{"ruleId":"1039","severity":1,"message":"1040","line":23,"column":22,"nodeType":"1041","messageId":"1042","endLine":23,"endColumn":24},{"ruleId":"1006","severity":1,"message":"1146","line":29,"column":10,"nodeType":"1008","messageId":"1009","endLine":29,"endColumn":30},{"ruleId":"1006","severity":1,"message":"1147","line":30,"column":10,"nodeType":"1008","messageId":"1009","endLine":30,"endColumn":31},{"ruleId":"1006","severity":1,"message":"1148","line":31,"column":9,"nodeType":"1008","messageId":"1009","endLine":31,"endColumn":27},{"ruleId":"1006","severity":1,"message":"1149","line":34,"column":9,"nodeType":"1008","messageId":"1009","endLine":34,"endColumn":28},{"ruleId":"1006","severity":1,"message":"1150","line":15,"column":23,"nodeType":"1008","messageId":"1009","endLine":15,"endColumn":37},{"ruleId":"1019","severity":1,"message":"1143","line":18,"column":6,"nodeType":"1021","endLine":18,"endColumn":8,"suggestions":"1151"},{"ruleId":"1055","severity":1,"message":"1152","line":198,"column":52,"nodeType":"1057","messageId":"1058","endLine":198,"endColumn":74},{"ruleId":"1006","severity":1,"message":"1153","line":10,"column":25,"nodeType":"1008","messageId":"1009","endLine":10,"endColumn":41},{"ruleId":"1019","severity":1,"message":"1143","line":13,"column":6,"nodeType":"1021","endLine":13,"endColumn":8,"suggestions":"1154"},{"ruleId":"1155","severity":1,"message":"1156","line":32,"column":42,"nodeType":"1157","messageId":"1158","endLine":32,"endColumn":73,"fix":"1159"},{"ruleId":"1006","severity":1,"message":"1160","line":9,"column":26,"nodeType":"1008","messageId":"1009","endLine":9,"endColumn":41},{"ruleId":"1019","severity":1,"message":"1143","line":12,"column":8,"nodeType":"1021","endLine":12,"endColumn":10,"suggestions":"1161"},{"ruleId":"1006","severity":1,"message":"1162","line":5,"column":8,"nodeType":"1008","messageId":"1009","endLine":5,"endColumn":32},{"ruleId":"1006","severity":1,"message":"1163","line":11,"column":21,"nodeType":"1008","messageId":"1009","endLine":11,"endColumn":33},{"ruleId":"1006","severity":1,"message":"1026","line":12,"column":7,"nodeType":"1008","messageId":"1009","endLine":12,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1164","line":21,"column":7,"nodeType":"1008","messageId":"1009","endLine":21,"endColumn":17},{"ruleId":"1006","severity":1,"message":"1027","line":22,"column":7,"nodeType":"1008","messageId":"1009","endLine":22,"endColumn":23},{"ruleId":"1006","severity":1,"message":"1153","line":10,"column":25,"nodeType":"1008","messageId":"1009","endLine":10,"endColumn":41},{"ruleId":"1006","severity":1,"message":"1026","line":11,"column":7,"nodeType":"1008","messageId":"1009","endLine":11,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1027","line":20,"column":7,"nodeType":"1008","messageId":"1009","endLine":20,"endColumn":23},{"ruleId":"1006","severity":1,"message":"1007","line":19,"column":10,"nodeType":"1008","messageId":"1009","endLine":19,"endColumn":19},{"ruleId":"1006","severity":1,"message":"1017","line":14,"column":12,"nodeType":"1008","messageId":"1009","endLine":14,"endColumn":28},{"ruleId":"1006","severity":1,"message":"1018","line":17,"column":12,"nodeType":"1008","messageId":"1009","endLine":17,"endColumn":28},{"ruleId":"1019","severity":1,"message":"1023","line":44,"column":8,"nodeType":"1021","endLine":44,"endColumn":10,"suggestions":"1165"},{"ruleId":"1006","severity":1,"message":"1025","line":144,"column":11,"nodeType":"1008","messageId":"1009","endLine":144,"endColumn":26},{"ruleId":"1006","severity":1,"message":"1026","line":147,"column":9,"nodeType":"1008","messageId":"1009","endLine":147,"endColumn":27},{"ruleId":"1006","severity":1,"message":"1027","line":156,"column":9,"nodeType":"1008","messageId":"1009","endLine":156,"endColumn":25},{"ruleId":"1019","severity":1,"message":"1023","line":166,"column":8,"nodeType":"1021","endLine":166,"endColumn":20,"suggestions":"1166"},{"ruleId":"1010","severity":1,"message":"1029","line":293,"column":62,"nodeType":"1012","messageId":"1013","endLine":293,"endColumn":64},{"ruleId":"1006","severity":1,"message":"1167","line":7,"column":8,"nodeType":"1008","messageId":"1009","endLine":7,"endColumn":21},{"ruleId":"1006","severity":1,"message":"1168","line":18,"column":23,"nodeType":"1008","messageId":"1009","endLine":18,"endColumn":35},{"ruleId":"1010","severity":1,"message":"1011","line":82,"column":48,"nodeType":"1012","messageId":"1013","endLine":82,"endColumn":50},{"ruleId":"1014","severity":1,"message":"1015","line":50,"column":13,"nodeType":"1016","endLine":54,"endColumn":14},{"ruleId":"1006","severity":1,"message":"1030","line":16,"column":7,"nodeType":"1008","messageId":"1009","endLine":16,"endColumn":15},{"ruleId":"1006","severity":1,"message":"1030","line":21,"column":7,"nodeType":"1008","messageId":"1009","endLine":21,"endColumn":15},{"ruleId":"1006","severity":1,"message":"1031","line":62,"column":24,"nodeType":"1008","messageId":"1009","endLine":62,"endColumn":39},{"ruleId":"1006","severity":1,"message":"1032","line":63,"column":26,"nodeType":"1008","messageId":"1009","endLine":63,"endColumn":43},{"ruleId":"1006","severity":1,"message":"1033","line":64,"column":25,"nodeType":"1008","messageId":"1009","endLine":64,"endColumn":41},{"ruleId":"1006","severity":1,"message":"1034","line":65,"column":25,"nodeType":"1008","messageId":"1009","endLine":65,"endColumn":41},{"ruleId":"1006","severity":1,"message":"1035","line":66,"column":23,"nodeType":"1008","messageId":"1009","endLine":66,"endColumn":37},{"ruleId":"1006","severity":1,"message":"1038","line":3,"column":8,"nodeType":"1008","messageId":"1009","endLine":3,"endColumn":14},{"ruleId":"1019","severity":1,"message":"1079","line":28,"column":7,"nodeType":"1021","endLine":28,"endColumn":9,"suggestions":"1169"},{"ruleId":"1010","severity":1,"message":"1029","line":46,"column":44,"nodeType":"1012","messageId":"1013","endLine":46,"endColumn":46},{"ruleId":"1019","severity":1,"message":"1079","line":57,"column":8,"nodeType":"1021","endLine":57,"endColumn":20,"suggestions":"1170"},{"ruleId":"1006","severity":1,"message":"1074","line":16,"column":12,"nodeType":"1008","messageId":"1009","endLine":16,"endColumn":28},{"ruleId":"1019","severity":1,"message":"1075","line":25,"column":8,"nodeType":"1021","endLine":25,"endColumn":10,"suggestions":"1171"},{"ruleId":"1006","severity":1,"message":"1017","line":36,"column":12,"nodeType":"1008","messageId":"1009","endLine":36,"endColumn":28},{"ruleId":"1006","severity":1,"message":"1025","line":37,"column":11,"nodeType":"1008","messageId":"1009","endLine":37,"endColumn":26},{"ruleId":"1006","severity":1,"message":"1077","line":62,"column":12,"nodeType":"1008","messageId":"1009","endLine":62,"endColumn":25},{"ruleId":"1039","severity":1,"message":"1040","line":64,"column":35,"nodeType":"1041","messageId":"1042","endLine":64,"endColumn":37},{"ruleId":"1019","severity":1,"message":"1075","line":86,"column":8,"nodeType":"1021","endLine":86,"endColumn":20,"suggestions":"1172"},{"ruleId":"1010","severity":1,"message":"1029","line":130,"column":50,"nodeType":"1012","messageId":"1013","endLine":130,"endColumn":52},{"ruleId":"1006","severity":1,"message":"1102","line":4,"column":8,"nodeType":"1008","messageId":"1009","endLine":4,"endColumn":23},{"ruleId":"1019","severity":1,"message":"1103","line":31,"column":7,"nodeType":"1021","endLine":31,"endColumn":22,"suggestions":"1173"},{"ruleId":"1019","severity":1,"message":"1105","line":65,"column":7,"nodeType":"1021","endLine":65,"endColumn":20,"suggestions":"1174"},{"ruleId":"1006","severity":1,"message":"1124","line":3,"column":8,"nodeType":"1008","messageId":"1009","endLine":3,"endColumn":26},{"ruleId":"1006","severity":1,"message":"1125","line":6,"column":8,"nodeType":"1008","messageId":"1009","endLine":6,"endColumn":14},{"ruleId":"1126","severity":1,"message":"1127","line":44,"column":16,"nodeType":"1128","messageId":"1129","endLine":44,"endColumn":24,"fix":"1175"},{"ruleId":"1126","severity":1,"message":"1127","line":83,"column":16,"nodeType":"1128","messageId":"1129","endLine":83,"endColumn":24,"fix":"1176"},{"ruleId":"1087","severity":1,"message":"1088","line":89,"column":57,"nodeType":"1012","messageId":"1089","endLine":89,"endColumn":58},{"ruleId":"1126","severity":1,"message":"1127","line":117,"column":16,"nodeType":"1128","messageId":"1129","endLine":117,"endColumn":24,"fix":"1177"},{"ruleId":"1087","severity":1,"message":"1088","line":123,"column":34,"nodeType":"1012","messageId":"1089","endLine":123,"endColumn":35},{"ruleId":"1087","severity":1,"message":"1088","line":123,"column":39,"nodeType":"1012","messageId":"1089","endLine":123,"endColumn":40},{"ruleId":"1087","severity":1,"message":"1088","line":123,"column":43,"nodeType":"1012","messageId":"1089","endLine":123,"endColumn":44},{"ruleId":"1014","severity":1,"message":"1133","line":150,"column":13,"nodeType":"1016","endLine":150,"endColumn":56},{"ruleId":"1014","severity":1,"message":"1133","line":153,"column":13,"nodeType":"1016","endLine":153,"endColumn":57},{"ruleId":"1014","severity":1,"message":"1133","line":156,"column":13,"nodeType":"1016","endLine":156,"endColumn":56},{"ruleId":"1019","severity":1,"message":"1107","line":30,"column":8,"nodeType":"1021","endLine":30,"endColumn":39,"suggestions":"1178"},{"ruleId":"1019","severity":1,"message":"1109","line":35,"column":7,"nodeType":"1021","endLine":35,"endColumn":22,"suggestions":"1179"},{"ruleId":"1019","severity":1,"message":"1111","line":40,"column":7,"nodeType":"1021","endLine":40,"endColumn":23,"suggestions":"1180"},{"ruleId":"1019","severity":1,"message":"1113","line":129,"column":8,"nodeType":"1021","endLine":129,"endColumn":21,"suggestions":"1181"},{"ruleId":"1006","severity":1,"message":"1115","line":15,"column":12,"nodeType":"1008","messageId":"1009","endLine":15,"endColumn":19},{"ruleId":"1006","severity":1,"message":"1017","line":18,"column":12,"nodeType":"1008","messageId":"1009","endLine":18,"endColumn":28},{"ruleId":"1006","severity":1,"message":"1116","line":24,"column":12,"nodeType":"1008","messageId":"1009","endLine":24,"endColumn":24},{"ruleId":"1019","severity":1,"message":"1117","line":41,"column":8,"nodeType":"1021","endLine":41,"endColumn":23,"suggestions":"1182"},{"ruleId":"1006","severity":1,"message":"1025","line":42,"column":11,"nodeType":"1008","messageId":"1009","endLine":42,"endColumn":26},{"ruleId":"1006","severity":1,"message":"1119","line":70,"column":11,"nodeType":"1008","messageId":"1009","endLine":70,"endColumn":20},{"ruleId":"1126","severity":1,"message":"1127","line":44,"column":16,"nodeType":"1128","messageId":"1129","endLine":44,"endColumn":24,"fix":"1183"},{"ruleId":"1126","severity":1,"message":"1127","line":84,"column":16,"nodeType":"1128","messageId":"1129","endLine":84,"endColumn":24,"fix":"1184"},{"ruleId":"1087","severity":1,"message":"1088","line":90,"column":57,"nodeType":"1012","messageId":"1089","endLine":90,"endColumn":58},{"ruleId":"1126","severity":1,"message":"1127","line":117,"column":16,"nodeType":"1128","messageId":"1129","endLine":117,"endColumn":24,"fix":"1185"},{"ruleId":"1087","severity":1,"message":"1088","line":123,"column":34,"nodeType":"1012","messageId":"1089","endLine":123,"endColumn":35},{"ruleId":"1087","severity":1,"message":"1088","line":123,"column":39,"nodeType":"1012","messageId":"1089","endLine":123,"endColumn":40},{"ruleId":"1087","severity":1,"message":"1088","line":123,"column":43,"nodeType":"1012","messageId":"1089","endLine":123,"endColumn":44},{"ruleId":"1014","severity":1,"message":"1133","line":152,"column":13,"nodeType":"1016","endLine":152,"endColumn":56},{"ruleId":"1014","severity":1,"message":"1133","line":155,"column":13,"nodeType":"1016","endLine":155,"endColumn":57},{"ruleId":"1014","severity":1,"message":"1133","line":158,"column":13,"nodeType":"1016","endLine":158,"endColumn":56},{"ruleId":"1006","severity":1,"message":"1017","line":17,"column":12,"nodeType":"1008","messageId":"1009","endLine":17,"endColumn":28},{"ruleId":"1019","severity":1,"message":"1120","line":29,"column":8,"nodeType":"1021","endLine":29,"endColumn":23,"suggestions":"1186"},{"ruleId":"1019","severity":1,"message":"1122","line":44,"column":8,"nodeType":"1021","endLine":44,"endColumn":21,"suggestions":"1187"},{"ruleId":"1006","severity":1,"message":"1025","line":58,"column":11,"nodeType":"1008","messageId":"1009","endLine":58,"endColumn":26},{"ruleId":"1036","severity":1,"message":"1037","line":10,"column":13,"nodeType":"1016","endLine":10,"endColumn":49},{"ruleId":"1006","severity":1,"message":"1083","line":16,"column":10,"nodeType":"1008","messageId":"1009","endLine":16,"endColumn":23},{"ruleId":"1019","severity":1,"message":"1052","line":25,"column":6,"nodeType":"1021","endLine":25,"endColumn":8,"suggestions":"1188"},{"ruleId":"1006","severity":1,"message":"1141","line":47,"column":10,"nodeType":"1008","messageId":"1009","endLine":47,"endColumn":29},{"ruleId":"1039","severity":1,"message":"1040","line":51,"column":27,"nodeType":"1041","messageId":"1042","endLine":51,"endColumn":29},{"ruleId":"1039","severity":1,"message":"1040","line":61,"column":33,"nodeType":"1041","messageId":"1042","endLine":61,"endColumn":35},{"ruleId":"1010","severity":1,"message":"1029","line":85,"column":19,"nodeType":"1012","messageId":"1013","endLine":85,"endColumn":21},{"ruleId":"1039","severity":1,"message":"1051","line":150,"column":37,"nodeType":"1041","messageId":"1042","endLine":150,"endColumn":39},{"ruleId":"1010","severity":1,"message":"1029","line":490,"column":33,"nodeType":"1012","messageId":"1013","endLine":490,"endColumn":35},{"ruleId":"1039","severity":1,"message":"1040","line":16,"column":33,"nodeType":"1041","messageId":"1042","endLine":16,"endColumn":35},{"ruleId":"1019","severity":1,"message":"1043","line":27,"column":8,"nodeType":"1021","endLine":27,"endColumn":25,"suggestions":"1189"},{"ruleId":"1006","severity":1,"message":"1064","line":34,"column":10,"nodeType":"1008","messageId":"1009","endLine":34,"endColumn":21},{"ruleId":"1006","severity":1,"message":"1065","line":38,"column":10,"nodeType":"1008","messageId":"1009","endLine":38,"endColumn":19},{"ruleId":"1019","severity":1,"message":"1020","line":47,"column":6,"nodeType":"1021","endLine":47,"endColumn":8,"suggestions":"1190"},{"ruleId":"1006","severity":1,"message":"1067","line":57,"column":7,"nodeType":"1008","messageId":"1009","endLine":57,"endColumn":24},{"ruleId":"1019","severity":1,"message":"1020","line":76,"column":6,"nodeType":"1021","endLine":76,"endColumn":8,"suggestions":"1191"},{"ruleId":"1010","severity":1,"message":"1011","line":81,"column":33,"nodeType":"1012","messageId":"1013","endLine":81,"endColumn":35},{"ruleId":"1019","severity":1,"message":"1020","line":91,"column":6,"nodeType":"1021","endLine":91,"endColumn":20,"suggestions":"1192"},{"ruleId":"1006","severity":1,"message":"1050","line":134,"column":9,"nodeType":"1008","messageId":"1009","endLine":134,"endColumn":20},{"ruleId":"1039","severity":1,"message":"1040","line":151,"column":27,"nodeType":"1041","messageId":"1042","endLine":151,"endColumn":29},{"ruleId":"1019","severity":1,"message":"1020","line":167,"column":6,"nodeType":"1021","endLine":167,"endColumn":16,"suggestions":"1193"},{"ruleId":"1039","severity":1,"message":"1040","line":171,"column":29,"nodeType":"1041","messageId":"1042","endLine":171,"endColumn":31},{"ruleId":"1039","severity":1,"message":"1040","line":184,"column":29,"nodeType":"1041","messageId":"1042","endLine":184,"endColumn":31},{"ruleId":"1010","severity":1,"message":"1029","line":187,"column":41,"nodeType":"1012","messageId":"1013","endLine":187,"endColumn":43},{"ruleId":"1010","severity":1,"message":"1029","line":204,"column":31,"nodeType":"1012","messageId":"1013","endLine":204,"endColumn":33},{"ruleId":"1019","severity":1,"message":"1020","line":57,"column":6,"nodeType":"1021","endLine":57,"endColumn":8,"suggestions":"1194"},{"ruleId":"1010","severity":1,"message":"1029","line":67,"column":52,"nodeType":"1012","messageId":"1013","endLine":67,"endColumn":54},{"ruleId":"1039","severity":1,"message":"1040","line":71,"column":23,"nodeType":"1041","messageId":"1042","endLine":71,"endColumn":25},{"ruleId":"1010","severity":1,"message":"1029","line":111,"column":31,"nodeType":"1012","messageId":"1013","endLine":111,"endColumn":33},{"ruleId":"1010","severity":1,"message":"1029","line":120,"column":31,"nodeType":"1012","messageId":"1013","endLine":120,"endColumn":33},{"ruleId":"1019","severity":1,"message":"1020","line":138,"column":6,"nodeType":"1021","endLine":138,"endColumn":8,"suggestions":"1195"},{"ruleId":"1006","severity":1,"message":"1082","line":14,"column":12,"nodeType":"1008","messageId":"1009","endLine":14,"endColumn":30},{"ruleId":"1006","severity":1,"message":"1083","line":15,"column":12,"nodeType":"1008","messageId":"1009","endLine":15,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1084","line":15,"column":27,"nodeType":"1008","messageId":"1009","endLine":15,"endColumn":43},{"ruleId":"1019","severity":1,"message":"1020","line":22,"column":8,"nodeType":"1021","endLine":22,"endColumn":10,"suggestions":"1196"},{"ruleId":"1019","severity":1,"message":"1052","line":25,"column":8,"nodeType":"1021","endLine":25,"endColumn":10,"suggestions":"1197"},{"ruleId":"1087","severity":1,"message":"1088","line":42,"column":45,"nodeType":"1012","messageId":"1089","endLine":42,"endColumn":46},{"ruleId":"1087","severity":1,"message":"1088","line":45,"column":45,"nodeType":"1012","messageId":"1089","endLine":45,"endColumn":46},{"ruleId":"1087","severity":1,"message":"1088","line":45,"column":51,"nodeType":"1012","messageId":"1089","endLine":45,"endColumn":52},{"ruleId":"1087","severity":1,"message":"1088","line":48,"column":45,"nodeType":"1012","messageId":"1089","endLine":48,"endColumn":46},{"ruleId":"1087","severity":1,"message":"1088","line":48,"column":51,"nodeType":"1012","messageId":"1089","endLine":48,"endColumn":52},{"ruleId":"1087","severity":1,"message":"1088","line":51,"column":45,"nodeType":"1012","messageId":"1089","endLine":51,"endColumn":46},{"ruleId":"1087","severity":1,"message":"1088","line":51,"column":51,"nodeType":"1012","messageId":"1089","endLine":51,"endColumn":52},{"ruleId":"1090","severity":1,"message":"1091","line":67,"column":17,"nodeType":"1008","messageId":"1092","endLine":67,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1093","line":68,"column":17,"nodeType":"1008","messageId":"1092","endLine":68,"endColumn":19},{"ruleId":"1039","severity":1,"message":"1051","line":110,"column":41,"nodeType":"1041","messageId":"1042","endLine":110,"endColumn":43},{"ruleId":"1006","severity":1,"message":"1153","line":10,"column":25,"nodeType":"1008","messageId":"1009","endLine":10,"endColumn":41},{"ruleId":"1019","severity":1,"message":"1143","line":13,"column":6,"nodeType":"1021","endLine":13,"endColumn":8,"suggestions":"1198"},{"ruleId":"1155","severity":1,"message":"1156","line":32,"column":42,"nodeType":"1157","messageId":"1158","endLine":32,"endColumn":73,"fix":"1199"},{"ruleId":"1006","severity":1,"message":"1047","line":12,"column":10,"nodeType":"1008","messageId":"1009","endLine":12,"endColumn":23},{"ruleId":"1006","severity":1,"message":"1033","line":12,"column":25,"nodeType":"1008","messageId":"1009","endLine":12,"endColumn":41},{"ruleId":"1006","severity":1,"message":"1142","line":13,"column":25,"nodeType":"1008","messageId":"1009","endLine":13,"endColumn":41},{"ruleId":"1019","severity":1,"message":"1143","line":16,"column":6,"nodeType":"1021","endLine":16,"endColumn":8,"suggestions":"1200"},{"ruleId":"1006","severity":1,"message":"1145","line":17,"column":10,"nodeType":"1008","messageId":"1009","endLine":17,"endColumn":22},{"ruleId":"1039","severity":1,"message":"1040","line":23,"column":22,"nodeType":"1041","messageId":"1042","endLine":23,"endColumn":24},{"ruleId":"1006","severity":1,"message":"1146","line":29,"column":10,"nodeType":"1008","messageId":"1009","endLine":29,"endColumn":30},{"ruleId":"1006","severity":1,"message":"1147","line":30,"column":10,"nodeType":"1008","messageId":"1009","endLine":30,"endColumn":31},{"ruleId":"1006","severity":1,"message":"1148","line":31,"column":9,"nodeType":"1008","messageId":"1009","endLine":31,"endColumn":27},{"ruleId":"1006","severity":1,"message":"1149","line":34,"column":9,"nodeType":"1008","messageId":"1009","endLine":34,"endColumn":28},{"ruleId":"1006","severity":1,"message":"1153","line":10,"column":25,"nodeType":"1008","messageId":"1009","endLine":10,"endColumn":41},{"ruleId":"1006","severity":1,"message":"1026","line":11,"column":7,"nodeType":"1008","messageId":"1009","endLine":11,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1027","line":20,"column":7,"nodeType":"1008","messageId":"1009","endLine":20,"endColumn":23},{"ruleId":"1006","severity":1,"message":"1201","line":2,"column":10,"nodeType":"1008","messageId":"1009","endLine":2,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1102","line":3,"column":8,"nodeType":"1008","messageId":"1009","endLine":3,"endColumn":23},{"ruleId":"1006","severity":1,"message":"1124","line":4,"column":8,"nodeType":"1008","messageId":"1009","endLine":4,"endColumn":26},{"ruleId":"1006","severity":1,"message":"1202","line":5,"column":10,"nodeType":"1008","messageId":"1009","endLine":5,"endColumn":17},{"ruleId":"1006","severity":1,"message":"1096","line":18,"column":12,"nodeType":"1008","messageId":"1009","endLine":18,"endColumn":26},{"ruleId":"1039","severity":1,"message":"1040","line":31,"column":33,"nodeType":"1041","messageId":"1042","endLine":31,"endColumn":35},{"ruleId":"1019","severity":1,"message":"1043","line":42,"column":8,"nodeType":"1021","endLine":42,"endColumn":34,"suggestions":"1203"},{"ruleId":"1019","severity":1,"message":"1098","line":59,"column":8,"nodeType":"1021","endLine":59,"endColumn":10,"suggestions":"1204"},{"ruleId":"1006","severity":1,"message":"1205","line":84,"column":11,"nodeType":"1008","messageId":"1009","endLine":84,"endColumn":20},{"ruleId":"1006","severity":1,"message":"1150","line":17,"column":23,"nodeType":"1008","messageId":"1009","endLine":17,"endColumn":37},{"ruleId":"1019","severity":1,"message":"1143","line":20,"column":6,"nodeType":"1021","endLine":20,"endColumn":8,"suggestions":"1206"},{"ruleId":"1055","severity":1,"message":"1152","line":208,"column":52,"nodeType":"1057","messageId":"1058","endLine":208,"endColumn":74},{"ruleId":"1006","severity":1,"message":"1160","line":9,"column":26,"nodeType":"1008","messageId":"1009","endLine":9,"endColumn":41},{"ruleId":"1019","severity":1,"message":"1143","line":12,"column":8,"nodeType":"1021","endLine":12,"endColumn":10,"suggestions":"1207"},{"ruleId":"1006","severity":1,"message":"1208","line":1,"column":17,"nodeType":"1008","messageId":"1009","endLine":1,"endColumn":26},{"ruleId":"1010","severity":1,"message":"1029","line":146,"column":66,"nodeType":"1012","messageId":"1013","endLine":146,"endColumn":68},{"ruleId":"1006","severity":1,"message":"1045","line":3,"column":10,"nodeType":"1008","messageId":"1009","endLine":3,"endColumn":28},{"ruleId":"1006","severity":1,"message":"1046","line":7,"column":8,"nodeType":"1008","messageId":"1009","endLine":7,"endColumn":29},{"ruleId":"1006","severity":1,"message":"1047","line":19,"column":12,"nodeType":"1008","messageId":"1009","endLine":19,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1033","line":19,"column":27,"nodeType":"1008","messageId":"1009","endLine":19,"endColumn":43},{"ruleId":"1006","severity":1,"message":"1048","line":20,"column":12,"nodeType":"1008","messageId":"1009","endLine":20,"endColumn":22},{"ruleId":"1006","severity":1,"message":"1049","line":21,"column":12,"nodeType":"1008","messageId":"1009","endLine":21,"endColumn":23},{"ruleId":"1006","severity":1,"message":"1050","line":32,"column":11,"nodeType":"1008","messageId":"1009","endLine":32,"endColumn":22},{"ruleId":"1039","severity":1,"message":"1051","line":34,"column":41,"nodeType":"1041","messageId":"1042","endLine":34,"endColumn":43},{"ruleId":"1019","severity":1,"message":"1052","line":55,"column":8,"nodeType":"1021","endLine":55,"endColumn":10,"suggestions":"1209"},{"ruleId":"1019","severity":1,"message":"1020","line":80,"column":8,"nodeType":"1021","endLine":80,"endColumn":23,"suggestions":"1210"},{"ruleId":"1039","severity":1,"message":"1051","line":186,"column":41,"nodeType":"1041","messageId":"1042","endLine":186,"endColumn":43},{"ruleId":"1055","severity":1,"message":"1056","line":240,"column":74,"nodeType":"1057","messageId":"1058","endLine":240,"endColumn":90},{"ruleId":"1055","severity":1,"message":"1056","line":241,"column":74,"nodeType":"1057","messageId":"1058","endLine":241,"endColumn":90},{"ruleId":"1055","severity":1,"message":"1059","line":258,"column":86,"nodeType":"1057","messageId":"1058","endLine":258,"endColumn":114},{"ruleId":"1055","severity":1,"message":"1059","line":259,"column":86,"nodeType":"1057","messageId":"1058","endLine":259,"endColumn":114},{"ruleId":"1010","severity":1,"message":"1029","line":512,"column":37,"nodeType":"1012","messageId":"1013","endLine":512,"endColumn":39},{"ruleId":"1006","severity":1,"message":"1162","line":5,"column":8,"nodeType":"1008","messageId":"1009","endLine":5,"endColumn":32},{"ruleId":"1006","severity":1,"message":"1163","line":11,"column":21,"nodeType":"1008","messageId":"1009","endLine":11,"endColumn":33},{"ruleId":"1006","severity":1,"message":"1026","line":12,"column":7,"nodeType":"1008","messageId":"1009","endLine":12,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1164","line":21,"column":7,"nodeType":"1008","messageId":"1009","endLine":21,"endColumn":17},{"ruleId":"1006","severity":1,"message":"1027","line":22,"column":7,"nodeType":"1008","messageId":"1009","endLine":22,"endColumn":23},{"ruleId":"1006","severity":1,"message":"1060","line":9,"column":12,"nodeType":"1008","messageId":"1009","endLine":9,"endColumn":16},{"ruleId":"1019","severity":1,"message":"1137","line":13,"column":7,"nodeType":"1021","endLine":13,"endColumn":9,"suggestions":"1211"},{"ruleId":"1019","severity":1,"message":"1100","line":17,"column":5,"nodeType":"1021","endLine":17,"endColumn":18,"suggestions":"1212"},{"ruleId":"1006","severity":1,"message":"1060","line":11,"column":12,"nodeType":"1008","messageId":"1009","endLine":11,"endColumn":16},{"ruleId":"1006","severity":1,"message":"1061","line":11,"column":18,"nodeType":"1008","messageId":"1009","endLine":11,"endColumn":25},{"ruleId":"1006","severity":1,"message":"1073","line":4,"column":8,"nodeType":"1008","messageId":"1009","endLine":4,"endColumn":18},{"ruleId":"1006","severity":1,"message":"1062","line":2,"column":8,"nodeType":"1008","messageId":"1009","endLine":2,"endColumn":17},{"ruleId":"1006","severity":1,"message":"1063","line":3,"column":8,"nodeType":"1008","messageId":"1009","endLine":3,"endColumn":20},{"ruleId":"1006","severity":1,"message":"1071","line":4,"column":8,"nodeType":"1008","messageId":"1009","endLine":4,"endColumn":13},{"ruleId":"1006","severity":1,"message":"1072","line":5,"column":8,"nodeType":"1008","messageId":"1009","endLine":5,"endColumn":13},{"ruleId":"1006","severity":1,"message":"1062","line":2,"column":8,"nodeType":"1008","messageId":"1009","endLine":2,"endColumn":17},{"ruleId":"1006","severity":1,"message":"1063","line":4,"column":8,"nodeType":"1008","messageId":"1009","endLine":4,"endColumn":20},{"ruleId":"1006","severity":1,"message":"1213","line":2,"column":8,"nodeType":"1008","messageId":"1009","endLine":2,"endColumn":27},"no-unused-vars","'logoutbtn' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'changedmodalview' is assigned a value but never used.","'rowdataonbooking' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.","ArrayExpression",["1214"],"React Hook useEffect has a missing dependency: 'displaycustomerfollowupevent'. Either include it or remove the dependency array.",["1215"],"'modalviewchange' is assigned a value but never used.","'finalCustomerRefNo' is assigned a value but never used.","'finalcurrentdate' is assigned a value but never used.",["1216"],"Expected '===' and instead saw '=='.","'navigate' is assigned a value but never used.","'setstatusselect' is assigned a value but never used.","'setDeliverystatus' is assigned a value but never used.","'setpaymentstatus' is assigned a value but never used.","'setProductstatus' is assigned a value but never used.","'setGstinstatus' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'toWords'. Either include it or remove the dependency array.",["1217"],"'purchasesuccessmsg' is defined but never used.","'CustomizedComboboxAll' is defined but never used.","'paymentstatus' is assigned a value but never used.","'bookeddate' is assigned a value but never used.","'productdata' is assigned a value but never used.","'selectevent' is assigned a value but never used.","Array.prototype.find() expects a return value from arrow function.","React Hook useEffect has a missing dependency: 'fetchalldatafromcust'. Either include it or remove the dependency array.",["1218"],["1219"],"no-self-assign","'data.booked_date' is assigned to itself.","MemberExpression","selfAssignment","'data.requested_delivery_date' is assigned to itself.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'TextField' is defined but never used.","'Autocomplete' is defined but never used.","'productname' is assigned a value but never used.","'statecode' is assigned a value but never used.",["1220"],"'finalpreInvoiceNo' is assigned a value but never used.",["1221"],["1222"],["1223"],"'parse' is defined but never used.","'match' is defined but never used.","'InputLabel' is defined but never used.","'currentinvoiceno' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'displayBookedCustomeerDataEvent'. Either include it or remove the dependency array.",["1224"],"'customerrefno' is assigned a value but never used.",["1225"],"React Hook useEffect has a missing dependency: 'displayDealersDetailsDatawithstatusactiveevent'. Either include it or remove the dependency array.",["1226"],["1227"],"'finalinvoicenumber' is assigned a value but never used.","'updaterowdata' is assigned a value but never used.","'setUpdaterowdata' is assigned a value but never used.",["1228"],["1229"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-redeclare","'y1' is already defined.","redeclared","'y2' is already defined.",["1230"],["1231"],"'listofinvoices' is assigned a value but never used.",["1232"],"React Hook useEffect has missing dependencies: 'custrefno' and 'invoiceno'. Either include them or remove the dependency array.",["1233"],"React Hook React.useEffect has a missing dependency: 'currentStatusEvent'. Either include it or remove the dependency array. If 'currentStatusEvent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1234"],"'CustomizedPrint' is defined but never used.","React Hook useEffect has missing dependencies: 'displayCustomerFollowUpData', 'filterflag', and 'statusfiltercustomerdata'. Either include them or remove the dependency array.",["1235"],"React Hook useEffect has a missing dependency: 'displayCustomerFollowUpData'. Either include it or remove the dependency array.",["1236"],"React Hook useEffect has missing dependencies: 'displayDeliveryReportsData', 'filterflag', and 'statusfilterdeliveryreport'. Either include them or remove the dependency array.",["1237"],"React Hook useEffect has a missing dependency: 'paymentstatusfilteronly'. Either include it or remove the dependency array.",["1238"],"React Hook useEffect has a missing dependency: 'deliverystatusfilteronly'. Either include it or remove the dependency array.",["1239"],"React Hook useEffect has a missing dependency: 'displayDeliveryReportsData'. Either include it or remove the dependency array.",["1240"],"'editRow' is assigned a value but never used.","'editFormData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filterflag' and 'productstatusfilter'. Either include them or remove the dependency array.",["1241"],"'editevent' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'displayDealersDetailsData', 'filterflag', and 'gstinstatusfilterdealersdata'. Either include them or remove the dependency array.",["1242"],"React Hook useEffect has a missing dependency: 'displayDealersDetailsData'. Either include it or remove the dependency array.",["1243"],"'CustomizedDownload' is defined but never used.","'moment' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"1244","text":"1245"},{"range":"1246","text":"1245"},{"range":"1247","text":"1245"},"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"range":"1248","text":"1245"},{"range":"1249","text":"1245"},{"range":"1250","text":"1245"},"React Hook useEffect has a missing dependency: 'resultDate'. Either include it or remove the dependency array.",["1251"],["1252"],["1253"],"'constantinvoicedata' is assigned a value but never used.","'setdeliverstatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'rowdata'. Either include it or remove the dependency array. If 'setUpdaterowdata' needs the current value of 'rowdata', you can also switch to useReducer instead of useState and read 'rowdata' in the reducer.",["1254"],"'comboboxdata' is assigned a value but never used.","'updatedPaymentstatus' is assigned a value but never used.","'updatedDeliverystatus' is assigned a value but never used.","'paymentstatusevent' is assigned a value but never used.","'deliverystatusevent' is assigned a value but never used.","'setfinalstatus' is assigned a value but never used.",["1255"],"'rowdata.follow_up_call' is assigned to itself.","'setproductstatus' is assigned a value but never used.",["1256"],"no-useless-computed-key","Unnecessarily computed property [\"product_status\"] found.","Property","unnecessarilyComputedProperty",{"range":"1257","text":"1258"},"'setdealerstatus' is assigned a value but never used.",["1259"],"'CustomizedComboboxForAll' is defined but never used.","'setgststatus' is assigned a value but never used.","'updatedate' is assigned a value but never used.",["1260"],["1261"],"'CustomizedBtn' is defined but never used.","'setModalview' is assigned a value but never used.",["1262"],["1263"],["1264"],["1265"],["1266"],["1267"],{"range":"1268","text":"1245"},{"range":"1269","text":"1245"},{"range":"1270","text":"1245"},["1271"],["1272"],["1273"],["1274"],["1275"],{"range":"1276","text":"1245"},{"range":"1277","text":"1245"},{"range":"1278","text":"1245"},["1279"],["1280"],["1281"],["1282"],["1283"],["1284"],["1285"],["1286"],["1287"],["1288"],["1289"],["1290"],["1291"],{"range":"1292","text":"1258"},["1293"],"'useReactToPrint' is defined but never used.","'CSVLink' is defined but never used.",["1294"],["1295"],"'csvReport' is assigned a value but never used.",["1296"],["1297"],"'useEffect' is defined but never used.",["1298"],["1299"],["1300"],["1301"],"'AddFewCustomersForm' is defined but never used.",{"desc":"1302","fix":"1303"},{"desc":"1304","fix":"1305"},{"desc":"1306","fix":"1307"},{"desc":"1308","fix":"1309"},{"desc":"1310","fix":"1311"},{"desc":"1312","fix":"1313"},{"desc":"1314","fix":"1315"},{"desc":"1314","fix":"1316"},{"desc":"1317","fix":"1318"},{"desc":"1319","fix":"1320"},{"desc":"1321","fix":"1322"},{"desc":"1323","fix":"1324"},{"desc":"1325","fix":"1326"},{"desc":"1327","fix":"1328"},{"desc":"1314","fix":"1329"},{"desc":"1310","fix":"1330"},{"desc":"1314","fix":"1331"},{"desc":"1314","fix":"1332"},{"desc":"1333","fix":"1334"},{"desc":"1335","fix":"1336"},{"desc":"1337","fix":"1338"},{"desc":"1339","fix":"1340"},{"desc":"1341","fix":"1342"},{"desc":"1343","fix":"1344"},{"desc":"1345","fix":"1346"},{"desc":"1347","fix":"1348"},{"desc":"1349","fix":"1350"},{"desc":"1351","fix":"1352"},{"desc":"1353","fix":"1354"},{"desc":"1355","fix":"1356"},[1286,1286],"()",[2267,2267],[3109,3109],[1209,1209],[2191,2191],[3032,3032],{"desc":"1357","fix":"1358"},{"desc":"1359","fix":"1360"},{"desc":"1310","fix":"1361"},{"desc":"1362","fix":"1363"},{"desc":"1362","fix":"1364"},{"desc":"1362","fix":"1365"},[1130,1148],"\"product_status\"",{"desc":"1362","fix":"1366"},{"desc":"1304","fix":"1367"},{"desc":"1306","fix":"1368"},{"desc":"1325","fix":"1369"},{"desc":"1327","fix":"1370"},{"desc":"1321","fix":"1371"},{"desc":"1323","fix":"1372"},{"desc":"1339","fix":"1373"},{"desc":"1341","fix":"1374"},[1289,1289],[2273,2273],[3118,3118],{"desc":"1343","fix":"1375"},{"desc":"1345","fix":"1376"},{"desc":"1347","fix":"1377"},{"desc":"1349","fix":"1378"},{"desc":"1351","fix":"1379"},[1212,1212],[2197,2197],[3041,3041],{"desc":"1353","fix":"1380"},{"desc":"1355","fix":"1381"},{"desc":"1310","fix":"1382"},{"desc":"1308","fix":"1383"},{"desc":"1314","fix":"1384"},{"desc":"1314","fix":"1385"},{"desc":"1317","fix":"1386"},{"desc":"1319","fix":"1387"},{"desc":"1314","fix":"1388"},{"desc":"1314","fix":"1389"},{"desc":"1314","fix":"1390"},{"desc":"1310","fix":"1391"},{"desc":"1362","fix":"1392"},[1133,1151],{"desc":"1362","fix":"1393"},{"desc":"1333","fix":"1394"},{"desc":"1335","fix":"1395"},{"desc":"1362","fix":"1396"},{"desc":"1362","fix":"1397"},{"desc":"1310","fix":"1398"},{"desc":"1312","fix":"1399"},{"desc":"1357","fix":"1400"},{"desc":"1337","fix":"1401"},"Update the dependencies array to be: [api, temprowdataonbooking]",{"range":"1402","text":"1403"},"Update the dependencies array to be: [displaycustomerfollowupevent]",{"range":"1404","text":"1405"},"Update the dependencies array to be: [displaycustomerfollowupevent, searchData]",{"range":"1406","text":"1407"},"Update the dependencies array to be: [invoiceFormData, toWords]",{"range":"1408","text":"1409"},"Update the dependencies array to be: [fetchalldatafromcust]",{"range":"1410","text":"1411"},"Update the dependencies array to be: [api, updaterowdata]",{"range":"1412","text":"1413"},"Update the dependencies array to be: [api]",{"range":"1414","text":"1415"},{"range":"1416","text":"1415"},"Update the dependencies array to be: [api, customerdata]",{"range":"1417","text":"1418"},"Update the dependencies array to be: [api, products]",{"range":"1419","text":"1420"},"Update the dependencies array to be: [displayBookedCustomeerDataEvent]",{"range":"1421","text":"1422"},"Update the dependencies array to be: [displayBookedCustomeerDataEvent, searchData]",{"range":"1423","text":"1424"},"Update the dependencies array to be: [displayDealersDetailsDatawithstatusactiveevent]",{"range":"1425","text":"1426"},"Update the dependencies array to be: [displayDealersDetailsDatawithstatusactiveevent, searchData]",{"range":"1427","text":"1428"},{"range":"1429","text":"1415"},{"range":"1430","text":"1411"},{"range":"1431","text":"1415"},{"range":"1432","text":"1415"},"Update the dependencies array to be: [fetchdealersdatatoverify, toWords]",{"range":"1433","text":"1434"},"Update the dependencies array to be: [custrefno, invoiceno]",{"range":"1435","text":"1436"},"Update the dependencies array to be: [currentStatusEvent, finalstatus]",{"range":"1437","text":"1438"},"Update the dependencies array to be: [currentstatus, displayCustomerFollowUpData, filterflag, statusfiltercustomerdata]",{"range":"1439","text":"1440"},"Update the dependencies array to be: [displayCustomerFollowUpData, searchvalue]",{"range":"1441","text":"1442"},"Update the dependencies array to be: [deliverystatus, displayDeliveryReportsData, filterflag, paymentstatus, statusfilterdeliveryreport]",{"range":"1443","text":"1444"},"Update the dependencies array to be: [paymentstatus, paymentstatusfilteronly]",{"range":"1445","text":"1446"},"Update the dependencies array to be: [deliverystatus, deliverystatusfilteronly]",{"range":"1447","text":"1448"},"Update the dependencies array to be: [displayDeliveryReportsData, searchvalue]",{"range":"1449","text":"1450"},"Update the dependencies array to be: [currentstatus, filterflag, productstatusfilter]",{"range":"1451","text":"1452"},"Update the dependencies array to be: [currentstatus, displayDealersDetailsData, filterflag, gstinstatusfilterdealersdata]",{"range":"1453","text":"1454"},"Update the dependencies array to be: [displayDealersDetailsData, searchvalue]",{"range":"1455","text":"1456"},"Update the dependencies array to be: [resultDate]",{"range":"1457","text":"1458"},"Update the dependencies array to be: [api, fetchdealersdatatoverify]",{"range":"1459","text":"1460"},{"range":"1461","text":"1411"},"Update the dependencies array to be: [rowdata]",{"range":"1462","text":"1463"},{"range":"1464","text":"1463"},{"range":"1465","text":"1463"},{"range":"1466","text":"1463"},{"range":"1467","text":"1405"},{"range":"1468","text":"1407"},{"range":"1469","text":"1426"},{"range":"1470","text":"1428"},{"range":"1471","text":"1422"},{"range":"1472","text":"1424"},{"range":"1473","text":"1440"},{"range":"1474","text":"1442"},{"range":"1475","text":"1444"},{"range":"1476","text":"1446"},{"range":"1477","text":"1448"},{"range":"1478","text":"1450"},{"range":"1479","text":"1452"},{"range":"1480","text":"1454"},{"range":"1481","text":"1456"},{"range":"1482","text":"1411"},{"range":"1483","text":"1409"},{"range":"1484","text":"1415"},{"range":"1485","text":"1415"},{"range":"1486","text":"1418"},{"range":"1487","text":"1420"},{"range":"1488","text":"1415"},{"range":"1489","text":"1415"},{"range":"1490","text":"1415"},{"range":"1491","text":"1411"},{"range":"1492","text":"1463"},{"range":"1493","text":"1463"},{"range":"1494","text":"1434"},{"range":"1495","text":"1436"},{"range":"1496","text":"1463"},{"range":"1497","text":"1463"},{"range":"1498","text":"1411"},{"range":"1499","text":"1413"},{"range":"1500","text":"1458"},{"range":"1501","text":"1438"},[3812,3834],"[api, temprowdataonbooking]",[3905,3907],"[displaycustomerfollowupevent]",[5950,5962],"[displaycustomerfollowupevent, searchData]",[1395,1412],"[invoiceFormData, toWords]",[2154,2156],"[fetchalldatafromcust]",[2962,2977],"[api, updaterowdata]",[1708,1710],"[api]",[2566,2568],[2952,2966],"[api, customerdata]",[5395,5405],"[api, products]",[942,944],"[displayBookedCustomeerDataEvent]",[2852,2864],"[displayBookedCustomeerDataEvent, searchData]",[961,963],"[displayDealersDetailsDatawithstatusactiveevent]",[1778,1790],"[displayDealersDetailsDatawithstatusactiveevent, searchData]",[881,883],[946,948],[1869,1871],[4259,4261],[1787,1813],"[fetchdealersdatatoverify, toWords]",[2357,2359],"[custrefno, invoiceno]",[623,636],"[currentStatusEvent, finalstatus]",[1110,1125],"[currentstatus, displayCustomerFollowUpData, filterflag, statusfiltercustomerdata]",[2297,2310],"[displayCustomerFollowUpData, searchvalue]",[1070,1101],"[deliverystatus, displayDeliveryReportsData, filterflag, paymentstatus, statusfilterdeliveryreport]",[1206,1221],"[paymentstatus, paymentstatusfilteronly]",[1327,1343],"[deliverystatus, deliverystatusfilteronly]",[4344,4357],"[displayDeliveryReportsData, searchvalue]",[1505,1520],"[currentstatus, filterflag, productstatusfilter]",[1165,1180],"[currentstatus, displayDealersDetailsData, filterflag, gstinstatusfilterdealersdata]",[1572,1585],"[displayDealersDetailsData, searchvalue]",[331,333],"[resultDate]",[4117,4143],"[api, fetchdealersdatatoverify]",[816,818],[793,795],"[rowdata]",[724,726],[606,608],[610,612],[1653,1655],[5788,5800],[1064,1066],[1881,1893],[1021,1023],[2931,2943],[1110,1125],[2297,2310],[1070,1101],[1206,1221],[1327,1343],[4344,4357],[1485,1500],[1140,1155],[1569,1582],[885,887],[1132,1149],[1698,1700],[2556,2558],[2942,2956],[5385,5395],[1880,1882],[4270,4272],[881,883],[946,948],[606,608],[793,795],[1791,1817],[2367,2369],[764,766],[610,612],[2154,2156],[2962,2977],[331,333],[623,636]]